<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="req4500DAO">
	 <!-- out class define  -->
	<typeAlias alias="egovMap"	 	type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<!-- 요구사항 변경 히스토리 정보 가져오기-->
	<select id="req4500DAO.selectReq4500ReqHistoryList" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[
			/* req4500DAO.selectReq4500ReqHistoryList - 요구사항 변경 히스토리 정보 가져오기  */
			SELECT * FROM
			(
			SELECT 
			         /*+ INDEX_DESC (A IDX_REQ4700_REG_DTM ) */
			        'CHG' AS TYPE 
					,A.PRJ_ID
					,A.REQ_ID
					,D.REQ_NM
					,A.REQ_CHG_ID
					,A.REQ_CHG_TYPE
					,A.CHG_USR_ID
					,SF_ADM2000_USR_INFO(A.CHG_USR_ID,'1') AS CHG_USR_NM
					,SF_ADM2000_USR_INFO(A.CHG_USR_ID,'2') AS CHG_USR_EMAIL
					,A.CHG_DTM
					,A.PROCESS_ID
					,E.PROCESS_NM
					,A.PRE_FLOW_ID
					,B.FLOW_NM AS PRE_FLOW_NM
					,B.FLOW_ESSENTIAL_CD AS PRE_FLOW_ESSENTIAL_CD
					,B.FLOW_SIGN_CD AS PRE_FLOW_SIGN_CD
					,B.FLOW_END_CD AS PRE_FLOW_END_CD
					,B.FLOW_WORK_CD AS PRE_FLOW_WORK_CD
					,B.FLOW_NEXT_ID AS PRE_FLOW_NEXT_ID
					
					,B.FLOW_TITLE_BG_COLOR AS PRE_FLOW_TITLE_BG_COLOR
					,B.FLOW_TITLE_COLOR AS PRE_FLOW_TITLE_COLOR
					,B.FLOW_CONTENT_BG_COLOR AS PRE_FLOW_CONTENT_BG_COLOR
					,B.FLOW_CONTENT_COLOR AS PRE_FLOW_CONTENT_COLOR 
					,A.CHG_FLOW_ID
					,C.FLOW_NM AS CHG_FLOW_NM
					,C.FLOW_ESSENTIAL_CD AS CHG_FLOW_ESSENTIAL_CD
					,C.FLOW_SIGN_CD AS CHG_FLOW_SIGN_CD
					,C.FLOW_END_CD AS CHG_FLOW_END_CD
					,C.FLOW_WORK_CD AS CHG_FLOW_WORK_CD
					,C.FLOW_NEXT_ID AS CHG_FLOW_NEXT_ID
					
					,C.FLOW_TITLE_BG_COLOR AS CHG_FLOW_TITLE_BG_COLOR
					,C.FLOW_TITLE_COLOR AS CHG_FLOW_TITLE_COLOR
					,C.FLOW_CONTENT_BG_COLOR AS CHG_FLOW_CONTENT_BG_COLOR
					,C.FLOW_CONTENT_COLOR AS CHG_FLOW_CONTENT_COLOR 
					,A.PRE_CHARGER_ID
					,SF_ADM2000_USR_INFO(A.PRE_CHARGER_ID,'1') AS PRE_CHARGER_NM
					,A.CHG_CHARGER_ID
					,SF_ADM2000_USR_INFO(A.CHG_CHARGER_ID,'1') AS CHG_CHARGER_NM
					,A.REG_DTM
			FROM REQ4700 A, FLW1100 B, FLW1100 C, REQ4100 D, FLW1000 E
			WHERE 1=1
				AND A.PRJ_ID = B.PRJ_ID(+)
				AND A.PROCESS_ID = B.PROCESS_ID(+)
				AND A.PRE_FLOW_ID = B.FLOW_ID(+)
				AND A.PRJ_ID = C.PRJ_ID(+)
				AND A.PROCESS_ID = C.PROCESS_ID(+)
				AND A.CHG_FLOW_ID = C.FLOW_ID(+)
				AND A.PRJ_ID = D.PRJ_ID
				AND A.REQ_ID = D.REQ_ID(+)
				AND A.PRJ_ID = E.PRJ_ID(+)
				AND A.PROCESS_ID = E.PROCESS_ID(+)
				AND	A.PRJ_ID = #prjId#
				AND A.REG_DTM BETWEEN TO_DATE( #startDt# ,'YYYY-MM-DD' ) AND  TO_DATE( #endDt# ,'YYYY-MM-DD' ) +0.99999
		]]>
		
		<isNotEmpty property="reqId">
			AND A.REQ_ID = #reqId#
		</isNotEmpty>
		) 
		WHERE 1 = 1
		<isNotEmpty property="searchSelect">
			<isEqual property="searchSelect" compareValue="reqUsrNm"> 
				AND		CHG_USR_NM LIKE '%'|| #searchTxt# ||'%'
			</isEqual>
		</isNotEmpty>
		
		
	</select>
	
	<!-- 요구사항 결재 정보 가져오기-->
	<select id="req4500DAO.selectReq4500ReqSignList" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[
			/* req4500DAO.selectReq4500ReqSignList - 요구사항 결재 정보 가져오기  */
			SELECT * FROM 
			(
			SELECT 
				/*+ INDEX_DESC (A IDX_REQ4500_REG_DTM ) */
				'CHK' TYPE  
				,A.PRJ_ID
				,A.REQ_ID
				,C.REQ_NM
				,A.SIGN_ID
				,A.PROCESS_ID
				,A.SIGN_FLOW_ID
				,B.FLOW_NM AS SIGN_FLOW_NM
				,B.FLOW_TITLE_BG_COLOR AS SIGN_FLOW_TITLE_BG_COLOR
				,B.FLOW_TITLE_COLOR AS SIGN_FLOW_TITLE_COLOR
				,A.SIGN_USR_ID
				,SF_ADM2000_USR_INFO(A.SIGN_USR_ID,'1') AS SIGN_USR_NM
				,SF_ADM2000_USR_INFO(A.SIGN_USR_ID,'6') AS SIGN_USR_IMG
				,A.SIGN_CD
				,SF_ADM4100_COM_CD_INFO(#licGrpId#,'REQ00004',A.SIGN_CD,'1') AS SIGN_CD_NM
				,A.SIGN_REJECT_CMNT
				,A.SIGN_DTM
				,A.REG_DTM
				,A.REG_USR_ID
				,SF_ADM2000_USR_INFO(A.REG_USR_ID,'1') AS REG_USR_NM
				,SF_ADM2000_USR_INFO(A.REG_USR_ID,'6') AS REG_USR_IMG
				,A.REG_USR_IP
				
			FROM REQ4900 A, FLW1100 B, REQ4100 C  
			]]>
			WHERE 1=1
				AND A.PRJ_ID = B.PRJ_ID
				AND A.PROCESS_ID = B.PROCESS_ID
				AND A.SIGN_FLOW_ID = B.FLOW_ID(+)
				AND A.PRJ_ID = C.PRJ_ID
				AND A.REQ_ID = C.REQ_ID
			  	
        		AND	A.PRJ_ID = #prjId#
				AND A.REG_DTM BETWEEN TO_DATE( #startDt# ,'YYYY-MM-DD' ) AND  TO_DATE( #endDt# ,'YYYY-MM-DD' ) +0.99999
			<isNotEmpty property="reqId">
				AND A.REQ_ID = #reqId#
			</isNotEmpty>
			) WHERE 1 = 1
			<isNotEmpty property="searchSelect">
				<isEqual property="searchSelect" compareValue="reqUsrNm"> 
					AND		SIGN_USR_NM LIKE '%'|| #searchTxt# ||'%'
				</isEqual>
			</isNotEmpty>
			
			
	</select>
	
	<!-- 요구사항 수정이력 목록 가져오기 -->
	<select id="req4500DAO.selectReq4500ChgDetailList" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[
			/* req4500DAO.selectReq4500ChgDetailList - 요구사항 수정이력 목록 가져오기 */ 
			SELECT * FROM 
			(
			SELECT 
				/*+ INDEX_DESC (A IDX_REQ4800_REG_DTM ) */
			    'MOD' AS TYPE ,
				A.PRJ_ID,					A.REQ_ID,				A.CHG_DETAIL_ID,			A.CHG_DETAIL_NUM
	            ,A.CHG_DETAIL_TYPE,			A.CHG_DETAIL_NM
	            ,CASE A.CHG_DETAIL_OPT_TYPE
                	WHEN '02' THEN SF_ADM4100_COM_CD_INFO(#licGrpId#,A.CHG_DETAIL_COMMON_CD, A.PRE_DETAIL_VAL,'1')
					WHEN '03' THEN SF_ADM2000_USR_INFO(A.PRE_DETAIL_VAL,'1')
                    ELSE A.PRE_DETAIL_VAL
                END AS PRE_DETAIL_VAL
                ,CASE A.CHG_DETAIL_OPT_TYPE
                	WHEN '02' THEN SF_ADM4100_COM_CD_INFO(#licGrpId#,A.CHG_DETAIL_COMMON_CD, A.CHG_DETAIL_VAL,'1')
					WHEN '03' THEN SF_ADM2000_USR_INFO(A.CHG_DETAIL_VAL,'1')
                    ELSE A.CHG_DETAIL_VAL
                END AS CHG_DETAIL_VAL
	            ,SF_ADM2000_USR_INFO(A.REG_USR_ID,'1') AS REG_USR_NM
				,SF_ADM2000_USR_INFO(A.REG_USR_ID,'2') AS REG_USR_EMAIL
                ,SF_ADM2000_USR_INFO(A.REG_USR_ID,'6') AS REG_USR_IMG
	            ,A.REG_DTM,					A.REG_USR_ID,			A.REG_USR_IP
	            , ( SELECT REQ_NM FROM REQ4100 WHERE PRJ_ID = A.PRJ_ID AND REQ_ID = A.REQ_ID ) AS REQ_NM
			FROM REQ4800 A
			WHERE 1=1
			AND		A.PRJ_ID = #prjId#
			AND A.REG_DTM BETWEEN TO_DATE( #startDt# ,'YYYY-MM-DD' ) AND  TO_DATE( #endDt# ,'YYYY-MM-DD' ) +0.99999
		    ]]>
			
			<isNotEmpty property="reqId">
			AND		A.REQ_ID = #reqId#
			</isNotEmpty>
			) WHERE 1 = 1
			<isNotEmpty property="searchSelect">
				<isEqual property="searchSelect" compareValue="reqUsrNm"> 
					AND		REG_USR_NM LIKE '%'|| #searchTxt# ||'%'
				</isEqual>
			</isNotEmpty>
	</select>
	
</sqlMap>