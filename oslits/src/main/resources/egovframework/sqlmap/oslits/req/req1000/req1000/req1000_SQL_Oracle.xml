<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="req1000DAO">
	 <!--  in / out class define  -->
    <typeAlias alias="req1000VO"	type="kr.opensoftlab.oslits.req.req1000.req1000.vo.Req1000VO"/>
	<typeAlias alias="egovMap"	 	type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<!-- Map Define -->
   	<resultMap id="resultMapSelectReq1000" class="req1000VO">
		<result property="rn"  				column="RN"/>
		<result property="prjId"				column="PRJ_ID"/>
		<result property="prjNm"				column="PRJ_NM"/>
		<result property="selPrjId"				column="PRJ_ID"/>
		<result property="reqId"				column="REQ_ID"/>
		<result property="reqOrd"				column="REQ_ORD"/>
		<result property="reqClsId"				column="REQ_CLS_ID"/>
		<result property="reqClsNm"				column="REQ_CLS_NM"/>
		<result property="reqNo"				column="REQ_NO"/>
		<result property="reqUsrId"				column="REQ_USR_ID"/>
		<result property="reqUsrNm"				column="REQ_USR_NM"/>
		<result property="reqDtm"				column="REQ_DTM"/>
		<result property="reqUsrDeptNm"			column="REQ_USR_DEPT_NM"/>
		<result property="reqUsrEmail"			column="REQ_USR_EMAIL"/>
		<result property="reqUsrNum"			column="REQ_USR_NUM"/>
		<result property="reqNm"				column="REQ_NM"/>
		<result property="reqDesc"				column="REQ_DESC"/>
		<result property="reqChargerId"			column="REQ_CHARGER_ID"/>
		<result property="reqCompleteRatio"		column="REQ_COMPLETE_RATIO"/>
		<result property="reqFp"				column="REQ_FP"/>
		<result property="reqExFp"				column="REQ_EX_FP"/>
		<result property="reqStDtm"				column="REQ_ST_DTM"/>
		<result property="reqEdDtm"				column="REQ_ED_DTM"/>
		<result property="reqStDuDtm"			column="REQ_ST_DU_DTM"/>
		<result property="reqEdDuDtm"			column="REQ_ED_DU_DTM"/>
		<result property="reqProType"			column="REQ_PRO_TYPE"/>
		<result property="reqProTypeNm"			column="REQ_PRO_TYPE_NM"/>
		<result property="reqNewType"			column="REQ_NEW_TYPE"/>
		<result property="reqNewTypeNm"			column="REQ_NEW_TYPE_NM"/>	
		<result property="reqAcceptTxt"			column="REQ_ACCEPT_TXT"/>
		<result property="sclCd"				column="SCL_CD"/>
		<result property="reqTypeCd"			column="REQ_TYPE_CD"/>
		<result property="piaCd"				column="PIA_CD"/>
		<result property="labInp"				column="LAB_INP"/>	
		<result property="atchFileId"			column="ATCH_FILE_ID"/>
		<result property="cbAtchFileId"			column="CB_ATCH_FILE_ID"/>
		<result property="milestoneId"			column="MILESTONE_ID"/>
		<result property="processId"			column="PROCESS_ID"/>
		<result property="processNm"			column="PROCESS_NM"/>
		<result property="flowId"				column="FLOW_ID"/>
		<result property="flowNm"				column="FLOW_NM"/>
		<result property="useCd"				column="USE_CD"/>
		<result property="regDtmDay"			column="REG_DTM_DAY"/>
    </resultMap>
	
	<!-- sql Define  -->
	<!-- 요구사항 목록 조회 -->
	<sql id="selectReq1000List">
		SELECT T1.*, ROWNUM RN
		FROM
		(
			SELECT 
					A.PRJ_ID
					,	SF_PRJ1000_GRP_NM(A.PRJ_ID) AS PRJ_NM
					,	A.REQ_ID
					,	A.REQ_ORD
					,	A.REQ_CLS_ID
					,	NVL(SF_REQ4000_REQ_CLS_NM(A.PRJ_ID, A.REQ_CLS_ID, '1'), '') AS REQ_CLS_NM
					,	A.REQ_NO
					,	A.REQ_USR_ID
					,	NVL(REQ_USR_NM, SF_ADM2000_USR_INFO(A.REQ_USR_ID, '1')) AS REQ_USR_NM
					,	TO_CHAR(A.REQ_DTM, 'YYYY-MM-DD') AS REQ_DTM
					,	A.REQ_USR_DEPT_NM
					,	A.REQ_USR_EMAIL
					,	A.REQ_USR_NUM
					,	A.REQ_NM
					<isNotEmpty property="reqId">
	    				,	A.REQ_DESC
	    			</isNotEmpty>
					<isEmpty property="reqId">
						<![CDATA[ 
	    				/* , REPLACE (REQ_DESC ,'<br>' , '&nbsp;&nbsp;&nbsp;&nbsp;' ) AS REQ_DESC */
	    				, REGEXP_REPLACE (A.REQ_DESC ,'</br>|<br>|<br/>' , ' ' ) AS REQ_DESC      
	    				]]>
	    			</isEmpty>
					,	A.REQ_CHARGER_ID
					,	A.REQ_COMPLETE_RATIO
					,	A.REQ_FP
			    	,	A.REQ_EX_FP
					,	D.USR_NM			AS REQ_CHARGER_NM
					, 	NVL2(A.REQ_ST_DTM, TO_CHAR(A.REQ_ST_DTM, 'YYYY-MM-DD') , '') REQ_ST_DTM
    		   		, 	NVL2(A.REQ_ED_DTM, TO_CHAR(A.REQ_ED_DTM, 'YYYY-MM-DD') , '') REQ_ED_DTM
					, 	NVL2(A.REQ_ST_DU_DTM, TO_CHAR(A.REQ_ST_DU_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ST_DU_DTM
					, 	NVL2(A.REQ_ED_DU_DTM, TO_CHAR(A.REQ_ED_DU_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ED_DU_DTM
					,	A.REQ_PRO_TYPE
					,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00008', A.REQ_PRO_TYPE, '1') AS REQ_PRO_TYPE_NM
					,	A.REQ_NEW_TYPE
					,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00009', A.REQ_NEW_TYPE, '1') AS REQ_NEW_TYPE_NM
					,	A.REQ_ACCEPT_TXT
					,	A.SCL_CD
			    	,	A.REQ_TYPE_CD
			    	,	A.PIA_CD
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00011', A.SCL_CD, '1') AS SCL_NM
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00012', A.REQ_TYPE_CD, '1') AS REQ_TYPE_NM
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'CMM00001', A.PIA_CD, '1') AS PIA_NM
			    	,	A.LAB_INP
					,	A.ATCH_FILE_ID
					,	A.CB_ATCH_FILE_ID
					,	A.MILESTONE_ID
					,	A.PROCESS_ID
					,	'' AS PROCESS_NM
					,	A.FLOW_ID
					,	'' AS FLOW_NM
					,	A.USE_CD
				    ,	TO_CHAR(A.REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM
				    ,	TO_CHAR(A.REG_DTM, 'YYYY-MM-DD') AS REG_DTM_DAY
				    ,	A.REG_USR_ID
				    ,	A.REG_USR_IP
				    ,	TO_CHAR(A.MODIFY_DTM, 'YYYY-MM-DD HH24:MI:SS') AS MODIFY_DTM
				    ,	A.MODIFY_USR_ID
				    ,	A.MODIFY_USR_IP
		    FROM (SELECT * FROM REQ4100 WHERE PRJ_ID = NVL(#prjId#,#selPrjId#) ) A
			    ,	ADM2000 D
		    WHERE 1=1
			AND			A.REQ_CHARGER_ID 	= D.USR_ID(+)
			ORDER BY A.REQ_PRO_TYPE ASC, TO_NUMBER(REGEXP_REPLACE(A.REQ_ORD, '[^0-9]')) DESC NULLS LAST, A.REQ_DTM DESC, A.REG_DTM DESC /* 접수요청으로 정렬 접수요청이 제일 위에 */
		) T1 WHERE 1 = 1
		<isNotEmpty property="reqUsrId">
			AND		T1.REQ_USR_ID = #reqUsrId#	
		</isNotEmpty>
		<isNotEmpty property="reqProType">
			AND		T1.REQ_PRO_TYPE = #reqProType#
		</isNotEmpty>
		<isNotEmpty property="srchFromDt">
				AND T1.REQ_DTM &gt;= TO_DATE(#srchFromDt#, 'YYYY-MM-DD')
		</isNotEmpty>
		<isNotEmpty property="srchToDt">
				AND T1.REQ_DTM &lt;=   TO_DATE(#srchToDt#, 'YYYY-MM-DD')
		</isNotEmpty>
		<isNotEmpty property="searchSelect">
			<isNotEmpty property="searchTxt">
			<isEqual property="searchSelect" compareValue="reqNm"> 
				AND		T1.REQ_NM LIKE '%'|| #searchTxt# ||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="reqDesc"> 
				AND		T1.REQ_DESC LIKE '%'|| #searchTxt# ||'%'
			</isEqual>	
						<isEqual property="searchSelect" compareValue="prjNm"> 
				AND		T1.PRJ_NM LIKE '%'|| #searchTxt# ||'%'
			</isEqual>	
			<isEqual property="searchSelect" compareValue="reqOrd"> 
				AND		T1.REQ_ORD LIKE '%'|| UPPER(#searchTxt#) ||'%'
			</isEqual>	
			</isNotEmpty>
		</isNotEmpty>
			<isNotEmpty property="searchSelect">
			<isNotEmpty property="searchCd">
			<isEqual property="searchSelect" compareValue="reqProType">
				AND 	T1.REQ_PRO_TYPE LIKE '%'||#searchCd#||'%'
			</isEqual>
			</isNotEmpty>
		</isNotEmpty>
    </sql>
    
    <!-- 요구사항 목록 조회 -->
    <select id="req1000DAO.selectReq1000List" parameterClass="req1000VO"  resultMap="resultMapSelectReq1000">
	    /*req1000DAO.selectReq1000List 요구사항 목록을 조회한다.*/
		SELECT *
		FROM
			(
					<include refid="selectReq1000List"/>
	    	) Z
	    	WHERE 1=1 
	    	AND 	Z.RN BETWEEN (#firstIndex#+1) AND #lastIndex#
    </select>
    
    <!-- 신규 요구사항 전체 목록 조회 -->
    <select id="req1000DAO.selectReq1000AllList" parameterClass="req1000VO"  resultMap="resultMapSelectReq1000">
	    /*req1000DAO.selectReq1000List 요구사항 목록을 조회한다.*/
		SELECT *
		FROM
			(
					<include refid="selectReq1000List"/>
	    	) Z
	    	WHERE 1=1
	    <isNotEmpty property="prjId">
			AND		Z.PRJ_ID = #prjId#
		</isNotEmpty>
    </select>
    
    <!-- 요구사항 목록 총건수. :페이징 처리 부분 -->
    <select id="req1000DAO.selectReq1000ListCnt" parameterClass="req1000VO"  resultClass="java.lang.Integer">
	    /*req1000DAO.selectReq1000ListCnt 요구사항 목록 총건수를 조회한다.*/
	    SELECT
			COUNT(*)
		FROM	(
			<include refid="selectReq1000List"/>
						) A
    </select>
    
    <!-- 요구사항 정보 조회(단건) -->
	<select id="req1000DAO.selectReq1000ReqInfo" parameterClass="java.util.Map"  resultClass="egovMap">
		/* req1000DAO.selectReq1000ReqInfo - 요구사항 정보 조회(단건) */
		<include refid="selectReq1000List"/>
		<isNotEmpty property="prjId">
			AND		T1.PRJ_ID = #prjId#
		</isNotEmpty>
		<isEmpty property="prjId">
			<isNotEmpty property="selPrjId">
				AND		T1.PRJ_ID = #selPrjId#
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="reqId">
	    	AND		T1.REQ_ID = #reqId#
	    </isNotEmpty>
	    
	</select>
	
	<!-- 요구사항 정보 등록 -->
	<insert id="req1000DAO.insertReq1001ReqInfo" parameterClass="java.util.Map">
		<selectKey resultClass="java.lang.String" keyProperty="newReqId">
		<![CDATA[
			/* req1000DAO.insertReq1001ReqInfo - 신규 요구사항 등록(새로운 REQ_ID 따기)*/ 
			SELECT	NVL( 
							SUBSTR(NEW_REQ_ID, 1, 11) || LPAD( (TO_NUMBER(SUBSTR(NEW_REQ_ID, 12, 5)) + 1) , 5, '0')
						,	'REQ' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '00001'
            		) AS NEW_REQ_ID 
			FROM	(
			            SELECT	MAX(REQ_ID)  AS NEW_REQ_ID
			            FROM	REQ4100 A
			            WHERE	1=1
                        AND		A.PRJ_ID = #prjId#
			            AND		A.REQ_ID LIKE 'REQ' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '%'
					)
		]]>
		</selectKey>
		<![CDATA[ 
			/* req1001DAO.insertReq1001ReqInfo - 요구사항 정보 등록 */ 
			INSERT INTO REQ4100
			(
			        PRJ_ID,				REQ_ID,				REQ_CLS_ID,			REQ_NO,					REQ_ORD
			        ,REQ_USR_ID,		REQ_DTM,			REQ_USR_DEPT_NM,	REQ_USR_EMAIL
			        ,REQ_USR_NUM,		REQ_NM,				REQ_DESC,			REQ_CHARGER_ID
			        ,REQ_ST_DTM,		REQ_ED_DTM,			REQ_ST_DU_DTM,		REQ_ED_DU_DTM,			REQ_PRO_TYPE
			        ,REQ_NEW_TYPE,		ATCH_FILE_ID,		CB_ATCH_FILE_ID,	MILESTONE_ID		
			        ,PROCESS_ID,		FLOW_ID
			        ,USE_CD,			REG_DTM,			REG_USR_ID,			REG_USR_IP
			        ,MODIFY_DTM,		MODIFY_USR_ID,		MODIFY_USR_IP
			)                    
			VALUES
			(
					#prjId#,			#newReqId#,			#reqClsId#,			#reqNo#,	#reqOrd#
					,#regUsrId#
					,TO_DATE(REPLACE(#reqDtm#, '-'), 'YYYYMMDD')
					,#reqUsrDeptNm#,		#reqUsrEmail#
					,#reqUsrNum#,		#reqNm#,			#reqDesc#,			#reqChargerId#
					,TO_DATE(REPLACE(#reqStDtm#, '-'), 'YYYYMMDD')
					,TO_DATE(REPLACE(#reqEdDtm#, '-'), 'YYYYMMDD')
					,TO_DATE(REPLACE(#reqStDuDtm#, '-'), 'YYYYMMDD HH24:MI')
					,TO_DATE(REPLACE(#reqEdDuDtm#, '-'), 'YYYYMMDD HH24:MI')
					,'01'
					,'01',				#atchFileId#,		#cbAtchFileId#,		#milestroneId#
					,#processId#,		#flowId#
					,'01',				SYSDATE,			#regUsrId#,			#regUsrIp#
					,SYSDATE,			#modifyUsrId#,		#modifyUsrIp#
			)
		]]>
	</insert>
	
	<!-- 요구사항 정보 수정 -->
	<update id="req1000DAO.updateReq1001ReqInfo" parameterClass="java.util.Map">
		/* req1001DAO.updateReq1001ReqInfo - 요구사항 정보 수정 */ 
		UPDATE 	REQ4100 A
		SET		REQ_NM			= #reqNm# 	
		    ,	REQ_DESC		= #reqDesc#
		    ,	REQ_USR_EMAIL	= #reqUsrEmail#
			,	REQ_USR_NUM		= #reqUsrNum#
		    ,	ATCH_FILE_ID	= #atchFileId#
		    ,	MODIFY_DTM		= SYSDATE
		    ,	MODIFY_USR_ID	= #modifyUsrId#
		    ,	MODIFY_USR_IP	= #modifyUsrIp#
		    ,   REQ_CLS_ID      = #reqClsId# 
		WHERE	1=1
		AND		A.PRJ_ID = #prjId#
		AND		A.REQ_ID = #reqId#
	</update>
	
	<!-- 요구사항 개발공수, 담당자 수정 -->
	<update id="req1000DAO.updateReq1001ReqSubInfo" parameterClass="java.util.Map">
		/* req1001DAO.updateReq1001ReqSubInfo - 요구사항 개발공수, 담당자 수정 */ 
		UPDATE 	REQ4100 A
		SET		REQ_CHARGER_ID = #reqChargerId#
			,	REQ_CHARGER_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
		    ,	REQ_DEV_WK_TM	= #reqDevWkTm#
		    ,	MODIFY_DTM		= SYSDATE
		    ,	MODIFY_USR_ID	= #modifyUsrId#
		    ,	MODIFY_USR_IP	= #modifyUsrIp#
		WHERE	1=1
		AND		A.PRJ_ID = #prjId#
		AND		A.REQ_ID = #reqId#
	</update>
	
	<!-- 요구사항 정보 삭제 -->
	<delete id="req1000DAO.deleteReq1001ReqInfo" parameterClass="java.util.Map">
		/* req1001DAO.deleteReq1001ReqInfo - 요구사항 정보 삭제 */
		DELETE	
		FROM	REQ4100 A
		WHERE	1=1
		AND		A.PRJ_ID = #prjId#
		AND 	A.REQ_ID = #reqId#
	</delete>
	
	<!-- 요구사항 목록 조회 -->
    <select id="req1000DAO.selectReq1000ExcelList" parameterClass="req1000VO"  resultClass="egovMap">
	    /*req1000DAO.selectReq1000ExcelList 요구사항 목록을 조회한다.*/
	
		<include refid="selectReq1000List"/>

    </select>
    
    
    <!-- 요구사항 요청자 정보 조회 - 소속 명, 이메일, 연락처 -->
	<select id="req1000DAO.selectReq1000ReqUserInfo" parameterClass="java.util.Map" resultClass="egovMap">
		/* req1000DAO.selectReq1000ReqUserInfo 요구사항 요청자  정보 조회 - 소속 명, 이메일, 연락처  */
		<![CDATA[
			SELECT 
					A.USR_NM
					,	SF_ADM7000_DEPT_NM(#licGrpId#, A.DEPT_ID, '2') AS DEPT_NM
					,	A.EMAIL
			    	,	A.TELNO
			FROM 
				ADM2000 A
			WHERE 1=1
			AND A.LIC_GRP_ID 	= #licGrpId#
			AND A.USR_ID 		= #reqUsrId#
		]]>
	</select>
	
	<!-- 현재 요구사항이 속한 프로젝트명, 프로젝트 약어 조회-->
	<select id="req1000DAO.selectReq1000ReqPrjInfo" parameterClass="java.util.Map" resultClass="egovMap">
     		/* req1000DAO.selectReq1000ReqPrjInfo 현재 요구사항이 속한 프로젝트명, 프로젝트 약어 조회  */
     		<![CDATA[
	      		SELECT  
	       					A.PRJ_NM
	       				,	A.PRJ_ACRM
	       		FROM 
	       				PRJ1000 A
	       		WHERE 	1=1
	    		AND 	A.LIC_GRP_ID =  #licGrpId#
	    		AND 	A.PRJ_ID	 = 	#prjId#
			]]>
	</select>
	
	<!-- 요구사항 순번 조회 -->
	<select id="req1000DAO.selectReq1000NextReqOrd" parameterClass="java.util.Map" resultClass="String">
		/* req1000DAO.selectReq1000NextReqOrd 요구사항 순번 조회 */
		<![CDATA[
			SELECT  NVL(MAX(T.NEXT_REQ_ORD), '1') AS REQ_ORD
			FROM (
					SELECT	NVL( TO_CHAR( TO_NUMBER(SUBSTR(A.REQ_ORD, INSTR(A.REQ_ORD, '-')+1))) +1, '1' )
			       				AS NEXT_REQ_ORD   
					FROM	REQ4100 A
					WHERE	1=1
			        AND		A.PRJ_ID = #prjId# 
			) T   
		]]>
	</select>
	
	<!-- 요구사항의 첨부파일 정보 삭제 -->
	<delete id="req1000DAO.deleteReq1000ReqAtchFile" parameterClass="java.util.Map">
		/* req1000DAO.deleteReq1000ReqAtchFile - 삭제하려는 요구사항의 첨부파일 정보 삭제 */
		<![CDATA[
			DELETE 	FROM COMTNFILE
			WHERE 	1=1
			AND		ATCH_FILE_ID = #atchFileId#
		]]>	
	</delete>
	
	<!-- 요구사항의 첨부파일 상세정보 삭제 -->
	<delete id="req1000DAO.deleteReq1000ReqAtchFileDetail" parameterClass="java.util.Map">
		/* req1000DAO.deleteReq1000ReqAtchFileDetail - 삭제하려는 요구사항의 첨부파일 상세정보 삭제 */
		<![CDATA[
			DELETE 	FROM COMTNFILEDETAIL
			WHERE 	1=1
			AND		ATCH_FILE_ID = #atchFileId#
		]]>	
	</delete>

</sqlMap>