<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="req4100DAO">

	<!--  in / out class define  -->
    <typeAlias alias="req4100VO"	type="kr.opensoftlab.oslits.req.req4000.req4100.vo.Req4100VO"/>
	<typeAlias alias="egovMap"	 	type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<!-- Map Define -->
   	<resultMap id="resultMapSelectReq4100" class="req4100VO">
		<result property="rn"  				column="RN"/>
		<result property="prjId"				column="PRJ_ID"/>
		<result property="reqId"				column="REQ_ID"/>
		<result property="reqClsId"				column="REQ_CLS_ID"/>
		<result property="reqClsNm"				column="REQ_CLS_NM"/>
		<result property="reqNo"				column="REQ_NO"/>
		<result property="reqUsrId"				column="REQ_USR_ID"/>
		<result property="reqUsrNm"				column="REQ_USR_NM"/>
		<result property="reqDtm"				column="REQ_DTM"/>
		<result property="reqUsrDeptNm"			column="REQ_USR_DEPT_NM"/>
		<result property="reqUsrEmail"			column="REQ_USR_EMAIL"/>
		<result property="reqUsrNum"			column="REQ_USR_NUM"/>
		<result property="reqNm"				column="REQ_NM"/>
		<result property="reqDesc"				column="REQ_DESC"/>
		<result property="reqChargerId"			column="REQ_CHARGER_ID"/>
		<result property="reqCompleteRatio"		column="REQ_COMPLETE_RATIO"/>
		<result property="reqFp"				column="REQ_FP"/>
		<result property="reqExFp"				column="REQ_EX_FP"/>
		<result property="reqStDtm"				column="REQ_ST_DTM"/>
		<result property="reqEdDtm"				column="REQ_ED_DTM"/>
		<result property="reqStDuDtm"			column="REQ_ST_DU_DTM"/>
		<result property="reqEdDuDtm"			column="REQ_ED_DU_DTM"/>
		<result property="reqProType"			column="REQ_PRO_TYPE"/>
		<result property="reqProTypeNm"			column="REQ_PRO_TYPE_NM"/>
		<result property="reqNewType"			column="REQ_NEW_TYPE"/>
		<result property="reqNewTypeNm"			column="REQ_NEW_TYPE_NM"/>		
		<result property="reqAcceptTxt"			column="REQ_ACCEPT_TXT"/>	
		<result property="sclCd"				column="SCL_CD"/>
		<result property="reqTypeCd"			column="REQ_TYPE_CD"/>
		<result property="piaCd"				column="PIA_CD"/>
		<result property="labInp"				column="LAB_INP"/>	
		<result property="atchFileId"			column="ATCH_FILE_ID"/>
		<result property="cbAtchFileId"			column="CB_ATCH_FILE_ID"/>
		<result property="milestoneId"			column="MILESTONE_ID"/>
		<result property="processId"			column="PROCESS_ID"/>
		<result property="processNm"			column="PROCESS_NM"/>
		<result property="flowId"				column="FLOW_ID"/>
		<result property="flowNm"				column="FLOW_NM"/>
		<result property="useCd"				column="USE_CD"/>
 		<result property="regDtmDay"			column="REG_DTM_DAY"/>
    </resultMap>


	<!-- 요구사항 정보 등록 -->
	<insert id="req4100DAO.insertReq4100ReqInfoAjax" parameterClass="java.util.Map">
		<selectKey resultClass="java.lang.String" keyProperty="newReqId">
		<![CDATA[
			/* req4100DAO.insertReq4100ReqInfoAjax - 요구사항 등록(새로운 REQ_ID 따기)*/ 
			SELECT	NVL( 
							SUBSTR(NEW_REQ_ID, 1, 11) || LPAD( (TO_NUMBER(SUBSTR(NEW_REQ_ID, 12, 5)) + 1) , 5, '0')
						,	'REQ' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '00001'
            		) AS NEW_REQ_ID 
			FROM	(
			            SELECT	MAX(REQ_ID)  AS NEW_REQ_ID
			            FROM	REQ4100 A
			            WHERE	1=1
                        AND		A.PRJ_ID = #prjId#
                        
			            AND		A.REQ_ID LIKE 'REQ' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '%'
					)
		]]>
		</selectKey>
		<![CDATA[ 
			/* req4100DAO.insertReq4100ReqInfoAjax - 요구사항 정보 등록 */ 
			INSERT INTO REQ4100
			(
			        PRJ_ID,				REQ_ID,				REQ_CLS_ID,			REQ_NO,					REQ_ORD
			        ,REQ_USR_ID,		REQ_USR_NM,			REQ_DTM,			REQ_USR_DEPT_NM
			        ,REQ_USR_EMAIL,		REQ_USR_NUM,		REQ_NM,				REQ_DESC
			        ,REQ_CHARGER_ID,	REQ_ST_DTM,			REQ_ED_DTM,			REQ_ST_DU_DTM,			REQ_ED_DU_DTM
			        ,REQ_PRO_TYPE,		REQ_NEW_TYPE,		ATCH_FILE_ID,		CB_ATCH_FILE_ID
			        ,MILESTONE_ID,		PROCESS_ID,			FLOW_ID
			        ,USE_CD,				REG_DTM,			REG_USR_ID
			        ,REG_USR_IP,		MODIFY_DTM,			MODIFY_USR_ID,		MODIFY_USR_IP
			)                    
			VALUES
			(
					#prjId#,			#newReqId#,			#reqClsId#,			#reqNo#,		#reqOrd#
					,#reqUsrId#,		#reqUsrNm#
					,TO_DATE(REPLACE(#reqDtm#, '-'), 'YYYYMMDD')
					,#reqUsrDeptNm#, 	#reqUsrEmail#
					,#reqUsrNum#,		#reqNm#,			#reqDesc#,			#reqChargerId#
					,TO_DATE(REPLACE(#reqStDtm#, '-'), 'YYYYMMDD HH24:MI')
					,TO_DATE(REPLACE(#reqEdDtm#, '-'), 'YYYYMMDD HH24:MI')
					,TO_DATE(REPLACE(#reqSTDuDtm#, '-'), 'YYYYMMDD')
					,TO_DATE(REPLACE(#reqEdDuDtm#, '-'), 'YYYYMMDD')
					,#reqProType#
					,#reqNewType#,		#atchFileId#,		#cbAtchFileId#,		#milestroneId#
					,#processId#,		#flowId#,		
					'01',				SYSDATE,			#regUsrId#,			#regUsrIp#
					,SYSDATE,			#modifyUsrId#,		#modifyUsrIp#
			)
		]]>
	</insert>
	
	<!-- 요구사항 엑셀 업로드시 사용자 ID 검색 -->
	<select id="req4100DAO.selectReq4100ReqUsrChk" parameterClass="java.util.Map" resultClass="int">
		/* req4100DAO.selectReq4100ReqUsrChk 요구사항 엑셀 업로드시 사용자 ID 검색 */
		<![CDATA[ 
			SELECT	COUNT(*) AS CNT
			FROM	ADM2000 A
			WHERE	1=1
			AND		A.LIC_GRP_ID = #licGrpId#
			AND		A.USR_ID = #reqUsrId#
 		]]> 
	</select>
	
	<!-- 요구사항 정보 수정 -->
	<update id="req4100DAO.updateReq4100ReqInfoAjax" parameterClass="java.util.Map">
		/* req4100DAO.updateReq4100ReqInfoAjax - 요구사항 정보 수정 */ 
		UPDATE 	REQ4100 A
		SET	
			<isNotEmpty property="reqNm">
					REQ_NM			= #reqNm#
				,	REQ_NO			= #reqNo#
			    ,	REQ_DESC		= #reqDesc#
			    ,	REQ_USR_ID		= #reqUsrId#	
			    ,	REQ_USR_NM		= #reqUsrNm#
			    ,	REQ_DTM			= TO_DATE(REPLACE(#reqDtm#, '-'), 'YYYYMMDD')
			    ,	REQ_USR_DEPT_NM = #reqUsrDeptNm#
			    ,	REQ_USR_EMAIL	= #reqUsrEmail#
			    ,	REQ_USR_NUM		= #reqUsrNum#
			    ,	MODIFY_DTM		= SYSDATE
			    ,	MODIFY_USR_ID	= #modifyUsrId#
			    ,	MODIFY_USR_IP	= #modifyUsrIp#
				,	REQ_PRO_TYPE	= #reqProType#
			    ,	REQ_NEW_TYPE	= #reqNewType#,
		    </isNotEmpty>
		    	ATCH_FILE_ID	= #atchFileId#
		WHERE	1=1
		AND		A.PRJ_ID = #prjId#
		AND		A.REQ_ID = #reqId#
	</update>
	
	<!-- 요구사항 작업흐름 변경 -->
	<update id="req4100DAO.updateReq4100ReqFlowChgInfoAjax" parameterClass="java.util.Map">
		/* req4100DAO.updateReq4100ReqFlowChgInfoAjax - 요구사항 작업흐름 변경 */ 
		UPDATE 	REQ4100 A
		SET	
			<isEmpty property="signCd">
					REQ_ST_DTM			= TO_DATE(REPLACE(#reqStDtm#, '-'), 'YYYYMMDD HH24:MI')
			    ,	REQ_ED_DTM			= TO_DATE(REPLACE(#reqEdDtm#, '-'), 'YYYYMMDD HH24:MI')
			    ,	REQ_ST_DU_DTM		= TO_DATE(REPLACE(#reqStDuDtm#, '-'), 'YYYYMMDD')
			    ,	REQ_ED_DU_DTM		= TO_DATE(REPLACE(#reqEdDuDtm#, '-'), 'YYYYMMDD')
			    ,	REQ_CHARGER_ID		= #reqChargerId#
			    ,	REQ_COMPLETE_RATIO	= #reqCompleteRatio#
			    ,	REQ_FP				= #reqFp#
			    ,	REQ_EX_FP			= #reqExFp#
			    ,	REQ_CLS_ID			= #reqClsId#
			    ,	SCL_CD				= #sclCd#
			    ,	REQ_TYPE_CD			= #reqTypeCd#
			    ,	PIA_CD				= #piaCd#
			    ,	LAB_INP				= #labInp#
			    <isNotEmpty property="flowSignCd">
			    	<isNotEqual property="flowSignCd" compareValue="01">
			    		,	FLOW_ID				= #flowNextId#
			    		<isNotEmpty property="reqProType">
					    	,	REQ_PRO_TYPE	= #reqProType#
					    </isNotEmpty>
			    	</isNotEqual>
			    </isNotEmpty>
			</isEmpty>
			<isNotEmpty property="signCd">
				<isEqual property="signCd" compareValue="02">
						FLOW_ID	= #signFlowId#
						<isNotEmpty property="reqProType">
					    	,	REQ_PRO_TYPE	= #reqProType#
					    </isNotEmpty>
				</isEqual>			
			</isNotEmpty>
			    ,	MODIFY_DTM			= SYSDATE
			    ,	MODIFY_USR_ID		= #modifyUsrId#
			    ,	MODIFY_USR_IP		= #modifyUsrIp#
		WHERE	1=1
		AND		A.PRJ_ID = #prjId#
		AND		A.REQ_ID = #reqId#
	</update>
	
	<!-- 요구사항 atchFileId, fileSn 수정-->
	<update id="req4100DAO.updateReq4100ReqFileInfoAjax" parameterClass="java.util.Map">
		/* req4100DAO.updateReq4100ReqFileInfoAjax - 요구사항 atchFileId, fileSn 수정 */ 
		UPDATE 	REQ4100 A
		SET		
		    	ATCH_FILE_ID	= #atchFileId#
		    ,	MODIFY_DTM		= SYSDATE
		    ,	MODIFY_USR_ID	= #modifyUsrId#
		    ,	MODIFY_USR_IP	= #modifyUsrIp#
		WHERE	1=1
		AND		A.PRJ_ID = #prjId#
		AND		A.REQ_ID = #reqId#
	</update>

	<!-- 요구사항 접수 완료,반려 -->
	<update id="req4100DAO.updateReq4106NewReqAccpetInfoAjax" parameterClass="java.util.Map">
		/* req4100DAO.updateReq4106NewReqAccpetInfoAjax - 요구사항 접수 완료,반려 */ 
		UPDATE 	REQ4100 A
		SET	
					REQ_ACCEPT_TXT		= #reqAcceptTxt#
					,	REQ_CLS_ID		= #reqClsId#
				<isEqual property="processId" compareValue="reject">
					,	REQ_PRO_TYPE		= '03'
				</isEqual>
				<isNotEqual property="processId" compareValue="reject">
					,   REQ_CHARGER_ID		= #reqChargerId#
					,   REQ_COMPLETE_RATIO	= #reqCompleteRatio#
					,	REQ_ST_DTM	= TO_DATE(REPLACE(#reqStDtm#, '-'), 'YYYYMMDD HH24:MI')
					,  	REQ_ED_DTM	= TO_DATE(REPLACE(#reqEdDtm#, '-'), 'YYYYMMDD HH24:MI')
					,	REQ_ST_DU_DTM	= TO_DATE(REPLACE(#reqStDuDtm#, '-'), 'YYYYMMDD')
					,	REQ_ED_DU_DTM	= TO_DATE(REPLACE(#reqEdDuDtm#, '-'), 'YYYYMMDD')
			    	,	PROCESS_ID			= #processId#
			    	,	FLOW_ID				= #flowId#
			    	,	REQ_PRO_TYPE		= '02'
				</isNotEqual>
			    ,	MODIFY_DTM			= SYSDATE
			    ,	MODIFY_USR_ID		= #modifyUsrId#
			    ,	MODIFY_USR_IP		= #modifyUsrIp#
		WHERE	1=1
		AND		A.PRJ_ID = #prjId#
		AND		A.REQ_ID = #reqId#
	</update>
	
	<!-- 요구사항 정보 삭제 -->
	<delete id="req4100DAO.deleteReq4100ReqInfoAjax" parameterClass="java.util.Map" >
		DELETE FROM REQ4100 A
		WHERE	1=1
		AND		A.PRJ_ID = #prjId#
		AND		A.REQ_ID = #reqId#
	</delete>
	
	<sql id="req4100DAO.selectReq4100List">
		SELECT T1.*, ROWNUM RN
		FROM
		(
			SELECT
						A.PRJ_ID
					,	A.REQ_ID
					,	A.REQ_ORD
					,	A.REQ_CLS_ID
					,	NVL(SF_REQ4000_REQ_CLS_NM(A.PRJ_ID, A.REQ_CLS_ID, '2'), '') AS REQ_CLS_NM
					/*,	(SELECT	REQ_CLS_NM
					        FROM	REQ4000 
					        WHERE	1=1
					        AND		PRJ_ID =A.PRJ_ID
					        AND		REQ_CLS_ID = A.REQ_CLS_ID
				        ) AS REQ_CLS_NM*/
					,	A.REQ_NO
					,	A.REQ_USR_ID
					,	NVL(A.REQ_USR_NM, SF_ADM2000_USR_INFO(A.REQ_USR_ID, '1'))  AS REQ_USR_NM
					,	TO_CHAR(A.REQ_DTM, 'YYYY-MM-DD') AS REQ_DTM
					,	A.REQ_USR_DEPT_NM
					,	A.REQ_USR_EMAIL
					,	A.REQ_USR_NUM
					,	A.REQ_NM
					<isNotEmpty property="reqId">
	    				,	A.REQ_DESC
	    			</isNotEmpty>
					<isEmpty property="reqId">
						<![CDATA[ 
	    				/* , REPLACE (REQ_DESC ,'<br>' , '&nbsp;&nbsp;&nbsp;&nbsp;' ) AS REQ_DESC */
	    				, REGEXP_REPLACE (A.REQ_DESC ,'</br>|<br>|<br/>' , ' ' ) AS REQ_DESC    
	    				]]>
	    			</isEmpty>
					,	A.REQ_CHARGER_ID
					,	A.REQ_COMPLETE_RATIO
					,	A.REQ_FP
			    	,	A.REQ_EX_FP
					,	D.USR_NM			AS REQ_CHARGER_NM
					, 	NVL2(A.REQ_ST_DTM, TO_CHAR(A.REQ_ST_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ST_DTM
    		   		, 	NVL2(A.REQ_ED_DTM, TO_CHAR(A.REQ_ED_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ED_DTM
					, 	NVL2(A.REQ_ST_DU_DTM, TO_CHAR(A.REQ_ST_DU_DTM, 'YYYY-MM-DD') , '') REQ_ST_DU_DTM
					, 	NVL2(A.REQ_ED_DU_DTM, TO_CHAR(A.REQ_ED_DU_DTM, 'YYYY-MM-DD') , '') REQ_ED_DU_DTM
					,	A.REQ_PRO_TYPE
					,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00008', A.REQ_PRO_TYPE, '1') AS REQ_PRO_TYPE_NM
					,	A.REQ_NEW_TYPE
					,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00009', A.REQ_NEW_TYPE, '1') AS REQ_NEW_TYPE_NM
					,	A.REQ_ACCEPT_TXT
					,	A.SCL_CD
			    	,	A.REQ_TYPE_CD
			    	,	A.PIA_CD
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00011', A.SCL_CD, '1') AS SCL_NM
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00012', A.REQ_TYPE_CD, '1') AS REQ_TYPE_NM
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'CMM00001', A.PIA_CD, '1') AS PIA_NM
			    	,	A.LAB_INP
					,	A.ATCH_FILE_ID
					,	A.CB_ATCH_FILE_ID
					,	A.MILESTONE_ID
					,	A.PROCESS_ID
					,	B.PROCESS_NM
					,	A.FLOW_ID
					,	C.FLOW_NM
					,	C.FLOW_NEXT_ID
					,	A.USE_CD
					,	E.SIGN_CD
					,	NVL(SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00004', E.SIGN_CD, '1'),'없음') AS SIGN_CD_NM
                    ,	E.SIGN_USR_ID
                    ,	NVL(SF_ADM2000_USR_INFO(E.SIGN_USR_ID, '1'),'없음')  AS SIGN_USR_NM
				    ,	TO_CHAR(A.REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM
				    ,	TO_CHAR(A.REG_DTM, 'YYYY-MM-DD') AS REG_DTM_DAY
				    ,	A.REG_USR_ID
				    ,	A.REG_USR_IP
				    ,	TO_CHAR(A.MODIFY_DTM, 'YYYY-MM-DD HH24:MI:SS') AS MODIFY_DTM
				    ,	A.MODIFY_USR_ID
				    ,	A.MODIFY_USR_IP
				    ,   A.ORG_REQ_ID
		    FROM (SELECT * FROM REQ4100 WHERE 1 = 1
		    	<isEmpty property="popupPrjId">
					<isNotEmpty property="selPrjId">
						AND		PRJ_ID = NVL(#prjId#,#selPrjId#)
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty property="popupPrjId">
						AND PRJ_ID = #popupPrjId#
				</isNotEmpty>
				<isNotEmpty property="restApiReqUsrNm">
				AND		REQ_USR_NM LIKE '%' || #restApiReqUsrNm# || '%'
				</isNotEmpty>
		    		)  A
		    	,	FLW1000 B
			    ,	FLW1100 C
			    ,	ADM2000 D
			    ,(
	                  SELECT Y.*
	                  FROM REQ4900 Y, (SELECT Z.REQ_ID, MAX(REG_DTM) AS REG_DTM FROM REQ4900 Z GROUP BY Z.REQ_ID) X
	                  WHERE 1=1
	                  AND Y.REQ_ID = X.REQ_ID
	                  AND Y.REG_DTM = X.REG_DTM
	              ) E
		    WHERE 1=1
            AND		A.PRJ_ID = B.PRJ_ID(+)
			AND		A.PROCESS_ID = B.PROCESS_ID(+)
			AND		A.PRJ_ID = C.PRJ_ID(+)
			AND		A.PROCESS_ID = C.PROCESS_ID(+)
			AND		A.FLOW_ID = C.FLOW_ID(+)
			AND		A.REQ_CHARGER_ID = D.USR_ID(+)
			AND A.PRJ_ID = E.PRJ_ID(+)
			AND A.REQ_ID = E.REQ_ID(+)
		    ORDER BY A.REQ_PRO_TYPE ASC, TO_NUMBER(REGEXP_REPLACE(A.REQ_ORD, '[^0-9]')) DESC NULLS LAST, A.REQ_DTM DESC, A.REG_DTM DESC
		) T1 WHERE 1 = 1
		
		<isEmpty property="popupPrjId">
			<isNotEmpty property="prjId">
				AND		T1.PRJ_ID = #prjId#
			</isNotEmpty>
			<isEmpty property="prjId">
				<isNotEmpty property="selPrjId">
					AND		T1.PRJ_ID = #selPrjId#
				</isNotEmpty>
			</isEmpty>
		</isEmpty>
		<isNotEmpty property="popupPrjId">
				AND T1.PRJ_ID = #popupPrjId#
		</isNotEmpty>
		
		
		<isNotEmpty property="srchReqClsNm">
			AND		T1.REQ_CLS_NM LIKE '%' || #srchReqClsNm# || '%'
		</isNotEmpty>
		
		<isNotEmpty property="srchReqNm">
			AND		T1.REQ_NM LIKE '%' || #srchReqNm# || '%'
		</isNotEmpty>
		
		<isNotEmpty property="srchReqDesc">
			AND		T1.REQ_DESC LIKE '%' || #srchReqDesc# || '%'
		</isNotEmpty>

		<isNotEmpty property="searchSelect" >
			<isNotEmpty property="searchTxt">
			<isEqual property="searchSelect" compareValue="reqNm">
				AND		T1.REQ_NM LIKE '%' || #searchTxt# || '%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="reqDesc">
				AND		T1.REQ_DESC LIKE '%' || #searchTxt# || '%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="reqUsrNm">
				AND		T1.REQ_USR_NM LIKE '%' || #searchTxt# || '%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="reqChargerNm">
				AND		T1.REQ_CHARGER_NM LIKE '%' || #searchTxt# || '%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="reqNo">
				AND		T1.REQ_NO LIKE '%' || #searchTxt# || '%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="reqId">
				AND		T1.REQ_ID LIKE '%' || #searchTxt# || '%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="processNm">
				AND		T1.PROCESS_NM LIKE '%' || #searchTxt# || '%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="reqOrd"> 
				AND		T1.REQ_ORD LIKE '%'|| UPPER(#searchTxt#) ||'%'
			</isEqual>	
			</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty>
			<isNotEmpty property="searchSelect">
			<isNotEmpty property="searchCd">
			<isEqual property="searchSelect" compareValue="reqProType">
				AND 	T1.REQ_PRO_TYPE LIKE '%'||#searchCd#||'%'
			</isEqual>
			</isNotEmpty>
			</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty property="srchFromDt">
				AND T1.REQ_DTM &gt;= TO_DATE(#srchFromDt#, 'YYYY-MM-DD')
		</isNotEmpty>
		<isNotEmpty property="srchToDt">
				AND T1.REQ_DTM &lt;=   TO_DATE(#srchToDt#, 'YYYY-MM-DD')
		</isNotEmpty>
    </sql>
    
    <!-- 요구사항 목록 조회 -->
    <select id="req4100DAO.selectReq4100List" parameterClass="req4100VO"  resultClass="egovMap" >
	    /*req4100DAO.selectReq4100List 요구사항 목록을 조회한다.*/
		SELECT *
		FROM
			(
				<include refid="req4100DAO.selectReq4100List"/>
	    	)
	    	WHERE RN BETWEEN (#firstIndex#+1) AND #lastIndex#
    </select>
    

    <!-- 요구사항 목록 엑셀 다운로드  -->
    <select id="req4100DAO.selectReq4100ExcelList" parameterClass="java.util.Map"  resultClass="egovMap" >
	    /*req4100DAO.selectReq4100ExcelList 요구사항 목록 엑셀 다운로드 */
		SELECT *
		FROM
			(
				<include refid="req4100DAO.selectReq4100List"/>
	    	)
    </select>
    
    <!-- 요구사항 목록 총건수. :페이징 처리 부분 -->
    <select id="req4100DAO.selectReq4100ListCnt" parameterClass="req4100VO"  resultClass="java.lang.Integer">
	    /*req4100DAO.selectReq4100ListCnt 요구사항 목록 총건수를 조회한다.*/
	    SELECT
			COUNT(*)
		FROM	(
			<include refid="req4100DAO.selectReq4100List"/>
		) A
    </select>
	
		<!-- 요구사항 정보 조회(단건) -->
	<select id="req4100DAO.selectReq4102ReqInfoAjax" parameterClass="java.util.Map"  resultClass="egovMap">
		/* req4100DAO.selectReq4102ReqInfoAjax - 요구사항 정보 조회(단건) */
		<include refid="req4100DAO.selectReq4100List"/>
		<isNotEmpty property="reqId">
	    	AND		T1.REQ_ID = #reqId#
	    </isNotEmpty>
	    <isNotEmpty property="orgReqId">
	    	AND		T1.ORG_REQ_ID = #orgReqId#
	    </isNotEmpty>
	    
	</select>
	
	
	<!-- 요구사항 목록 엑셀 조회 (목록 전체 조회) -->
    <select id="req4100DAO.selectReq4100AllList" parameterClass="req4100VO"  resultClass="egovMap" >
	    /*req4100DAO.selectReq4100AllList 요구사항 목록을 전체 조회한다.*/
		<include refid="req4100DAO.selectReq4100List"/>

    </select>
    
    <!-- 프로세스, 작업흐름 별 요구사항 조회 -->
    <select id="req4100DAO.selectReq4100ProcessFlowReqList" parameterClass="java.util.Map"  resultClass="egovMap" >
	    /*req4100DAO.selectReq4100ProcessFlowReqList 프로세스, 작업흐름 별 요구사항 조회*/
		<include refid="req4100DAO.selectReq4100List"/>
		AND T1.PROCESS_ID = #processId#
		AND T1.FLOW_ID = #flowId#
		
		<isNotEmpty property="type">
			<isEqual property="type" compareValue="charge">
				AND T1.REQ_CHARGER_ID = #usrId#
			</isEqual>
		</isNotEmpty>
		

    </select>
    
    <!-- 요구사항 작업흐름별 작업 목록 조회-->
    <select id="req4100DAO.selectReq4100ReqFlowWorkList" parameterClass="java.util.Map"  resultClass="egovMap" >
	    /*req4100DAO.selectReq4100ReqFlowWorkList 요구사항 작업흐름별 작업 목록 조회 */
		SELECT A.PRJ_ID				,A.REQ_ID					,A.PROCESS_ID			,A.FLOW_ID
			,	A.WORK_ID			,A.WORK_STATUS_CD			,A.WORK_CONTENT
			,	A.WORK_CHARGER_ID
			,	SF_ADM2000_USR_INFO(A.WORK_CHARGER_ID,'1') AS WORK_CHARGER_NM
			,	NVL2(A.WORK_ST_DTM, TO_CHAR(A.WORK_ST_DTM, 'YYYY-MM-DD') , '') WORK_ST_DTM
			,	NVL2(A.WORK_ED_DTM, TO_CHAR(A.WORK_ED_DTM, 'YYYY-MM-DD') , '') WORK_ED_DTM
			,	TO_CHAR(A.REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM
		    ,	A.REG_USR_ID
		    ,	A.REG_USR_IP
		    ,	TO_CHAR(A.MODIFY_DTM, 'YYYY-MM-DD HH24:MI:SS') AS MODIFY_DTM
		    ,	A.MODIFY_USR_ID
		    ,	A.MODIFY_USR_IP
		FROM REQ4400 A
		WHERE 1=1
		<isNotEmpty property="selPrjId">
			AND		A.PRJ_ID = #selPrjId#
		</isNotEmpty>
		<isEmpty property="selPrjId">
			AND		A.PRJ_ID = #prjId#
		</isEmpty>
		AND A.REQ_ID = #reqId#
		AND A.PROCESS_ID = #processId#
		AND A.FLOW_ID = #flowId#
    </select>
	
	
	<!-- 요구사항 변경이력 정보 가져오기-->
	<select id="req4100DAO.selectReq4700ReqHistoryList" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[
			/* req4100DAO.selectReq4700ReqHistoryList - 요구사항 변경이력 정보 가져오기  */
			SELECT 'CHG' AS TYPE 
					,A.PRJ_ID
					,A.REQ_ID
					,D.REQ_NM
					,A.REQ_CHG_ID
					,A.REQ_CHG_TYPE
					,A.CHG_USR_ID
					,SF_ADM2000_USR_INFO(A.CHG_USR_ID,'1') AS CHG_USR_NM
					,SF_ADM2000_USR_INFO(A.CHG_USR_ID,'2') AS CHG_USR_EMAIL
					,A.CHG_DTM
					,A.PROCESS_ID
					,E.PROCESS_NM
					,A.PRE_FLOW_ID
					,B.FLOW_NM AS PRE_FLOW_NM
					,B.FLOW_ESSENTIAL_CD AS PRE_FLOW_ESSENTIAL_CD
					,B.FLOW_SIGN_CD AS PRE_FLOW_SIGN_CD
					,B.FLOW_END_CD AS PRE_FLOW_END_CD
					,B.FLOW_WORK_CD AS PRE_FLOW_WORK_CD
					,B.FLOW_REVISION_CD AS PRE_FLOW_REVISION_CD
					,B.FLOW_DPL_CD AS PRE_FLOW_DPL_CD
					,B.FLOW_AUTH_CD AS PRE_FLOW_AUTH_CD
					,B.FLOW_NEXT_ID AS PRE_FLOW_NEXT_ID
					,(
					  SELECT COUNT(*)
					  FROM FLW1200 Z
					  WHERE 1=1
					  AND Z.PRJ_ID = B.PRJ_ID
					  AND Z.PROCESS_ID = B.PROCESS_ID
					  AND Z.FLOW_ID = B.FLOW_ID
					) AS PRE_FLOW_OPT_CNT
					,B.FLOW_TITLE_BG_COLOR AS PRE_FLOW_TITLE_BG_COLOR
					,B.FLOW_TITLE_COLOR AS PRE_FLOW_TITLE_COLOR
					,B.FLOW_CONTENT_BG_COLOR AS PRE_FLOW_CONTENT_BG_COLOR
					,B.FLOW_CONTENT_COLOR AS PRE_FLOW_CONTENT_COLOR 
					,A.CHG_FLOW_ID
					,C.FLOW_NM AS CHG_FLOW_NM
					,C.FLOW_ESSENTIAL_CD AS CHG_FLOW_ESSENTIAL_CD
					,C.FLOW_SIGN_CD AS CHG_FLOW_SIGN_CD
					,C.FLOW_END_CD AS CHG_FLOW_END_CD
					,C.FLOW_WORK_CD AS CHG_FLOW_WORK_CD
					,C.FLOW_REVISION_CD AS CHG_FLOW_REVISION_CD
					,C.FLOW_DPL_CD AS CHG_FLOW_DPL_CD
					,C.FLOW_AUTH_CD AS CHG_FLOW_AUTH_CD
					,C.FLOW_NEXT_ID AS CHG_FLOW_NEXT_ID
					,(
					  SELECT COUNT(*)
					  FROM FLW1200 Z
					  WHERE 1=1
					  AND Z.PRJ_ID = C.PRJ_ID
					  AND Z.PROCESS_ID = C.PROCESS_ID
					  AND Z.FLOW_ID = C.FLOW_ID
					) AS CHG_FLOW_OPT_CNT
					,C.FLOW_TITLE_BG_COLOR AS CHG_FLOW_TITLE_BG_COLOR
					,C.FLOW_TITLE_COLOR AS CHG_FLOW_TITLE_COLOR
					,C.FLOW_CONTENT_BG_COLOR AS CHG_FLOW_CONTENT_BG_COLOR
					,C.FLOW_CONTENT_COLOR AS CHG_FLOW_CONTENT_COLOR 
					,A.PRE_CHARGER_ID
					,SF_ADM2000_USR_INFO(A.PRE_CHARGER_ID,'1') AS PRE_CHARGER_NM
					,SF_ADM2000_USR_INFO(A.PRE_CHARGER_ID,'6') AS PRE_CHARGER_IMG
					,A.CHG_CHARGER_ID
					,SF_ADM2000_USR_INFO(A.CHG_CHARGER_ID,'1') AS CHG_CHARGER_NM
					,SF_ADM2000_USR_INFO(A.CHG_CHARGER_ID,'6') AS CHG_CHARGER_IMG
					
					,A.REG_DTM
			FROM REQ4700 A, FLW1100 B, FLW1100 C, REQ4100 D, FLW1000 E
			WHERE 1=1
				AND A.PRJ_ID = B.PRJ_ID(+)
				AND A.PROCESS_ID = B.PROCESS_ID(+)
				AND A.PRE_FLOW_ID = B.FLOW_ID(+)
				AND A.PRJ_ID = C.PRJ_ID(+)
				AND A.PROCESS_ID = C.PROCESS_ID(+)
				AND A.CHG_FLOW_ID = C.FLOW_ID(+)
				AND A.PRJ_ID = D.PRJ_ID
				AND A.REQ_ID = D.REQ_ID(+)
				AND A.PRJ_ID = E.PRJ_ID(+)
				AND A.PROCESS_ID = E.PROCESS_ID(+)
		]]>
		<isEmpty property="chgAllView">
			AND A.REQ_CHG_TYPE != '02'
		</isEmpty>
		<isNotEmpty property="popupPrjId">
			AND		A.PRJ_ID = #popupPrjId#
		</isNotEmpty>
		<isEmpty property="popupPrjId">
			AND		A.PRJ_ID = #prjId#
		</isEmpty>
		<isNotEmpty property="reqId">
			AND A.REQ_ID = #reqId#
		</isNotEmpty>
		ORDER BY A.CHG_DTM
	</select>
	
	<!-- 요구사항 결재 정보 가져오기-->
	<select id="req4100DAO.selectReq4900ReqSignList" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[
			/* req4100DAO.selectReq4900ReqSignList - 요구사항 결재 정보 가져오기  */
			SELECT 'CHK' TYPE  
				,A.PRJ_ID
				,A.REQ_ID
				,C.REQ_NM
				,A.SIGN_ID
				,A.PROCESS_ID
				,B.FLOW_ID AS PREV_FLOW_ID
				,A.SIGN_FLOW_ID
				,B.FLOW_NM AS SIGN_FLOW_NM
				,B.FLOW_TITLE_BG_COLOR AS SIGN_FLOW_TITLE_BG_COLOR
				,B.FLOW_TITLE_COLOR AS SIGN_FLOW_TITLE_COLOR
				,A.SIGN_USR_ID
				,SF_ADM2000_USR_INFO(A.SIGN_USR_ID,'1') AS SIGN_USR_NM
				,SF_ADM2000_USR_INFO(A.SIGN_USR_ID,'6') AS SIGN_USR_IMG
				,A.SIGN_CD
				,SF_ADM4100_COM_CD_INFO(#licGrpId#,'REQ00004',A.SIGN_CD,'1') AS SIGN_CD_NM
				,REPLACE (A.SIGN_REJECT_CMNT ,'<br>' , '&nbsp;&nbsp;&nbsp;&nbsp;' ) AS SIGN_REJECT_CMNT
				,A.SIGN_DTM
				,A.REG_DTM
				,A.REG_USR_ID
				,SF_ADM2000_USR_INFO(A.REG_USR_ID,'1') AS REG_USR_NM
				,SF_ADM2000_USR_INFO(A.REG_USR_ID,'6') AS REG_USR_IMG
				,A.REG_USR_IP
			FROM REQ4900 A, FLW1100 B, REQ4100 C
			]]>
			<isNotEmpty property="signUsrId">
				, (SELECT A.PRJ_ID, A.REQ_ID, MAX(REG_DTM) AS MAX_REG_DTM FROM REQ4900 A GROUP BY A.PRJ_ID,A.REQ_ID) D
			</isNotEmpty>
			WHERE 1=1
				AND A.PRJ_ID = B.PRJ_ID
				AND A.PROCESS_ID = B.PROCESS_ID
				AND A.SIGN_FLOW_ID = B.FLOW_NEXT_ID(+)
				AND A.PRJ_ID = C.PRJ_ID
				AND A.REQ_ID = C.REQ_ID(+)
			
			<isNotEmpty property="popupPrjId">
				AND		A.PRJ_ID = #popupPrjId#
			</isNotEmpty>
			<isEmpty property="popupPrjId">
				AND		A.PRJ_ID = #prjId#
			</isEmpty>
			<isNotEmpty property="reqId">
				AND A.REQ_ID = #reqId#
			</isNotEmpty>
			<isNotEmpty property="signUsrId">
				AND A.PRJ_ID = D.PRJ_ID
                AND A.REQ_ID = D.REQ_ID
                AND A.REG_DTM = D.MAX_REG_DTM
				AND A.SIGN_USR_ID = #signUsrId#
			</isNotEmpty>
			ORDER BY A.REG_DTM
	</select>
    
   <!-- 요구사항 요청자 정보 조회 - 소속 명, 이메일, 연락처 -->
	<select id="req4100DAO.selectReq4100ReqUserInfo" parameterClass="java.util.Map" resultClass="egovMap">
		/* req4100DAO.selectReq4100ReqUserInfo 요구사항 요청자  정보 조회 - 소속 명, 이메일, 연락처  */
		<![CDATA[
			SELECT 
					A.USR_NM
					,	SF_ADM7000_DEPT_NM(#licGrpId#, A.DEPT_ID, '2') AS DEPT_NM
					,	A.EMAIL
					,	A.TELNO		
			FROM 
				ADM2000 A
			WHERE 1=1
			AND A.LIC_GRP_ID 	= #licGrpId#
			AND A.USR_ID 		= #reqUsrId#
		]]>
	</select>
    
	 <!-- 요구사항 정보 조회(단건) -->
    <select id="req4100DAO.selectReq4100ReqInfo" parameterClass="java.util.Map" resultClass="egovMap">
		/* req4100DAO.selectReq4100ReqInfo - 요구사항 정보 조회(단건) */
		<![CDATA[ 
			SELECT ROWNUM RN
					,	A.PRJ_ID
					,	SF_PRJ1000_GRP_NM(A.PRJ_ID) AS PRJ_NM
					,	A.REQ_ID
					,	A.REQ_ORD
					,	A.REQ_CLS_ID
					,	NVL(SF_REQ4000_REQ_CLS_NM(A.PRJ_ID, A.REQ_CLS_ID, '2'), '') AS REQ_CLS_NM
					,	A.REQ_NO
					,	A.REQ_USR_ID
					,	NVL(REQ_USR_NM, SF_ADM2000_USR_INFO(A.REQ_USR_ID, '1')) AS REQ_USR_NM
					,	TO_CHAR(A.REQ_DTM, 'YYYY-MM-DD') AS REQ_DTM
					,	A.REQ_USR_DEPT_NM
					,	A.REQ_USR_EMAIL
					,	A.REQ_USR_NUM
					,	A.REQ_NM
					,	A.REQ_DESC
					,	A.REQ_CHARGER_ID
					,	D.USR_NM	AS REQ_CHARGER_NM
					, 	NVL2(A.REQ_ST_DTM, TO_CHAR(A.REQ_ST_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ST_DTM
    		   		, 	NVL2(A.REQ_ED_DTM, TO_CHAR(A.REQ_ED_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ED_DTM
					, 	NVL2(A.REQ_ST_DU_DTM, TO_CHAR(A.REQ_ST_DU_DTM, 'YYYY-MM-DD') , '') REQ_ST_DU_DTM
					, 	NVL2(A.REQ_ED_DU_DTM, TO_CHAR(A.REQ_ED_DU_DTM, 'YYYY-MM-DD') , '') REQ_ED_DU_DTM
					,	A.REQ_PRO_TYPE
					,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00008', A.REQ_PRO_TYPE, '1') AS REQ_PRO_TYPE_NM
					,	A.REQ_NEW_TYPE
					,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00009', A.REQ_NEW_TYPE, '1') AS REQ_NEW_TYPE_NM
					,	A.REQ_ACCEPT_TXT
					,	A.SCL_CD
			    	,	A.REQ_TYPE_CD
			    	,	A.PIA_CD
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00011', A.SCL_CD, '1') AS SCL_NM
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00012', A.REQ_TYPE_CD, '1') AS REQ_TYPE_NM
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'CMM00001', A.PIA_CD, '1') AS PIA_NM
			    	,	A.LAB_INP
					,	A.ATCH_FILE_ID
					,	A.CB_ATCH_FILE_ID
					,	A.MILESTONE_ID
					,	A.PROCESS_ID
					,	'' AS PROCESS_NM
					,	A.FLOW_ID
					,	'' AS FLOW_NM
					,	A.USE_CD
				    ,	TO_CHAR(A.REG_DTM, 'YYYY-MM-DD') AS REG_DTM
				    ,	A.REG_USR_ID
				    ,	A.REG_USR_IP
				    ,	TO_CHAR(A.MODIFY_DTM, 'YYYY-MM-DD HH24:MI:SS') AS MODIFY_DTM
				    ,	A.MODIFY_USR_ID
				    ,	A.MODIFY_USR_IP
		      FROM (SELECT * FROM REQ4100 WHERE PRJ_ID = NVL(#prjId#,#selPrjId#) )  A
			    	,	ADM2000 D
		    WHERE 1=1
			AND		A.REQ_CHARGER_ID 	= D.USR_ID(+)
			AND		A.PRJ_ID 			= #prjId#
      		AND 	A.REQ_ID 			= #reqId#
 		]]> 
	</select>
	
	
		<!-- 요구사항 정보 등록 -->
	<insert id="req4100DAO.insertReq4100ReqInfo" parameterClass="java.util.Map">
		<selectKey resultClass="java.lang.String" keyProperty="newReqId">
		<![CDATA[
			/* req4100DAO.insertReq4100ReqInfo - 신규 요구사항 등록(새로운 REQ_ID 따기)*/ 
			SELECT	NVL( 
							SUBSTR(NEW_REQ_ID, 1, 11) || LPAD( (TO_NUMBER(SUBSTR(NEW_REQ_ID, 12, 5)) + 1) , 5, '0')
						,	'REQ' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '00001'
            		) AS NEW_REQ_ID 
			FROM	(
			            SELECT	MAX(REQ_ID)  AS NEW_REQ_ID
			            FROM	REQ4100 A
			            WHERE	1=1
                        AND		A.PRJ_ID = #prjId#
			            AND		A.REQ_ID LIKE 'REQ' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '%'
					)
		]]>
		</selectKey>
		<![CDATA[ 
			/* req4100DAO.insertReq4100ReqInfo - 요구사항 정보 등록 */ 
			INSERT INTO REQ4100
			(
			        PRJ_ID,				REQ_ID,				REQ_CLS_ID,			REQ_NO,					REQ_ORD
			        ,REQ_USR_ID,		REQ_DTM,			REQ_USR_DEPT_NM, 	REQ_USR_EMAIL
			        ,REQ_USR_NUM,		REQ_NM,				REQ_DESC,			REQ_CHARGER_ID
			        ,REQ_ST_DTM,		REQ_ED_DTM,			REQ_ST_DU_DTM,		REQ_ED_DU_DTM,			REQ_PRO_TYPE
			        ,REQ_NEW_TYPE,		ATCH_FILE_ID,		CB_ATCH_FILE_ID,	MILESTONE_ID		
			        ,PROCESS_ID,		FLOW_ID
			        ,USE_CD,			REG_DTM,			REG_USR_ID,			REG_USR_IP
			        ,MODIFY_DTM,		MODIFY_USR_ID,		MODIFY_USR_IP
			)                    
			VALUES
			(
					#prjId#,			#newReqId#,			#reqClsId#,			#reqNo#,	#reqOrd#
					,#regUsrId#
					,TO_DATE(REPLACE(#reqDtm#, '-'), 'YYYYMMDD')
					,#reqUsrDeptNm#,	#reqUsrEmail#
					,#reqUsrNum#,		#reqNm#,			#reqDesc#,			#reqChargerId#
					,TO_DATE(REPLACE(#reqStDtm#, '-'), 'YYYYMMDD HH24:MI')
					,TO_DATE(REPLACE(#reqEdDtm#, '-'), 'YYYYMMDD HH24:MI')
					,TO_DATE(REPLACE(#reqStDuDtm#, '-'), 'YYYYMMDD')
					,TO_DATE(REPLACE(#reqEdDuDtm#, '-'), 'YYYYMMDD')
					,'01'
					,#reqNewType#,		#atchFileId#,		#cbAtchFileId#,		#milestroneId#
					,#processId#,		#flowId#
					,'01',				SYSDATE,			#regUsrId#,			#regUsrIp#
					,SYSDATE,			#modifyUsrId#,		#modifyUsrIp#
			)
		]]>
	</insert>
	
	<!-- 요구사항 정보 수정 -->
	<update id="req4100DAO.updateReq4100ReqInfo" parameterClass="java.util.Map">
		/* req4100DAO.updateReq4100ReqInfo - 요구사항 정보 수정 */ 
		UPDATE 	REQ4100 A
		SET		REQ_NM			= #reqNm# 	
			,	REQ_NO			= #reqNo#
		    ,	REQ_DESC		= #reqDesc#
		    ,   REQ_NEW_TYPE    = #reqNewType#
		    ,	ATCH_FILE_ID	= #atchFileId#
		    ,	USE_CD			= #useCd#
		    ,	MODIFY_DTM		= SYSDATE
		    ,	MODIFY_USR_ID	= #modifyUsrId#
		    ,	MODIFY_USR_IP	= #modifyUsrIp#
		    , 	REQ_ST_DTM	= TO_DATE(REPLACE(#reqStDtm#, '-'), 'YYYYMMDD HH24:MI')
		    , 	REQ_ED_DTM	= TO_DATE(REPLACE(#reqEdDtm#, '-'), 'YYYYMMDD HH24:MI')
		    ,	REQ_ST_DU_DTM	= TO_DATE(REPLACE(#reqStDuDtm#, '-'), 'YYYYMMDD')
		    ,	REQ_ED_DU_DTM	= TO_DATE(REPLACE(#reqEdDuDtm#, '-'), 'YYYYMMDD')
		WHERE	1=1
		AND		A.PRJ_ID = #prjId#
		AND		A.REQ_ID = #reqId#
	</update>
	
	<!-- 요구사항 순번 조회 -->
	<select id="req4100DAO.selectReq4100NextReqOrd" parameterClass="java.util.Map" resultClass="String">
		/* req4100DAO.selectReq4100NextReqOrd 요구사항 순번 조회 */
		<![CDATA[
            SELECT  NVL(MAX(T.NEXT_REQ_ORD), '1') AS REQ_ORD
			FROM (
					SELECT	NVL( TO_CHAR( TO_NUMBER(SUBSTR(A.REQ_ORD, INSTR(A.REQ_ORD, '-')+1))) +1, '1' )
			       				AS NEXT_REQ_ORD   
					FROM	REQ4100 A
					WHERE	1=1
			        AND		A.PRJ_ID = #prjId# 
			) T  
		]]>
	</select>
	
	<!-- 요구사항의 첨부파일 정보 삭제 -->
	<delete id="req4100DAO.deleteReq4100ReqAtchFile" parameterClass="java.util.Map">
		/* req4100DAO.deleteReq4100ReqAtchFile - 삭제하려는 요구사항의 첨부파일 정보 삭제 */
		<![CDATA[
			DELETE 	FROM COMTNFILE
			WHERE 	1=1
			AND		ATCH_FILE_ID = #atchFileId#
		]]>	
	</delete>
	
	<!-- 요구사항의 첨부파일 상세정보 삭제 -->
	<delete id="req4100DAO.deleteReq4100ReqAtchFileDetail" parameterClass="java.util.Map">
		/* req4100DAO.deleteReq4100ReqAtchFileDetail - 삭제하려는 요구사항의 첨부파일 상세정보 삭제 */
		<![CDATA[
			DELETE 	FROM COMTNFILEDETAIL
			WHERE 	1=1
			AND		ATCH_FILE_ID = #atchFileId#
		]]>	
	</delete>
	
	<!-- 요구사항 반영 리비젼 정보 조회 -->
    <select id="req4100DAO.selectReq4100RevisionList" parameterClass="java.util.Map" resultClass="egovMap">
		/* req4100DAO.selectReq4100RevisionList - 요구사항 반영 리비젼 정보 조회 */
		<![CDATA[ 
			SELECT 	A.SVN_REP_ID,
					A.REVISION_COMMENT,
					A.REVISION_NUM,
			       	A.REG_DTM,
			       	B.SVN_REP_NM,
			       	B.USE_CD ,
			       	SF_ADM4100_COM_CD_INFO(#licGrpId#, 'CMM00001', B.USE_CD, '1') AS USE_CD_NM 
			  FROM 	FLW1400 A ,
			   		SVN1000 B
			WHERE 1=1
			AND 	A.PRJ_ID = #prjId#
			AND 	A.REQ_ID = #reqId#
			AND 	A.SVN_REP_ID = B.SVN_REP_ID
			AND 	B.LIC_GRP_ID = #licGrpId#
			ORDER BY A.REG_DTM desc
 		]]> 
	</select>
	
	<!-- 권한있는 프로젝트의 요구사항 검색 -->
    <select id="req4100DAO.selectReq4100PrjAuthReqList" parameterClass="java.util.Map"  resultClass="egovMap" >
	    /* req4100DAO.selectReq4100PrjAuthReqList 권한있는 프로젝트의 요구사항 검색*/
				SELECT T1.*, ROWNUM RN
		FROM
		(
			SELECT
						A.PRJ_ID
					,	A.REQ_ID
					,	A.REQ_ORD
					,	A.REQ_CLS_ID
					,	NVL(SF_REQ4000_REQ_CLS_NM(A.PRJ_ID, A.REQ_CLS_ID, '2'), '') AS REQ_CLS_NM
					/*,	(SELECT	REQ_CLS_NM
					        FROM	REQ4000 
					        WHERE	1=1
					        AND		PRJ_ID =A.PRJ_ID
					        AND		REQ_CLS_ID = A.REQ_CLS_ID
				        ) AS REQ_CLS_NM*/
					,	A.REQ_NO
					,	A.REQ_USR_ID
					,	NVL(A.REQ_USR_NM, SF_ADM2000_USR_INFO(A.REQ_USR_ID, '1'))  AS REQ_USR_NM
					,	TO_CHAR(A.REQ_DTM, 'YYYY-MM-DD') AS REQ_DTM
					,	A.REQ_USR_DEPT_NM
					,	A.REQ_USR_EMAIL
					,	A.REQ_USR_NUM
					,	A.REQ_NM
					<isNotEmpty property="reqId">
	    				,	A.REQ_DESC
	    			</isNotEmpty>
					<isEmpty property="reqId">
						<![CDATA[ 
	    				/* , REPLACE (REQ_DESC ,'<br>' , '&nbsp;&nbsp;&nbsp;&nbsp;' ) AS REQ_DESC */
	    				, REGEXP_REPLACE (A.REQ_DESC ,'</br>|<br>|<br/>' , ' ' ) AS REQ_DESC    
	    				]]>
	    			</isEmpty>
					,	A.REQ_CHARGER_ID
					,	A.REQ_COMPLETE_RATIO
					,	A.REQ_FP
			    	,	A.REQ_EX_FP
					,	D.USR_NM			AS REQ_CHARGER_NM
					, 	NVL2(A.REQ_ST_DTM, TO_CHAR(A.REQ_ST_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ST_DTM
    		   		, 	NVL2(A.REQ_ED_DTM, TO_CHAR(A.REQ_ED_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ED_DTM
					, 	NVL2(A.REQ_ST_DU_DTM, TO_CHAR(A.REQ_ST_DU_DTM, 'YYYY-MM-DD') , '') REQ_ST_DU_DTM
					, 	NVL2(A.REQ_ED_DU_DTM, TO_CHAR(A.REQ_ED_DU_DTM, 'YYYY-MM-DD') , '') REQ_ED_DU_DTM
					,	A.REQ_PRO_TYPE
					,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00008', A.REQ_PRO_TYPE, '1') AS REQ_PRO_TYPE_NM
					,	A.REQ_NEW_TYPE
					,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00009', A.REQ_NEW_TYPE, '1') AS REQ_NEW_TYPE_NM
					,	A.REQ_ACCEPT_TXT
					,	A.SCL_CD
			    	,	A.REQ_TYPE_CD
			    	,	A.PIA_CD
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00011', A.SCL_CD, '1') AS SCL_NM
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00012', A.REQ_TYPE_CD, '1') AS REQ_TYPE_NM
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'CMM00001', A.PIA_CD, '1') AS PIA_NM
			    	,	A.LAB_INP
					,	A.ATCH_FILE_ID
					,	A.CB_ATCH_FILE_ID
					,	A.MILESTONE_ID
					,	A.PROCESS_ID
					,	B.PROCESS_NM
					,	A.FLOW_ID
					,	C.FLOW_NM
					,	C.FLOW_NEXT_ID
					,	A.USE_CD
					,	E.SIGN_CD
					,	NVL(SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00004', E.SIGN_CD, '1'),'없음') AS SIGN_CD_NM
                    ,	E.SIGN_USR_ID
                    ,	NVL(SF_ADM2000_USR_INFO(E.SIGN_USR_ID, '1'),'없음')  AS SIGN_USR_NM
				    ,	TO_CHAR(A.REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM
				    ,	TO_CHAR(A.REG_DTM, 'YYYY-MM-DD') AS REG_DTM_DAY
				    ,	A.REG_USR_ID
				    ,	A.REG_USR_IP
				    ,	TO_CHAR(A.MODIFY_DTM, 'YYYY-MM-DD HH24:MI:SS') AS MODIFY_DTM
				    ,	A.MODIFY_USR_ID
				    ,	A.MODIFY_USR_IP
				    ,   A.ORG_REQ_ID
		    FROM (SELECT * FROM REQ4100 WHERE 1 = 1
		    		)  A
		    	,	FLW1000 B
			    ,	FLW1100 C
			    ,	ADM2000 D
			    ,(
	                  SELECT Y.*
	                  FROM REQ4900 Y, (SELECT Z.REQ_ID, MAX(REG_DTM) AS REG_DTM FROM REQ4900 Z GROUP BY Z.REQ_ID) X
	                  WHERE 1=1
	                  AND Y.REQ_ID = X.REQ_ID
	                  AND Y.REG_DTM = X.REG_DTM
	              ) E
		    WHERE 1=1
            AND		A.PRJ_ID = B.PRJ_ID(+)
			AND		A.PROCESS_ID = B.PROCESS_ID(+)
			AND		A.PRJ_ID = C.PRJ_ID(+)
			AND		A.PROCESS_ID = C.PROCESS_ID(+)
			AND		A.FLOW_ID = C.FLOW_ID(+)
			AND		A.REQ_CHARGER_ID = D.USR_ID(+)
			AND A.PRJ_ID = E.PRJ_ID(+)
			AND A.REQ_ID = E.REQ_ID(+)
		    ORDER BY A.REQ_PRO_TYPE ASC, TO_NUMBER(REGEXP_REPLACE(A.REQ_ORD, '[^0-9]')) DESC NULLS LAST, A.REQ_DTM DESC, A.REG_DTM DESC
		) T1,
        (            
			                            SELECT	A.PRJ_ID
			                                ,	A.USR_ID
			                            FROM	ADM1300 A
			                                ,	ADM1100 B
			                            WHERE	1=1
			                            AND		A.PRJ_ID = B.PRJ_ID
			                            AND		A.AUTH_GRP_ID = B.AUTH_GRP_ID
			                            AND		A.USR_ID = #usrId#
			                            GROUP BY A.PRJ_ID, A.USR_ID
			                        ) T2
        WHERE 1=1
        AND T1.PRJ_ID = T2.PRJ_ID
    </select>
    
	<!-- 요구사항 담당자 변경 -->
	<update id="req4100DAO.updateReq4100ReqChargerChgInfoAjax" parameterClass="java.util.Map">
		/* req4100DAO.updateReq4100ReqChargerChgInfoAjax - 요구사항 담당자 변경 */ 
		UPDATE 	REQ4100 A
		SET	
			REQ_CHARGER_ID			= #reqChargerId#
		    ,	MODIFY_DTM			= SYSDATE
		    ,	MODIFY_USR_ID		= #modifyUsrId#
		    ,	MODIFY_USR_IP		= #modifyUsrIp#
		WHERE	1=1
		AND		A.PRJ_ID = #prjId#
		AND		A.REQ_ID = #reqId#
	</update>
</sqlMap>