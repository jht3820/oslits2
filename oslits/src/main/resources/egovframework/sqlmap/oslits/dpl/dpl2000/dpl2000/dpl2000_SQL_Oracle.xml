<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="dpl2000DAO">
	<typeAlias alias="egovMap" 		type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias alias="dpl2000VO"	type="kr.opensoftlab.oslits.dpl.dpl2000.dpl2000.vo.Dpl2000VO"/>

	<!-- Map Define -->
   	<resultMap id="resultMapSelectDpl2000" class="dpl2000VO">
		<result property="rn"  				column="RN"/>
		<result property="prjId"				column="PRJ_ID"/>
		<result property="reqId"				column="REQ_ID"/>
		<result property="reqClsId"				column="REQ_CLS_ID"/>
		<result property="reqClsNm"				column="REQ_CLS_NM"/>
		<result property="reqNo"				column="REQ_NO"/>
		<result property="reqUsrId"				column="REQ_USR_ID"/>
		<result property="reqUsrNm"				column="REQ_USR_NM"/>
		<result property="reqDtm"				column="REQ_DTM"/>
		<result property="reqUsrDeptNm"			column="REQ_USR_DEPT_NM"/>
		<result property="reqUsrEmail"			column="REQ_USR_EMAIL"/>
		<result property="reqUsrNum"			column="REQ_USR_NUM"/>
		<result property="reqNm"				column="REQ_NM"/>
		<result property="reqDesc"				column="REQ_DESC"/>
		<result property="reqChargerId"			column="REQ_CHARGER_ID"/>
		<result property="reqCompleteRatio"		column="REQ_COMPLETE_RATIO"/>
		<result property="reqFp"				column="REQ_FP"/>
		<result property="reqExFp"				column="REQ_EX_FP"/>
		<result property="reqStDtm"				column="REQ_ST_DTM"/>
		<result property="reqEdDtm"				column="REQ_ED_DTM"/>
		<result property="reqStDuDtm"			column="REQ_ST_DU_DTM"/>
		<result property="reqEdDuDtm"			column="REQ_ED_DU_DTM"/>
		<result property="reqProType"			column="REQ_PRO_TYPE"/>
		<result property="reqProTypeNm"			column="REQ_PRO_TYPE_NM"/>
		<result property="reqNewType"			column="REQ_NEW_TYPE"/>
		<result property="reqNewTypeNm"			column="REQ_NEW_TYPE_NM"/>		
		<result property="reqAcceptTxt"			column="REQ_ACCEPT_TXT"/>	
		<result property="sclCd"				column="SCL_CD"/>
		<result property="reqTypeCd"			column="REQ_TYPE_CD"/>
		<result property="piaCd"				column="PIA_CD"/>
		<result property="labInp"				column="LAB_INP"/>	
		<result property="atchFileId"			column="ATCH_FILE_ID"/>
		<result property="cbAtchFileId"			column="CB_ATCH_FILE_ID"/>
		<result property="milestoneId"			column="MILESTONE_ID"/>
		<result property="processId"			column="PROCESS_ID"/>
		<result property="processNm"			column="PROCESS_NM"/>
		<result property="flowId"				column="FLOW_ID"/>
		<result property="flowNm"				column="FLOW_NM"/>
		<result property="useCd"				column="USE_CD"/>
 		<result property="regDtmDay"			column="REG_DTM_DAY"/>
 		<result property="dplId"			column="DPL_ID"/>
		<result property="dplVer"  			column="DPL_VER"/>
    </resultMap>
    
    
    
    <sql id="selectDpl2000List">
    	SELECT T1.*
		FROM
		(
			SELECT LEVEL AS LVL
					,	A.PRJ_ID
					,	A.REQ_ID
					,	A.REQ_ORD
					,	A.REQ_CLS_ID
					,	NVL(SF_REQ4000_REQ_CLS_NM(A.PRJ_ID, A.REQ_CLS_ID, '2'), '') AS REQ_CLS_NM
					,	A.REQ_NO
					,	A.REQ_USR_ID
					,	NVL(A.REQ_USR_NM, SF_ADM2000_USR_INFO(A.REQ_USR_ID, '1'))  AS REQ_USR_NM
					,	TO_CHAR(A.REQ_DTM, 'YYYY-MM-DD') AS REQ_DTM
					,	A.REQ_USR_DEPT_NM
					,	A.REQ_USR_EMAIL
					,	A.REQ_USR_NUM
					,	A.REQ_NM
					<isNotEmpty property="reqId">
	    				,	A.REQ_DESC
	    			</isNotEmpty>
					<isEmpty property="reqId">
						<![CDATA[ 
	    				/* , REPLACE (REQ_DESC ,'<br>' , '&nbsp;&nbsp;&nbsp;&nbsp;' ) AS REQ_DESC */
	    				, REGEXP_REPLACE (A.REQ_DESC ,'</br>|<br>|<br/>' , ' ' ) AS REQ_DESC    
	    				]]>
	    			</isEmpty>
					,	A.REQ_CHARGER_ID
					,	A.REQ_COMPLETE_RATIO
					,	A.REQ_FP
			    	,	A.REQ_EX_FP
					,	D.USR_NM			AS REQ_CHARGER_NM
					, 	NVL2(A.REQ_ST_DTM, TO_CHAR(A.REQ_ST_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ST_DTM
    		   		, 	NVL2(A.REQ_ED_DTM, TO_CHAR(A.REQ_ED_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ED_DTM
					, 	NVL2(A.REQ_ST_DU_DTM, TO_CHAR(A.REQ_ST_DU_DTM, 'YYYY-MM-DD') , '') REQ_ST_DU_DTM
					, 	NVL2(A.REQ_ED_DU_DTM, TO_CHAR(A.REQ_ED_DU_DTM, 'YYYY-MM-DD') , '') REQ_ED_DU_DTM
					,	A.REQ_PRO_TYPE
					,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00008', A.REQ_PRO_TYPE, '1') AS REQ_PRO_TYPE_NM
					,	A.REQ_NEW_TYPE
					,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00009', A.REQ_NEW_TYPE, '1') AS REQ_NEW_TYPE_NM
					,	A.REQ_ACCEPT_TXT
					,	A.SCL_CD
			    	,	A.REQ_TYPE_CD
			    	,	A.PIA_CD
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00011', A.SCL_CD, '1') AS SCL_NM
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00012', A.REQ_TYPE_CD, '1') AS REQ_TYPE_NM
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'CMM00001', A.PIA_CD, '1') AS PIA_NM
			    	,	A.LAB_INP
					,	A.ATCH_FILE_ID
					,	A.CB_ATCH_FILE_ID
					,	A.MILESTONE_ID
					,	A.PROCESS_ID
					,	B.PROCESS_NM
					,	A.FLOW_ID
					,	C.FLOW_NM
					,	C.FLOW_NEXT_ID
					,	A.USE_CD
                    ,   A.ORG_REQ_ID
				    , 	E.DPL_ID
				    , 	E.DPL_VER
				    ,	TO_CHAR(A.REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM
				    ,	TO_CHAR(A.REG_DTM, 'YYYY-MM-DD') AS REG_DTM_DAY
				    ,	A.REG_USR_ID
				    ,	A.REG_USR_IP
				    ,	TO_CHAR(A.MODIFY_DTM, 'YYYY-MM-DD HH24:MI:SS') AS MODIFY_DTM
				    ,	A.MODIFY_USR_ID
				    ,	A.MODIFY_USR_IP
		    FROM (SELECT * FROM REQ4100 WHERE PRJ_ID = #prjId#)  A
		    	,	FLW1000 B
			    ,	FLW1100 C
			    ,	ADM2000 D
			    ,	DPL1000 E
		    WHERE 1=1
			AND		A.PRJ_ID = B.PRJ_ID(+)
			AND		A.PROCESS_ID = B.PROCESS_ID(+)
			AND		A.PRJ_ID = C.PRJ_ID(+)
			AND		A.PROCESS_ID = C.PROCESS_ID(+)
			AND		A.FLOW_ID = C.FLOW_ID(+)
			AND		A.REQ_CHARGER_ID = D.USR_ID(+)
			AND		C.PRJ_ID = E.PRJ_ID(+)
			AND		A.DPL_ID = E.DPL_ID
		    ORDER BY A.REQ_PRO_TYPE ASC, TO_NUMBER(REGEXP_REPLACE(A.REQ_ORD, '[^0-9]')) DESC NULLS LAST, A.REQ_DTM DESC, A.REG_DTM DESC
		) T1 WHERE 1 = 1
			
		<isNotEmpty property="searchSelect">
			<isEqual property="searchSelect" compareValue="dplId"> 
				AND		T1.DPL_ID LIKE '%'|| #searchTxt# ||'%'
			</isEqual>
			<isNotEmpty property="searchCd">
				<isEqual property="searchSelect" compareValue="dplVer">
				AND		T1.DPL_VER =  #searchCd#
				</isEqual>
			</isNotEmpty>
			<isEqual property="searchSelect" compareValue="reqClsNm">
				AND		NVL(SF_REQ4000_REQ_CLS_NM(T1.PRJ_ID, T1.REQ_CLS_ID, '1'), '미분류') LIKE '%'|| #searchTxt# ||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="reqNm">
				AND		T1.REQ_NM LIKE '%'|| #searchTxt# ||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="reqDesc">
				AND		T1.REQ_DESC LIKE '%'|| #searchTxt# ||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="reqChargerNm">
				AND		T1.USR_NM LIKE '%'|| #searchTxt# ||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="reqId">
				AND		T1.REQ_ID LIKE '%' || #searchTxt# || '%'
			</isEqual>
		</isNotEmpty>
	
			ORDER BY REQ_DTM DESC
    </sql>
    
    
    
    <select id="dpl2000DAO.selectDpl2000List" parameterClass="dpl2000VO"  resultMap="resultMapSelectDpl2000">
	    /*dpl2000DAO.selectDpl2000List 배포버전별 요구사항 확인 목록을 조회한다.*/
		SELECT *
		FROM
			(
    			SELECT ROWNUM RN,
    			     A.*
    			FROM
    			(<include refid="selectDpl2000List"/>) A
	    	)
	    	WHERE RN BETWEEN (#firstIndex#+1) AND #lastIndex#
    </select>
    
    
    
    <select id="dpl2000DAO.selectDpl2000ListCnt" parameterClass="dpl2000VO"  resultClass="java.lang.Integer">
	    /*dpl2000DAO.selectDpl2000ListCnt 배포버전별 요구사항 확인 목록 총건수를 조회한다.*/
	    SELECT
			COUNT(*)
		FROM	(
			<include refid="selectDpl2000List"/>
						) A
    </select>
    
    
    
	<select id="dpl2000DAO.selectDpl2000SelectBox" parameterClass="java.util.Map" resultClass="egovMap">
		/* dpl2000DAO.selectDpl2000SelectBox - 배포버전별 요구사항 확인 SELECT BOX 조회 */
		SELECT	A.DPL_ID
				, A.DPL_NM
				, A.DPL_DT
				, A.PRJ_ID
				, A.DPL_USR_ID
				, A.DPL_VER
				, SF_ADM2000_USR_INFO(A.DPL_USR_ID, 1) AS DPL_USR_NM
		FROM 	DPL1000 A
		WHERE	A.PRJ_ID = #prjId#
		<isNotEmpty property="searchTxt">
			AND A.DPL_NM LIKE '%'|| #searchTxt# ||'%' 
		</isNotEmpty>
		ORDER BY A.DPL_DT DESC
	</select>
	
	
	<select id="dpl2000DAO.selectDpl2000dplVerList" parameterClass="java.util.Map" resultClass="egovMap">
		/* dpl2000DAO.selectDpl2000dplVerList - 배포버전 목록 조회  */
		SELECT		
			A.DPL_VER AS DPL_VER
		FROM 	DPL1000 A
		WHERE	A.PRJ_ID = #selPrjId#
		GROUP BY DPL_VER
		ORDER BY DPL_VER
	</select>
	
	<select id="dpl2000DAO.selectDpl2000DetailAjax" parameterClass="java.util.Map"  resultClass="egovMap">
		/* dpl2000DAO.selectDpl2000DetailAjax - 배포버전별 요구사항 확인 디테일 단건정보 조회 */
		SELECT	,	A.PRJ_ID
					,	A.REQ_ID
					,	A.REQ_ORD
					,	A.REQ_CLS_ID
					,	NVL(SF_REQ4000_REQ_CLS_NM(A.PRJ_ID, A.REQ_CLS_ID, '2'), '') AS REQ_CLS_NM
					,	A.REQ_NO
					,	A.REQ_USR_ID
					,	NVL(A.REQ_USR_NM, SF_ADM2000_USR_INFO(A.REQ_USR_ID, '1'))  AS REQ_USR_NM
					,	TO_CHAR(A.REQ_DTM, 'YYYY-MM-DD') AS REQ_DTM
					,	A.REQ_USR_DEPT_NM
					,	A.REQ_USR_EMAIL
					,	A.REQ_USR_NUM
					,	A.REQ_NM
					<isNotEmpty property="reqId">
	    				,	A.REQ_DESC
	    			</isNotEmpty>
					<isEmpty property="reqId">
						<![CDATA[ 
	    				/* , REPLACE (REQ_DESC ,'<br>' , '&nbsp;&nbsp;&nbsp;&nbsp;' ) AS REQ_DESC */
	    				, REGEXP_REPLACE (A.REQ_DESC ,'</br>|<br>|<br/>' , ' ' ) AS REQ_DESC    
	    				]]>
	    			</isEmpty>
					,	A.REQ_CHARGER_ID
					,	A.REQ_COMPLETE_RATIO
					,	A.REQ_FP
			    	,	A.REQ_EX_FP
					,	D.USR_NM			AS REQ_CHARGER_NM
					, 	NVL2(A.REQ_ST_DTM, TO_CHAR(A.REQ_ST_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ST_DTM
    		   		, 	NVL2(A.REQ_ED_DTM, TO_CHAR(A.REQ_ED_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ED_DTM
					, 	NVL2(A.REQ_ST_DU_DTM, TO_CHAR(A.REQ_ST_DU_DTM, 'YYYY-MM-DD') , '') REQ_ST_DU_DTM
					, 	NVL2(A.REQ_ED_DU_DTM, TO_CHAR(A.REQ_ED_DU_DTM, 'YYYY-MM-DD') , '') REQ_ED_DU_DTM
					,	A.REQ_PRO_TYPE
					,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00008', A.REQ_PRO_TYPE, '1') AS REQ_PRO_TYPE_NM
					,	A.REQ_NEW_TYPE
					,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00009', A.REQ_NEW_TYPE, '1') AS REQ_NEW_TYPE_NM
					,	A.REQ_ACCEPT_TXT
					,	A.SCL_CD
			    	,	A.REQ_TYPE_CD
			    	,	A.PIA_CD
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00011', A.SCL_CD, '1') AS SCL_NM
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00012', A.REQ_TYPE_CD, '1') AS REQ_TYPE_NM
			    	,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'CMM00001', A.PIA_CD, '1') AS PIA_NM
			    	,	A.LAB_INP
					,	A.ATCH_FILE_ID
					,	A.CB_ATCH_FILE_ID
					,	A.MILESTONE_ID
					,	A.PROCESS_ID
					,	B.PROCESS_NM
					,	A.FLOW_ID
					,	C.FLOW_NM
					,	C.FLOW_NEXT_ID
					,	A.USE_CD
                    ,   A.ORG_REQ_ID
				    , 	E.DPL_ID
				    , 	E.DPL_VER
				    ,	TO_CHAR(A.REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM
				    ,	TO_CHAR(A.REG_DTM, 'YYYY-MM-DD') AS REG_DTM_DAY
				    ,	A.REG_USR_ID
				    ,	A.REG_USR_IP
				    ,	TO_CHAR(A.MODIFY_DTM, 'YYYY-MM-DD HH24:MI:SS') AS MODIFY_DTM
				    ,	A.MODIFY_USR_ID
				    ,	A.MODIFY_USR_IP
		FROM	REQ4100 A
			,	FLW1000 B
			,	FLW1100 C
		    ,	ADM2000 D
		    ,	DPL1000 E
		WHERE	1=1
		AND		A.PRJ_ID = B.PRJ_ID(+)
		AND		A.PROCESS_ID = B.PROCESS_ID(+)
		AND		A.PRJ_ID = C.PRJ_ID(+)
		AND		A.PROCESS_ID = C.PROCESS_ID(+)
		AND		A.FLOW_ID = C.FLOW_ID(+)
		AND		A.REQ_CHARGER_ID = D.USR_ID(+)
		AND		C.PRJ_ID = E.PRJ_ID(+)
		AND		A.DPL_ID = E.DPL_ID
		AND		A.PRJ_ID = #selPrjId#
        AND		A.REQ_ID = #reqId#
        <isNotEmpty property="dplId">
			AND		E.DPL_ID = #dplId#
		</isNotEmpty>
	</select>
	
	
	
	<select id="dpl2000DAO.selectDpl2000CommentListAjax" parameterClass="java.util.Map"  resultClass="egovMap">
		/* dpl2000DAO.selectDpl2000CommentListAjax - 배포버전별 요구사항 확인 코멘트 목록 조회 */
		SELECT	PRJ_ID
        	,	REQ_ID
            ,	REQ_CMNT_SEQ
            ,	REQ_CMNT
            ,	TO_CHAR(REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM
            ,	REG_USR_ID
            ,	SF_ADM2000_USR_INFO(REG_USR_ID, 1) AS REG_USR_NM
            ,	REG_USR_IP
            ,	MODIFY_DTM
            ,	MODIFY_USR_ID
            ,	MODIFY_USR_IP
        FROM	REQ4300 A
        WHERE	1=1
        AND		A.PRJ_ID = #selPrjId#
        AND		A.REQ_ID = #reqId#
        ORDER BY REQ_CMNT_SEQ DESC
	</select>
	
	

	<insert id="dpl2000DAO.insertDpl2000ReqCommentInfoAjax" parameterClass="java.util.Map">
		<selectKey resultClass="java.lang.String" keyProperty="newReqCmntSeq">
		<![CDATA[
			/* dpl2000DAO.insertDpl2000ReqCommentInfoAjax - 배포버전별 요구사항 확인 코멘트 등록(새로운 코멘트 순번 따기)*/ 
			SELECT	NVL(MAX(REQ_CMNT_SEQ) + 1, 1) AS REQ_CMNT_SEQ
	        FROM	REQ4300 A
	        WHERE	1=1
	        AND		A.PRJ_ID = #prjId#
	        AND		A.REQ_ID = #reqId#
		]]>
		</selectKey>
		
		<![CDATA[ 
			/* dpl2000DAO.insertDpl2000ReqCommentInfoAjax  - 배포버전별 요구사항 확인 코멘트 등록  */ 
			INSERT	INTO	REQ4300 A
        (
        	PRJ_ID,			REQ_ID,			REQ_CMNT_SEQ,		REQ_CMNT,
            REG_DTM,		REG_USR_ID,		REG_USR_IP,			MODIFY_DTM,
            MODIFY_USR_ID,	MODIFY_USR_IP	
        )
        VALUES
        (
        	#prjId#,		#reqId#,		#newReqCmntSeq#,	#reqCmnt#,
            SYSDATE,		#regUsrId#,		#regUsrIp#,			SYSDATE,
            #modifyUsrId#,	#modifyUsrIp#
        )
		]]>
	</insert>



	<select id="dpl2000DAO.selectDpl2000ReqCommentListAjax" parameterClass="java.util.Map"  resultClass="egovMap">
		/* dpl2000DAO.selectDpl2000ReqCommentListAjax - 배포버전별 요구사항 확인 코멘트 목록 조회 */
		SELECT	PRJ_ID
        	,	REQ_ID
            ,	REQ_CMNT_SEQ
            ,	REQ_CMNT
            ,	TO_CHAR(REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM
            ,	REG_USR_ID
            ,	SF_ADM2000_USR_INFO(REG_USR_ID, 1) AS REG_USR_NM
            ,	REG_USR_IP
            ,	MODIFY_DTM
            ,	MODIFY_USR_ID
            ,	MODIFY_USR_IP
        FROM	REQ4300 A
        WHERE	1=1
        AND		A.PRJ_ID = #selPrjId#
        AND		A.REQ_ID = #reqId#
        ORDER BY REQ_CMNT_SEQ DESC
	</select>
	
	<!-- Job별 빌드 결과를 조회한다. -->
	<select id="dpl2000DAO.selectDpl2000JobBuildList" parameterClass="java.util.Map" resultClass="egovMap">
			<![CDATA[
			/* dpl2000DAO.selectDpl2000JobBuildList - 	배포 빌드 결과 이력 조회  */
				    SELECT 	B.JEN_NM              /* JENKINS JOB 명 */ 
        				  ,	REPLACE (B.JEN_TXT ,'<br>' , '&nbsp;&nbsp;&nbsp;&nbsp;' ) AS JEN_TXT               /* JENKINS JOB Comment */ 
        				  , B.JEN_USR_ID
        				  , B.JEN_USR_TOK
        				  , B.JEN_URL
        				  , DECODE( (   SELECT 1 
			                 			  FROM 
						  						DPL1100 C 
						 				  WHERE C.PRJ_ID = A.PRJ_ID 
						   					AND C.DPL_ID =   #dplId#
               								AND C.JEN_ID = A.JEN_ID
               								AND C.LIC_GRP_ID = #licGrpId#
						   					AND ROWNUM = 1
				       				) 
				       	  			, 1  
        				  
		        				    , NVL(  ( SELECT 
							                         	/*+ INDEX_DESC (C PK_DPL1100 ) */  BLD_STS 
							                  FROM 
											         DPL1100 C 
											   WHERE C.PRJ_ID = A.PRJ_ID 
											     AND C.DPL_ID = #dplId#
				                       			 AND C.JEN_ID = A.JEN_ID
				                       			 AND C.LIC_GRP_ID = #licGrpId#
												 AND ROWNUM = 1
									  		)  , 'PROGRES' ) 
								    ,'NONE' ) AS BLD_STS	
							,  ( SELECT 
							                         	/*+ INDEX_DESC (C PK_DPL1100 ) */  BLD_NUM 
							                  FROM 
											         DPL1100 C 
											   WHERE C.PRJ_ID = A.PRJ_ID 
											     AND C.DPL_ID = #dplId#
				                       			 AND C.JEN_ID = A.JEN_ID
				                       			 AND C.LIC_GRP_ID = #licGrpId#
												 AND ROWNUM = 1
									  		)	AS BLD_NUM   
      			FROM
		            JEN1000 B ,
         			(   SELECT PRJ_ID , 
         			           JEN_ID ,
         			           LIC_GRP_ID 
         			    FROM   JEN1100 
         			    WHERE  PRJ_ID  = #prjId# )  A
					WHERE   1=1
					AND		A.LIC_GRP_ID = #licGrpId#
					AND		A.LIC_GRP_ID = B.LIC_GRP_ID
					AND     A.JEN_ID = B.JEN_ID
					AND     B.USE_CD ='01'
      	]]>
	</select>
	
	
	<!-- 빌드 상태가 업데이트 되지 않는 이력을 조회한다. -->
    <select id="dpl2000DAO.selectDpl2000BuildStatus" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[
			/* dpl2000DAO.selectDpl2000BuildStatus - 	빌드 상태가 업데이트 되지 않는 이력을 조회  */
				 SELECT 
				 			A.PRJ_ID
				 		 ,  A.DPL_ID
				 		 ,	B.DPL_SEQ
				 		 , 	B.BLD_NUM
				 		 , 	D.JEN_USR_ID
				 		 ,	D.JEN_USR_TOK
				 		 ,  D.JEN_NM
				 		 ,  D.JEN_URL
				 		 ,  D.JEN_ID
				 		 ,  B.LIC_GRP_ID
			    	FROM 	DPL1000 A
			    	 	 ,  DPL1100 B
               			 ,  JEN1100 C
			    	 	 ,  JEN1000 D
					WHERE 
						 A.PRJ_ID = #prjId#
					AND  A.DPL_ID  = #dplId#
					AND  A.PRJ_ID  = C.PRJ_ID
			    	AND  B.PRJ_ID = A.PRJ_ID
			    	AND  B.DPL_ID = A.DPL_ID 
            		AND B.LIC_GRP_ID = C.LIC_GRP_ID 
                    AND B.LIC_GRP_ID = D.LIC_GRP_ID 
           			AND  B.JEN_ID = C.JEN_ID   
            		AND  C.JEN_ID  = D.JEN_ID								
			    	AND  B.BLD_STS IS NULL

		]]>
	</select>
	
	
	<!-- 빌드 상태를 업데이트한다. -->
	<update id="dpl2000DAO.updateDpl2000BuildStatus" parameterClass="java.util.Map">
		
		<![CDATA[ 
			UPDATE     DPL1100     SET 

 
			           BLD_STS = #bldSts#            /* 빌드 결과 */ 
 
			WHERE
			     	   1=1
          	 AND       PRJ_ID = #prjId#              /* 프로젝트 ID */ 
             AND       DPL_ID = #dplId#              /* 배포 ID */ 
             AND       JEN_ID = #jenId#            /* 배포 순번 */ 
             AND       DPL_SEQ = #dplSeq#            /* 배포 순번 */ 
             AND       LIC_GRP_ID = #licGrpId#

		]]>
	</update>
	
	
</sqlMap>
