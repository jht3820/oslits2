<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="dpl1100DAO">

	<!--  in / out class define  -->
	 <typeAlias alias="dpl1100DAO"	type="kr.opensoftlab.oslits.dpl.dpl1000.dpl1100.vo.Dpl1100VO"/>
	<typeAlias  alias="egovMap" 	type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

	<!-- 배포자 리스트 가져오기 -->
	<select id="dpl1100DAO.selectDpl1100ExistDplList" parameterClass="java.util.Map" resultClass="egovMap">
			/* dpl1100DAO.selectDpl1100ExistDplList - 	배포버전 배정 요구사항 조회  */
			SELECT 
				Z.PRJ_ID
				, Z.REQ_ID
                , Z.DPL_ID
                , X.REQ_ORD
				, X.REQ_NO
				, X.REQ_NM
				 <![CDATA[ 
	    		, REGEXP_REPLACE (X.REQ_DESC ,'</br>|<br>|<br/>' , ' ' ) AS REQ_DESC    
	    		]]>
				, X.REQ_CHARGER_ID
				, SF_ADM2000_USR_INFO(X.REQ_CHARGER_ID, '1') AS REQ_CHARGER_NM
				, X.REQ_USR_ID
				, NVL(X.REQ_USR_NM, SF_ADM2000_USR_INFO(X.REQ_USR_ID, '1')) AS REQ_USR_NM
				, TO_CHAR(X.REQ_DTM, 'YYYY-MM-DD') AS REQ_DTM
				, NVL2(X.REQ_ST_DTM, TO_CHAR(X.REQ_ST_DTM, 'YYYY-MM-DD') , '') REQ_ST_DTM
    		   	, NVL2(X.REQ_ED_DTM, TO_CHAR(X.REQ_ED_DTM, 'YYYY-MM-DD') , '') REQ_ED_DTM
				, NVL2(X.REQ_ST_DU_DTM, TO_CHAR(X.REQ_ST_DU_DTM, 'YYYY-MM-DD') , '') REQ_ST_DU_DTM
				, NVL2(X.REQ_ED_DU_DTM, TO_CHAR(X.REQ_ED_DU_DTM, 'YYYY-MM-DD') , '') REQ_ED_DU_DTM
				, X.REQ_PRO_TYPE
				, SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00008', X.REQ_PRO_TYPE, '1') AS REQ_PRO_TYPE_NM
				, X.REQ_NEW_TYPE
				, SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00009', X.REQ_NEW_TYPE, '1') AS REQ_NEW_TYPE_NM
				, Z.PROCESS_ID
				, V.PROCESS_NM
				, Y.FLOW_ID
				, Y.FLOW_NM
                , W.DPL_NM
                , W.DPL_VER
                , W.DPL_STS_CD
                , SF_ADM4100_COM_CD_INFO(#licGrpId#, 'DPL00001', W.DPL_STS_CD, '1') AS DPL_STS_NM
			FROM DPL1200 Z, FLW1100 Y, REQ4100 X, DPL1000 W, FLW1000 V
			WHERE 1=1
			AND Z.PRJ_ID = #prjId#
			<isNotEmpty property="dplId">
				AND Z.DPL_ID = #dplId#
			</isNotEmpty>
			<isNotEmpty property="reqId">
				AND Z.REQ_ID = #reqId#
			</isNotEmpty>
			AND Z.PRJ_ID = Y.PRJ_ID
			AND Z.PROCESS_ID = Y.PROCESS_ID
			AND Z.FLOW_ID = Y.FLOW_ID
			AND Z.PRJ_ID = X.PRJ_ID
			AND Z.REQ_ID = X.REQ_ID
			AND Z.PRJ_ID = W.PRJ_ID
			AND Z.DPL_ID = W.DPL_ID
			AND Z.PRJ_ID = V.PRJ_ID
            AND Z.PROCESS_ID = V.PROCESS_ID
			ORDER BY TO_NUMBER(REGEXP_REPLACE(X.REQ_ORD, '[^0-9]')) DESC NULLS LAST, Z.REQ_ID, Y.REG_DTM DESC
	</select>
	
	
	
	<select id="dpl1100DAO.selectDpl1100NotExistDplList" parameterClass="java.util.Map" resultClass="egovMap">
			/* dpl1100DAO.selectDpl1100NotExistDplList - 	배포버전  미배정 요구사항 리스트 조회  */
			SELECT
				Z.PRJ_ID
				, Z.REQ_ID
				, X.REQ_ORD
				, X.REQ_NO
				, X.REQ_NM
				, X.REQ_TYPE_CD
				 <![CDATA[ 
	    		, REGEXP_REPLACE (X.REQ_DESC ,'</br>|<br>|<br/>' , ' ' ) AS REQ_DESC    
	    		]]>
				, X.REQ_CHARGER_ID
				, SF_ADM2000_USR_INFO(X.REQ_CHARGER_ID, '1') AS REQ_CHARGER_NM
				, X.REQ_USR_ID
				, NVL(X.REQ_USR_NM, SF_ADM2000_USR_INFO(X.REQ_USR_ID, '1')) AS REQ_USR_NM
				, TO_CHAR(X.REQ_DTM, 'YYYY-MM-DD') AS REQ_DTM
				, NVL2(X.REQ_ST_DTM, TO_CHAR(X.REQ_ST_DTM, 'YYYY-MM-DD') , '') REQ_ST_DTM
    		   	, NVL2(X.REQ_ED_DTM, TO_CHAR(X.REQ_ED_DTM, 'YYYY-MM-DD') , '') REQ_ED_DTM
				, NVL2(X.REQ_ST_DU_DTM, TO_CHAR(X.REQ_ST_DU_DTM, 'YYYY-MM-DD') , '') REQ_ST_DU_DTM
				, NVL2(X.REQ_ED_DU_DTM, TO_CHAR(X.REQ_ED_DU_DTM, 'YYYY-MM-DD') , '') REQ_ED_DU_DTM
				, X.REQ_PRO_TYPE
				, SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00008', X.REQ_PRO_TYPE, '1') AS REQ_PRO_TYPE_NM
				, X.REQ_NEW_TYPE
				, SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00009', X.REQ_NEW_TYPE, '1') AS REQ_NEW_TYPE_NM
				, Z.PROCESS_ID
				, V.PROCESS_NM
				, Y.FLOW_ID
				, Y.FLOW_NM
			FROM REQ4700 Z, FLW1100 Y, REQ4100 X, FLW1000 V
			WHERE 1=1
			AND Z.PRJ_ID = #prjId#
			AND Z.CHG_FLOW_ID IS NOT NULL
			AND Z.PRJ_ID = Y.PRJ_ID
			AND Z.PROCESS_ID = Y.PROCESS_ID
			AND Z.CHG_FLOW_ID = Y.FLOW_ID
			AND Y.FLOW_DPL_CD = '01'
			AND Z.PRJ_ID = X.PRJ_ID
			AND Z.REQ_ID = X.REQ_ID
			AND Z.PRJ_ID = V.PRJ_ID
            AND Z.PROCESS_ID = V.PROCESS_ID
			AND NOT EXISTS
			(
				SELECT DP.DPL_ID
			    FROM DPL1200 DP
			    WHERE 1=1
			    AND DP.PRJ_ID = Z.PRJ_ID
			    AND DP.REQ_ID = Z.REQ_ID
			    AND DP.PROCESS_ID = Z.PROCESS_ID
			    AND DP.FLOW_ID = Y.FLOW_ID
			)
			ORDER BY TO_NUMBER(REGEXP_REPLACE(X.REQ_ORD, '[^0-9]')) DESC NULLS LAST, Z.REQ_ID, Y.REG_DTM, Z.CHG_DTM
	</select>
	
	
	<update id="dpl1100DAO.updateDpl1100Dpl" parameterClass="java.util.Map">
		<![CDATA[ 
			/* dpl1100DAO.updateDpl1100Dpl - 배포버젼 반영  */
			UPDATE REQ4100
			SET 
			
		]]>
			<isEqual property="dplId" compareValue="null">
				DPL_ID = null,  		/* 배포ID 값 null  */  
			</isEqual>
			<isNotEqual property="dplId" compareValue="null">
				DPL_ID = #dplId#,  		/* 배포ID 값 입력  */  
			</isNotEqual>
		<![CDATA[ 
				MODIFY_USR_ID = #modifyUsrId#,  		 /*최종수정자 ID*/
				MODIFY_DTM = sysdate , 		/*최종수정일시*/
				MODIFY_USR_IP = #modifyUsrIp# /*최종수정자 IP*/
				
			WHERE PRJ_ID = #selPrjId#  /* 프로젝트  ID  */ 
			AND REQ_ID = #reqId#  /* 요구사항  ID  */
		]]>
	</update>
	
	
	<insert id="dpl1100DAO.insertDpl1100logHistory" parameterClass="java.util.Map">
		
		<![CDATA[ 
			INSERT    INTO  DPL1100
				   (
				            PRJ_ID             , /* 프로젝트 ID */ 
				            DPL_ID             , /* 배포 ID */ 
				            DPL_SEQ            , /* 배포 순번 */ 
				            BLD_NUM            , /* 빌드 번호 */ 
				            REG_DTM            , /* 최초등록일시 */ 
				            REG_USR_ID         , /* 최초등록자ID */ 
				            REG_USR_IP         , /* 최초등록자IP */
				            JEN_ID             ,
				            LIC_GRP_ID 
				   )
			VALUES
				   (
			                #prjId#, 
			                #dplId#, 
			                ( SELECT 
			                       NVL( MAX(A.DPL_SEQ) , 0 ) +1 
			                  FROM 
			                        DPL1100 A 
			                  WHERE A.PRJ_ID = #prjId# 
			                    AND A.DPL_ID = #dplId# 
			                    AND A.JEN_ID = #jenId# )
			                , 
			                #bldNum#, 
			                SYSDATE, 
			                #regUsrId#, 
			                #regUsrIp#,
			                #jenId# ,
			                #licGrpId#
				   )
		]]>
	</insert>
	
	
	
	<select id="dpl1100DAO.selectDpl1100ExistBuildInfo" parameterClass="java.util.Map" resultClass="java.lang.String">
			/* dpl1100DAO.selectDpl1100ExistBuildInfo - 	배포 계획 빌드이력 조회  */
				SELECT 
				       NVL(1,0) AS USE_YN 
				  FROM 
					   DPL1100 A 
				 WHERE A.PRJ_ID = #prjId#  
				   AND A.DPL_ID = #dplId# 
				   AND A.LIC_GRP_ID = #licGrpId#
				   AND ROWNUM = 1 
	</select>
	
	<!-- 요구사항 배포 계획 목록-->
	<select id="dpl1100DAO.selectDpl1100ReqDplList" parameterClass="java.util.Map" resultClass="egovMap">
			/* dpl1100DAO.selectDpl1100ReqDplList - 	요구사항 배포 계획 목록  */
				SELECT
					A.PRJ_ID,		A.REQ_ID,		A.PROCESS_ID
					,A.FLOW_ID,		A.DPL_ID,		B.DPL_NM
					,B.DPL_VER,		B.DPL_TXT,		B.DPL_STS_CD
				FROM DPL1200 A, DPL1000 B
				WHERE 1=1
				AND A.PRJ_ID = #prjId#  
				AND A.REQ_ID = #reqId#
				AND A.PROCESS_ID = #processId#
				<isEmpty property="dshType">
					<isNotEmpty property="flowId">
						AND A.FLOW_ID = #flowId#
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty property="dplId">
					AND A.DPL_ID = #dplId#
				</isNotEmpty>
				AND A.PRJ_ID = B.PRJ_ID
				AND A.DPL_ID = B.DPL_ID 
	</select>
	
	<!-- 요구사항 배포 계획 배정-->
	<insert id="dpl1100DAO.insertDpl1200ReqDplInfo" parameterClass="java.util.Map">
		/* dpl1100DAO.insertDpl1200ReqDplInfo - 요구사항 배포 계획 배정  */
		<![CDATA[
			INSERT INTO DPL1200 A
			(
				A.PRJ_ID,				A.REQ_ID
				,A.PROCESS_ID,			A.FLOW_ID,					A.DPL_ID
				,A.REG_DTM,				A.REG_USR_ID,				A.REG_USR_IP
				,A.MODIFY_DTM,			A.MODIFY_USR_ID,			A.MODIFY_USR_IP
			)
			VALUES
			(
				#prjId#,				#reqId#
				,#processId#,			#flowId#,					#dplId#
				,SYSDATE,				#regUsrId#,					#regUsrIp#
				,SYSDATE,				#modifyUsrId#,				#modifyUsrIp#
			)		
		
		]]>
	</insert>
	
	<!-- 요구사항 배포 계획 배정 update-->
	<update id="dpl1100DAO.updateDpl1200ReqDplInfo" parameterClass="java.util.Map">
		<![CDATA[ 
			/* dpl1100DAO.updateDpl1200ReqDplInfo - 요구사항 배포 계획 배정 update  */
			UPDATE DPL1200 A
			SET 
				DPL_ID = #dplId#
				,MODIFY_USR_ID = #modifyUsrId#
				,MODIFY_DTM = sysdate
				,MODIFY_USR_IP = #modifyUsrIp#
			WHERE 1=1
			AND A.PRJ_ID = #prjId#
			AND A.REQ_ID = #reqId#
			AND A.PROCESS_ID = #processId# 
			AND A.FLOW_ID = #flowId#
			AND A.DPL_ID = #dplId#
		]]>
	</update>
	
	<!-- 요구사항 배포 계획 배정 제외 -->
	<delete id="dpl1100DAO.deleteDpl1200ReqDplInfo" parameterClass="java.util.Map">
		/* dpl1100DAO.deleteDpl1200ReqDplInfo - 요구사항 배포 계획 배정 제외  */
		<![CDATA[
			DELETE FROM DPL1200 A
			WHERE 1=1
				AND		A.PRJ_ID = #prjId#
				AND		A.REQ_ID = #reqId#
				AND		A.PROCESS_ID = #processId#
				AND		A.FLOW_ID = #flowId#
		]]>
				<isNotEmpty property="dplId">
					AND A.DPL_ID = #dplId#
				</isNotEmpty>
	</delete>
</sqlMap>
