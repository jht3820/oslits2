<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="stm300DAO">
	<typeAlias alias="egovMap" 		type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias alias="stm3000VO"	type="kr.opensoftlab.oslits.stm.stm3000.stm3000.vo.Stm3000VO"/>

	<resultMap id="resultMapSelectStm3000" class="stm3000VO">
		<result property="rn"  			      column="RN"/>
		<result property="jenId"              column="JEN_ID" /> <!-- JENKINS JOB 코드 --> 
		<result property="jenNm"              column="JEN_NM" /> <!-- JENKINS JOB 명 --> 
		<result property="jenTxt"             column="JEN_TXT" /> <!-- JENKINS JOB Comment --> 
		<result property="jenTok"             column="JEN_TOK" /> <!-- JENKINS JOB TOKEN KEY --> 
		<result property="jenUsrId"           column="JEN_USR_ID" /> <!-- JENKINS 사용자 ID --> 
		<result property="jenUsrTok"          column="JEN_USR_TOK" /> <!-- JENKINS 사용자 TOKEN KEY -->
		<result property="jenUrl"             column="JEN_URL" />   
		<result property="useCd"              column="USE_CD" /> <!-- 사용여부(코드 : CMM00001) --> 
		<result property="useNm"              column="USE_NM" /> <!-- 사용여부(코드 : CMM00001) -->
		<result property="regDtm"             column="REG_DTM" /> <!-- 최초등록 일시 --> 
		<result property="regUsrId"           column="REG_USR_ID" /> <!-- 최초등록자 ID --> 
		<result property="regUsrIp"           column="REG_USR_IP" /> <!-- 최초등록자 IP --> 
		<result property="modifyDtm"          column="MODIFY_DTM" /> <!-- 최종수정일시 --> 
		<result property="modifyUsrId"        column="MODIFY_USR_ID" /> <!-- 최종수정자 ID --> 
		<result property="modifyUsrIp"        column="MODIFY_USR_IP" /> <!-- 최종수정자 IP --> 
    </resultMap>
    
        
    
	
	<!-- sql Define  -->
	<!-- Jenkins job 목록 조회 -->
	<sql id="selectStm3000List">
		<![CDATA[
			SELECT
		            JEN_ID ,                  /* JENKINS JOB 코드 */ 
		            JEN_NM ,                  /* JENKINS JOB 명 */ 
		            REPLACE (JEN_TXT ,'<br>' , '&nbsp;&nbsp;&nbsp;&nbsp;' ) AS JEN_TXT ,                 /* JENKINS JOB Comment */ 
		            JEN_TOK ,                 /* JENKINS JOB TOKEN KEY */ 
		            JEN_USR_ID ,              /* JENKINS 사용자 ID */ 
		            JEN_USR_TOK ,             /* JENKINS 사용자 TOKEN KEY */ 
		            JEN_URL ,
		            USE_CD ,                  /* 사용여부(코드 : CMM00001) */
		            SF_ADM4100_COM_CD_INFO(#licGrpId#, 'CMM00001', USE_CD, '1') as USE_NM , 
		            REG_DTM ,                 /* 최초등록 일시 */ 
		            REG_USR_ID ,              /* 최초등록자 ID */ 
		            REG_USR_IP ,              /* 최초등록자 IP */ 
		            MODIFY_DTM ,              /* 최종수정일시 */ 
		            MODIFY_USR_ID ,           /* 최종수정자 ID */ 
		            MODIFY_USR_IP             /* 최종수정자 IP */              
				   
			FROM
		            JEN1000
			WHERE   1=1
			AND		LIC_GRP_ID = #licGrpId#
		]]>
		<isNotEmpty property="searchSelect">
			<isNotEmpty property="searchTxt">
			<isEqual property="searchSelect" compareValue="jenNm"> 
				AND		UPPER( JEN_NM ) like '%'|| UPPER( #searchTxt#  )  ||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="jenTxt"> 
				AND		UPPER( JEN_TXT )  like '%'|| UPPER( #searchTxt#  )  ||'%'
			</isEqual>
			</isNotEmpty>
		</isNotEmpty>
		
		<isNotEmpty property="searchSelect">
			<isNotEmpty property="searchCd">
			<isEqual property="searchSelect" compareValue="useCd">
				AND		USE_CD = #searchCd#
			</isEqual>
			</isNotEmpty>
		</isNotEmpty>
    </sql>
    
    <!-- Jenkins job  목록 조회 -->
    <select id="stm3000DAO.selectStm3000JobList" parameterClass="stm3000VO"  resultMap="resultMapSelectStm3000">
	    /* jen1000VO.selectJen1000JobList Jenkins job 목록을 조회한다.*/
		SELECT *
		FROM
			(
    		SELECT ROWNUM RN,
    			     A.*
    		FROM
    		(
					<include refid="selectStm3000List"/>
	    			) A
	    	)
	    	 WHERE RN BETWEEN (#firstIndex#+1) AND #lastIndex#
    </select>
    
    <!-- Jenkins 잡  목록 총건수. :페이징 처리 부분 -->
    <select id="stm3000DAO.selectStm3000JobListCnt" parameterClass="stm3000VO"  resultClass="java.lang.Integer">
	    /*jen1000VO.selectJen1000JobListCnt Jenkins 잡 목록 총건수를 조회한다.*/
	    	SELECT
					COUNT(*)
			FROM	(
						<include refid="selectStm3000List"/>
					) A
    </select>
    
	
	 
    <!--  SVN Repository 정보 조회(단건)  --> 
	<select id="stm3000DAO.selectStm3000JobInfo" parameterClass="java.util.Map"  resultClass="egovMap">
		/* stm3000DAO.selectStm3000JobInfo - Svn repository 정보를 조회한다. */
			SELECT
			            JEN_ID,              /* JENKINS JOB 코드 */ 
			            JEN_NM,              /* JENKINS JOB 명 */ 
			            JEN_TXT,             /* JENKINS JOB Comment */ 
			            JEN_TOK,             /* JENKINS JOB TOKEN KEY */ 
			            JEN_USR_ID,          /* JENKINS 사용자 ID */ 
			            JEN_USR_TOK,         /* JENKINS 사용자 TOKEN KEY */ 
			            JEN_URL,             /* JENKINS JOB URL */ 
			            USE_CD,              /* 사용여부(코드 : CMM00001) */ 
			            REG_DTM,             /* 최초등록 일시 */ 
			            REG_USR_ID,          /* 최초등록자 ID */ 
			            REG_USR_IP,          /* 최초등록자 IP */ 
			            MODIFY_DTM,          /* 최종수정일시 */ 
			            MODIFY_USR_ID,       /* 최종수정자 ID */ 
			            MODIFY_USR_IP        /* 최종수정자 IP */ 
			FROM
			            JEN1000
			WHERE 1=1
			AND JEN_ID = #jenId# 
			AND	LIC_GRP_ID = #licGrpId#
	</select>
	
	 <insert id="stm3000DAO.insertStm3000JobInfo" parameterClass="java.util.Map">
		<selectKey resultClass="java.lang.String" keyProperty="newJenId">
		<![CDATA[
			/* stm3000DAO.insertStm3000JobInfo - Jenkins Job 등록(새로운 JEN_ID 따기)*/ 
			SELECT	NVL( 
							SUBSTR(NEW_JEN_ID, 1, 11) || LPAD( (TO_NUMBER(SUBSTR(NEW_JEN_ID, 12, 5)) + 1) , 5, '0')
						,	'JEN' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '00001'
            		) AS NEW_JEN_ID 
			FROM	(
			            SELECT	MAX(JEN_ID)  AS NEW_JEN_ID
			            FROM	JEN1000 A
			            WHERE	1=1
			            AND		JEN_ID LIKE 'JEN' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '%'
					)
		]]>
		</selectKey>
		<![CDATA[ 
			/* stm3000DAO.insertStm3000JobInfo  - SVN Repository */ 
				INSERT     INTO     JEN1000
					(
					            JEN_ID              , /* JENKINS JOB 코드 */ 
					            JEN_NM              , /* JENKINS JOB 명 */ 
					            JEN_TXT             , /* JENKINS JOB Comment */ 
					            JEN_TOK             , /* JENKINS JOB TOKEN KEY */ 
					            JEN_USR_ID          , /* JENKINS 사용자 ID */ 
					            JEN_USR_TOK         , /* JENKINS 사용자 TOKEN KEY */ 
					            JEN_URL             , /* JENKINS JOB URL */ 
					            USE_CD              , /* 사용여부(코드 : CMM00001) */ 
					            REG_DTM             , /* 최초등록 일시 */ 
					            REG_USR_ID          , /* 최초등록자 ID */ 
					            REG_USR_IP          , /* 최초등록자 IP */ 
					            MODIFY_DTM          , /* 최종수정일시 */ 
					            MODIFY_USR_ID       , /* 최종수정자 ID */ 
					            MODIFY_USR_IP       , /* 최종수정자 IP */ 
					            LIC_GRP_ID          
					)
				VALUES
					(
					             #newJenId#, 
					             #jenNm#, 
					             #jenTxt#, 
					             #jenTok#, 
					             #jenUsrId#, 
					             #jenUsrTok#, 
					             #jenUrl#, 
					             #useCd#, 
					             SYSDATE , 
					             #regUsrId#, 
					             #regUsrIp#, 
					             SYSDATE , 
					             #modifyUsrId#, 
					             #modifyUsrIp#,
					             #licGrpId# 
					)
			
		]]>
	</insert>
    
	<!-- SVN Repository 정보 수정 -->
	<update id="stm3000DAO.updateStm3000JobInfo" parameterClass="java.util.Map">
		/* stm3000DAO.updateStm3000JobInfo - Jenkins Job 정보 수정 */ 
			UPDATE     JEN1000     SET 

			           JEN_ID = #jenId#              , /* JENKINS JOB 코드 */ 
			           JEN_NM = #jenNm#              , /* JENKINS JOB 명 */ 
			           JEN_TXT = #jenTxt#            , /* JENKINS JOB Comment */ 
			           JEN_TOK = #jenTok#            , /* JENKINS JOB TOKEN KEY */ 
			           JEN_USR_ID = #jenUsrId#       , /* JENKINS 사용자 ID */ 
			           JEN_USR_TOK = #jenUsrTok#     , /* JENKINS 사용자 TOKEN KEY */ 
			           JEN_URL = #jenUrl#            , /* JENKINS JOB URL */ 
			           USE_CD = #useCd#              , /* 사용여부(코드 : CMM00001) */ 
			           MODIFY_DTM = SYSDATE          , /* 최종수정일시 */ 
			           MODIFY_USR_ID = #modifyUsrId# , /* 최종수정자 ID */ 
			           MODIFY_USR_IP = #modifyUsrIp#   /* 최종수정자 IP */ 
			WHERE
					   1=1
			  AND	   JEN_ID 		= 	#jenId#                /* JENKINS JOB 코드 */ 
			  AND	   LIC_GRP_ID	=  	#licGrpId# 
	</update>
	
		<!-- Jenkins 관리 삭제 -->
	<delete id="stm3000DAO.deleteStm3000Info" parameterClass="java.util.Map">
		DELETE FROM	JEN1000 A
		WHERE	1=1
		AND   		JEN_ID = #jenId#               /* JENKINS JOB 코드 */ 
        AND 		LIC_GRP_ID = #licGrpId#
	</delete>
	
	
	<!-- Jenkins 등록 상태 확인 -->
	<select id="stm3000DAO.selectStm3000UseCountInfo" parameterClass="java.util.Map"  resultClass="java.lang.Integer">
		SELECT	COUNT(1) AS CNT
	   FROM 	JEN1100 A
       WHERE    1=1
		AND   	JEN_ID = #jenId#               /* JENKINS JOB 코드 */ 
        AND 	LIC_GRP_ID = #licGrpId#
        AND     ROWNUM = 1
	</select>
	

    
    <!-- Jenkins 유저 목록 조회  -->
    <select id="stm3000DAO.selectStm3000JenkinsUserList" parameterClass="java.util.Map"  resultClass="egovMap">
		/* stm3000DAO.selectStm3000JenkinsUserList - Jenkins 유저 목록 조회 */
		
      SELECT   	 B.JEN_USR_ID 
		      	,B.JEN_USR_TOK
		      	,B.JEN_NM
		      	,B.JEN_URL
		      	,B.JEN_ID
		      	,B.JEN_TOK 
      FROM
      			JEN1000 B ,
         		(   SELECT PRJ_ID , 
         		           JEN_ID ,
         		           LIC_GRP_ID 
         		    FROM   JEN1100 
         		    WHERE  PRJ_ID  = #prjId#  )  A
		WHERE   1=1
		AND		A.LIC_GRP_ID = #licGrpId#
		AND		A.LIC_GRP_ID = B.LIC_GRP_ID
		AND     A.JEN_ID = B.JEN_ID
		AND     B.USE_CD ='01'
		<isNotEmpty property="jobname">
		AND     B.JEN_NM = #jobname#
		</isNotEmpty>
	</select>
    
    <!-- jenkins 허용 역할 정보 저장 -->
	<insert id="stm3000DAO.insertStm3000JenAuthGrpInfo" parameterClass="java.util.Map">
		/* stm3000DAO.insertStm3000JenAuthGrpInfo - jenkins 허용 역할 정보 저장  */
		<![CDATA[
			INSERT INTO JEN1200 A
			(
				A.PRJ_ID,				A.JEN_ID,					A.AUTH_GRP_ID
				,A.REG_DTM,				A.REG_USR_ID,				A.REG_USR_IP
				,A.MODIFY_DTM,			A.MODIFY_USR_ID,			A.MODIFY_USR_IP
			)
			VALUES
			(
				#prjId#,				#jenId#,					#authGrpId#
				,SYSDATE,				#regUsrId#,					#regUsrIp#
				,SYSDATE,				#modifyUsrId#,				#modifyUsrIp#
			)		
		
		]]>
	</insert>
	
	<!-- jenkins 허용 역할 정보 제거 -->
	<delete id="stm3000DAO.deleteStm3000JenAuthGrpInfo" parameterClass="java.util.Map">
		/* stm3000DAO.deleteStm3000JenAuthGrpInfo - jenkins 허용 역할 정보 제거  */
		<![CDATA[
			DELETE FROM JEN1200 A
			WHERE 1=1
				AND		A.PRJ_ID = #prjId#
				AND		A.JEN_ID = #jenId#
				AND		A.AUTH_GRP_ID = #authGrpId#
		]]>
	</delete>
	
	<!-- jenkins 허용 역할 정보 목록 가져오기 -->
	<select id="stm3000DAO.selectStm3000JenAuthGrpList"  parameterClass="java.util.Map" resultClass="egovMap">
		/* stm3000DAO.selectStm3000JenAuthGrpList - jenkins 허용 역할 정보 목록 가져오기  */
		<![CDATA[
			SELECT 
				A.PRJ_ID
				,A.JEN_ID
				,A.AUTH_GRP_ID
			    ,B.AUTH_GRP_NM
			    ,B.AUTH_GRP_DESC
			    ,B.CREATE_DT
			    ,B.USE_CD
			    ,B.USR_TYP
			    ,SF_ADM4100_COM_CD_INFO(#licGrpId#, 'ADM00004', B.USR_TYP, '1') AS USR_TYP_NM
			FROM JEN1200 A, ADM1100 B
			WHERE 1=1
			AND B.LIC_GRP_ID = #licGrpId#
			AND	A.PRJ_ID = #prjId#
			AND A.JEN_ID = #jenId#
			AND A.PRJ_ID = B.PRJ_ID
			AND A.AUTH_GRP_ID = B.AUTH_GRP_ID
			AND B.USE_CD = '01'
			ORDER BY B.ORD
		]]>
	</select>
	
	<!--jenkins 허용 역할 정보 단건 갯수 가져오기 -->
	<select id="stm3000DAO.selectStm3000JenAuthGrpCnt"  parameterClass="java.util.Map" resultClass="java.lang.Integer">
		/* stm3000DAO.selectStm3000JenAuthGrpCnt -  jenkins 허용 역할 정보 단건 갯수 가져오기 */
		<![CDATA[
			SELECT COUNT(*) AS AUTH_GRP_CNT
			FROM JEN1200 A
			WHERE 1=1
			AND	A.PRJ_ID = #prjId#
			AND A.JEN_ID = #jenId#
			AND A.AUTH_GRP_ID = #authGrpId#
		]]>
	</select>
</sqlMap>
