<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="stm2200DAO">
	<typeAlias alias="egovMap" 		type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias alias="stm2200VO"	type="kr.opensoftlab.oslits.stm.stm2000.stm2200.vo.Stm2200VO"/>


  
    
   	<resultMap id="resultMapSelectStm2200Project" class="stm2200VO">
		<result property="rn"  			column="RN"/>
		<result property="svnRepId"     column="SVN_REP_ID" /> <!-- SVN Repository 코드 --> 
		<result property="svnRepNm"     column="SVN_REP_NM" /> <!-- SVN Repository 명 --> 
		<result property="svnRepUrl"    column="SVN_REP_URL" /> <!-- SVN Repository URL --> 
		<result property="svnTxt"       column="SVN_TXT" /> <!-- SVN RepositoryI Comment --> 
		<result property="useCd"        column="USE_CD" /> <!-- 사용여부(코드 : CMM00001) --> 
		<result property="useCd"  		column="USE_CD"/>
		<result property="regDtm"  		column="REG_DTM"/>
		<result property="useNm"  		column="USE_NM"/>
		<result property="regUsrId"  	column="REG_USR_ID"/>
		<result property="prjNm"  	    column="PRJ_NM"/>

    </resultMap>
	
	
		
	<sql id="selectStm2200ProjectList">
	
			SELECT
		            A.SVN_REP_ID ,               /* SVN Repository 코드 */ 
		            A.SVN_REP_NM ,               /* SVN Repository 명 */ 
		            A.SVN_REP_URL ,              /* SVN Repository URL */ 
		            A.SVN_TXT ,                  /* SVN RepositoryI Comment */ 
		            A.USE_CD ,                   /* 사용여부(코드 : CMM00001) */
		            SF_ADM4100_COM_CD_INFO(#licGrpId#, 'CMM00001', A.USE_CD, '1') as USE_NM , 
				    TO_CHAR(A.REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM ,       /* 최초등록 일시 */ 
		            A.REG_USR_ID ,               /* 최초등록자 ID */ 
		            A.REG_USR_IP ,               /* 최초등록자 IP */ 
		            A.MODIFY_DTM ,               /* 최종수정일시 */ 
		            A.MODIFY_USR_ID ,            /* 최종수정자 ID */ 
		            A.MODIFY_USR_IP ,            /* 최종수정자 IP */
		            C.PRJ_NM 
			FROM
		            SVN1000 A ,
		            SVN1100 B ,
		            PRJ1000 C
			WHERE   1=1
			AND		A.LIC_GRP_ID = #licGrpId#
			AND 	A.SVN_REP_ID = B.SVN_REP_ID
			AND		A.LIC_GRP_ID = B.LIC_GRP_ID
			AND		B.LIC_GRP_ID = C.LIC_GRP_ID
      		AND 	B.PRJ_ID = C.PRJ_ID
		<isNotEmpty property="searchSelect">
			<isNotEmpty property="searchTxt">
			<isEqual property="searchSelect" compareValue="svnRepNm"> 
				AND		UPPER( A.SVN_REP_NM) like '%'|| UPPER( #searchTxt# ) ||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="svnTxt"> 
				AND		UPPER( A.SVN_TXT ) like '%'|| UPPER( #searchTxt# ) ||'%'
			</isEqual>
			</isNotEmpty>
		</isNotEmpty>
		
		<isNotEmpty property="searchSelect">
			<isNotEmpty property="searchCd">
			<isEqual property="searchSelect" compareValue="useCd">
				AND		A.USE_CD = #searchCd#
			</isEqual>
			</isNotEmpty>
		</isNotEmpty>
    </sql>
    
        <!-- SVN Repository 목록 조회 -->
    <select id="stm2200DAO.selectStm2200RepProjectList" parameterClass="stm2200VO"  resultMap="resultMapSelectStm2200Project">
	    /*svn1000DAO.selectSvn1000RepProjectList repository 목록을 조회한다.*/
		SELECT *
		FROM
			(
    		SELECT ROWNUM RN,
    			     A.*
    		FROM
    		(
					<include refid="selectStm2200ProjectList"/>
	    			) A
	    	)
	    	 WHERE RN BETWEEN (#firstIndex#+1) AND #lastIndex#
    </select>
    
    <!-- repository 목록 총건수. :페이징 처리 부분 -->
    <select id="stm2200DAO.selectStm2200RepProjectListCnt" parameterClass="stm2200VO"  resultClass="java.lang.Integer">
	    /*svn1000DAO.selectSvn1000RepProjectListCnt repository 목록 총건수를 조회한다.*/
	    	SELECT
					COUNT(*)
			FROM	(
						<include refid="selectStm2200ProjectList"/>
					) A
    </select>
    	
</sqlMap>
