<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="adm2000DAO">
	<typeAlias alias="adm2000VO"	type="kr.opensoftlab.oslits.adm.adm2000.adm2000.vo.Adm2000VO"/>
	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<!-- Map Define -->
   	<resultMap id="rMapSelectAdm2000" class="adm2000VO">
   		<result property="rn" column="RN"/>
		<result property="usrId" column="USR_ID" />
		<result property="usrNm" column="USR_NM" />
		<result property="email" column="EMAIL" />
		<result property="telno" column="TELNO" />
		<result property="deptId" column="DEPT_ID" />
		<result property="etc" column="ETC" />
		<result property="useCd" column="USE_CD" />
		<result property="useCdNm" column="USE_CD_NM" />
		<result property="reqMainColor" column="REQ_MAIN_COLOR" />
		<result property="reqFontColor" column="REQ_FONT_COLOR" />
		<result property="wkStTm" column="WK_ST_TM"/>
		<result property="wkEdTm" column="WK_ED_TM"/>
		<result property="bkStTm" column="BK_ST_TM"/>
		<result property="bkEdTm" column="BK_ED_TM"/>
		<result property="pwFailCnt" column="PW_FAIL_CNT"/>
		<result property="block" column="BLOCK"/>
		<result property="blockNm" column="BLOCK_NM"/>
		<result property="recLoginDtm" column="REC_LOGIN_DTM"/>
		<result property="loginExprYn" column="LOGIN_EXPR_YN"/>
		<result property="deptName" column="DEPT_NAME"/>
		<result property="beforeBlock" column="BLOCK"/>
    </resultMap>
    
    <resultMap id="rMapSelectAdm2000CommonUser" class="adm2000VO">
   		<result property="rn" column="RN"/>
		<result property="usrId" column="USR_ID" />
		<result property="usrNm" column="USR_NM" />
		
    </resultMap>
    
	<sql id = "selectAdm2000UsrList">
		<![CDATA[
		   SELECT  
				 A.USR_ID
				,A.USR_NM
				,A.EMAIL
				,A.TELNO
				,A.DEPT_ID
				/*,A.ETC */
		]]>		
				<![CDATA[ 
	    				, REGEXP_REPLACE (A.ETC ,'</br>|<br>|<br/>' , ' ' ) AS ETC    
	    		]]>
	    <![CDATA[ 				
				,A.USE_CD
				,DECODE(A.USE_CD, '01', '사용', '02', '미사용' ) AS USE_CD_NM
				,A.WK_ST_TM
				,A.WK_ED_TM
				,A.BK_ST_TM
				,A.BK_ED_TM
				,A.PW_FAIL_CNT
				,A.BLOCK
				,SF_ADM4100_COM_CD_INFO(#licGrpId#, 'ADM00005', A.BLOCK, '1') AS BLOCK_NM
				,NVL(A.REQ_MAIN_COLOR,'##FFFFFF') AS REQ_MAIN_COLOR
				,NVL(A.REQ_FONT_COLOR,'##000000') AS REQ_FONT_COLOR
				,A.REG_DTM
				,A.REC_LOGIN_DTM
				,CASE WHEN MONTHS_BETWEEN( SYSDATE, NVL(A.REC_LOGIN_DTM, SYSDATE) ) >= 3 THEN 'Y' ELSE 'N' END AS LOGIN_EXPR_YN
				,SF_ADM7000_DEPT_NM(#licGrpId#, A.DEPT_ID, '2') AS DEPT_NAME      
		   FROM  ADM2000 A
		   WHERE  1=1 
		   AND	A.LIC_GRP_ID = #licGrpId#
		   ]]>
	   	<isNotEmpty property="searchSelect">
			<isNotEmpty property="searchTxt">
			<isEqual property="searchSelect" compareValue="usrNm" prepend="AND">
				A.USR_NM LIKE '%'||#searchTxt#||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="usrId" prepend="AND">
				A.USR_ID LIKE '%'||#searchTxt#||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="email" prepend="AND">
				A.EMAIL LIKE '%'||#searchTxt#||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="telno" prepend="AND">
				A.TELNO LIKE '%'||#searchTxt#||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="etc" prepend="AND">
				A.ETC LIKE '%'||#searchTxt#||'%'
			</isEqual>
			</isNotEmpty>
		</isNotEmpty>
	  	<isNotEmpty property="searchSelect">
			<isNotEmpty property="searchCd">
			<isEqual property="searchSelect" compareValue="useCd" prepend="AND">
				A.USE_CD LIKE '%'||#searchCd#||'%'
			</isEqual>
			</isNotEmpty>
		</isNotEmpty>
		
	</sql>

	
    <select id="adm2000DAO.selectAdm2000UsrListCnt" resultClass="java.lang.Integer">
		/* adm2000DAO.selectAdm2000UsrListCnt 사용자 목록 총 건수 조회 */
		<![CDATA[
	    SELECT	COUNT(*)
		  FROM	(
		]]>
		  			<include refid="selectAdm2000UsrList" />
		<![CDATA[
		  			) A
		 ]]>
    </select>
    
    <select id="adm2000DAO.selectAdm2000UsrList" parameterClass="adm2000VO"  resultMap="rMapSelectAdm2000">
    	/* adm2000DAO.selectAdm2000UsrList 사용자 목록 조회 */
    	<![CDATA[
		SELECT	*
		   FROM (
    					SELECT ROWNUM RN,
    			     				A.*
    					  FROM 
    								(
    	]]>
    								<include refid="selectAdm2000UsrList" />
    	<![CDATA[
    								) A
    				 )
		WHERE  RN BETWEEN (#firstIndex#+1) AND #lastIndex#
		ORDER BY REG_DTM DESC
		]]>
    </select>
    
	<select id="adm2000DAO.selectAdm2000UsrInfo" parameterClass="java.util.Map" resultClass="egovMap">
		/* adm2000DAO.selectAdm2000UsrInfo 사용자 단건 조회 */
		<![CDATA[ 
			SELECT		A.USR_ID
						,A.USR_NM
						,A.EMAIL
						,A.TELNO
						,A.DEPT_ID
						,A.ETC					 
						,A.USE_CD
						,DECODE(A.USE_CD, '01', '사용', '02', '미사용' ) AS USE_CD_NM
						,A.USR_PW
						,A.WK_ST_TM
						,A.WK_ED_TM
						,A.BK_ST_TM
						,A.BK_ED_TM
						,A.PW_FAIL_CNT
						,A.BLOCK
						,SF_ADM4100_COM_CD_INFO(#licGrpId#, 'ADM00005', A.BLOCK, '1') AS BLOCK_NM
						,A.USR_POSITION_CD
						,SF_ADM4100_COM_CD_INFO(#licGrpId#, 'ADM00007', A.USR_POSITION_CD, '1') AS USR_POSITION_CD_NM
						,A.USR_DUTY_CD
						,SF_ADM4100_COM_CD_INFO(#licGrpId#, 'ADM00008', A.USR_DUTY_CD, '1') AS USR_DUTY_CD_NM
						,NVL(A.REQ_MAIN_COLOR,'##FFFFFF') AS REQ_MAIN_COLOR
						,NVL(A.REQ_FONT_COLOR,'##000000') AS REQ_FONT_COLOR
						,A.REC_LOGIN_DTM
						,SF_ADM7000_DEPT_NM(#licGrpId#, A.DEPT_ID, '2') AS DEPT_NAME
						, ( SELECT 
							       	/*+ INDEX_DESC (C PK_ADM2100 ) */  BLK_LOG 
							  FROM 
							        ADM2100 C 
							  WHERE C.LIC_GRP_ID = A.LIC_GRP_ID 
								AND C.USR_ID = #usrId#
								AND ROWNUM = 1
							)   AS BLK_LOG 
			FROM	ADM2000 A
			WHERE	1=1
			AND		LIC_GRP_ID = #licGrpId#
			AND		USR_ID = #usrId#
 		]]> 
	</select>
	
    
    <insert id="adm2000DAO.insertAdm2000UsrInfo" parameterClass="java.util.Map" >
    	/* adm2000DAO.insertAdm2000UsrInfo 사용자 등록 */
		<![CDATA[ 
		INSERT INTO ADM2000(
			USR_ID,
		  	LIC_GRP_ID,
		  	USR_PW,
		  	USR_NM,
		  	EMAIL,
		  	TELNO,
		  	DEPT_ID,
		  	ETC,
		  	WK_ST_TM,
			WK_ED_TM,
			BK_ST_TM,
			BK_ED_TM,
			PW_FAIL_CNT,
			BLOCK,
		  	USE_CD,
		  	USR_POSITION_CD,
		  	USR_DUTY_CD,
		  	REQ_MAIN_COLOR,
			REQ_FONT_COLOR,
		  	REG_DTM,
		  	REG_USR_ID,
		  	REG_USR_IP,
		  	MODIFY_DTM,
		  	MODIFY_USR_ID,
		  	MODIFY_USR_IP
		)VALUES(
			#usrId#,
		  	#licGrpId#,
			#enUsrPw#,
		  	#usrNm#,
		  	#usrEmail#,
		  	#usrTelNo#,
		  	#deptId#,
		  	#usrEtc#,
			NVL(#wkStTm#,'0900'),
			NVL(#wkEdTm#,'1800'),
			NVL(#bkStTm#,'1200'),
			NVL(#bkEdTm#,'1300'),
			'0',
			'01',
		  	#useCd#,
		  	#usrPositionCd#,
		  	#usrDutyCd#,
		  	#reqMainColor#,
		  	#reqFontColor#,
		  	SYSDATE,
		  	#regUsrId#,
		  	#regUsrIp#,
		  	SYSDATE,
			#regUsrId#,
			#regUsrIp#
		)
		]]>
		
		<selectKey resultClass="java.lang.String" keyProperty="newUsrId">
		<![CDATA[
			SELECT	USR_ID
			   FROM	ADM2000
			WHERE	USR_ID = #usrId#
		]]>
		</selectKey>
		
    </insert>
    
	<update id="adm2000DAO.updateAdm2000UsrInfo" parameterClass="java.util.Map">
		/* adm2000DAO.updateAdm2000UsrInfo 사용자 수정*/
		<![CDATA[
		UPDATE ADM2000 A SET
			USR_NM				= #usrNm#,
			USR_PW				= #enUsrPw#,
			EMAIL				= #usrEmail#,
		  	TELNO				= #usrTelNo#,
		  	DEPT_ID				= #deptId#,
		  	ETC					= #usrEtc#,
		  	WK_ST_TM			= #wkStTm#,
			WK_ED_TM			= #wkEdTm#,
			BK_ST_TM			= #bkStTm#,
			BK_ED_TM			= #bkEdTm#,
			PW_FAIL_CNT			= #pwFailCnt#,	
			BLOCK				= #block#,
		  	USE_CD				= #useCd#,
		  	USR_POSITION_CD		= #usrPositionCd#,
		  	USR_DUTY_CD			= #usrDutyCd#,
		  	REQ_MAIN_COLOR		= #reqMainColor#,
			REQ_FONT_COLOR		= #reqFontColor#,
		  	MODIFY_DTM			= sysdate,
      		MODIFY_USR_ID		= #regUsrId#,
      		MODIFY_USR_IP		= #regUsrIp#
		WHERE	1=1
			AND	LIC_GRP_ID 	= #licGrpId#
			AND	USR_ID 		= #usrId#
			]]>
	</update>
	
	
    <select id="adm2000DAO.selectCmm2000IdCheck" parameterClass="java.util.Map" resultClass="int">
    	/* adm2000DAO.selectCmm2000IdCheck 아이디 중복 체크*/
		<![CDATA[
		SELECT	COUNT(A.USR_ID) uCnt
		  FROM	ADM2000 A
	    WHERE 1=1
	    AND A.USR_ID = #usrId#
        ]]> 
    </select>
    
    
    <select id="adm2000DAO.selectCmm2000EmailCheck" parameterClass="java.util.Map" resultClass="int">
    	/* adm2000DAO.selectCmm2000EmailCheck 이메일 중복 체크*/
		<![CDATA[
		SELECT	COUNT(A.USR_ID) uCnt
		  FROM	ADM2000 A
	    WHERE EMAIL = #usrEmail#
        ]]> 
    </select>
    
	<update id="adm2000DAO.updateAdm2000UseCd" parameterClass="java.util.Map">
		/* adm2000DAO.updateAdm2000UseCd 사용 유무 수정 */
		<![CDATA[
		UPDATE ADM2000 A SET
		  	USE_CD					= #useCd#,
		  	MODIFY_DTM			= sysdate,
      		MODIFY_USR_ID	= #regUsrId#,
      		MODIFY_USR_IP	= #regUsrIp#
		WHERE	1=1
			AND	LIC_GRP_ID 	= #licGrpId#
			AND	USR_ID 		= #usrId#
			]]>
	</update>
	
	<!-- 사용자 차단 유무 수정 -->
	<update id="adm2000DAO.updateAdm2000Block" parameterClass="java.util.Map">
		/* adm2000DAO.updateAdm2000Block 차단유무 수정 */
		<![CDATA[
		UPDATE ADM2000 A SET
			PW_FAIL_CNT		= #pwFailCnt#,	
		  	BLOCK			= #block#,
		]]>  	
		<isNotEmpty property="loginExprChange">
			<isEqual property="loginExprChange" compareValue="Y">
				REC_LOGIN_DTM = sysdate,
			</isEqual>
		</isNotEmpty>
		<![CDATA[
		  	MODIFY_DTM		= sysdate,
      		MODIFY_USR_ID	= #regUsrId#,
      		MODIFY_USR_IP	= #regUsrIp#
		WHERE	1=1
			AND	LIC_GRP_ID 	= #licGrpId#
			AND	USR_ID 		= #usrId#
		]]>
	</update>
	
	<!-- 사용자 삭제를 row 삭제 대신 사용여부 미사용으로 변경 -->
	<!-- 
	<delete id="adm2000DAO.deleteAdm2000UsrInfo" parameterClass="java.util.Map">
		/* adm2000DAO.deleteAdm2000UsrInfo 사용자 삭제 처리 */
		<![CDATA[
		DELETE FROM ADM2000
		WHERE	1=1
			AND	LIC_GRP_ID 	= #licGrpId#
			AND	USR_ID IN ($usrId$)
		]]>
	</delete>
	 -->
	
	<!-- 사용자 삭제 -->
	<update id="adm2000DAO.deleteAdm2000UsrInfo" parameterClass="java.util.Map">
		/* adm2000DAO.deleteAdm2000UsrInfo 사용자 삭제 - 삭제시 사용여부를 미사용으로 변경 */
		<![CDATA[
		UPDATE ADM2000 A SET
				USE_CD				= '02'
			  	,MODIFY_DTM			= sysdate
	      		,MODIFY_USR_ID		= #regUsrId#
	      		,MODIFY_USR_IP		= #regUsrIp#
		WHERE	1=1
			AND	LIC_GRP_ID 	= #licGrpId#
			AND	USR_ID IN ($usrId$)
			]]>
			
			<!-- iterate가 안먹어서 임시로 $ $표시 로 삭제함 -->
			<!-- 
			<iterate property="usrIdList" open="(" close=")" conjunction=",">	
				#usrIdList[]# 
				</iterate>  
			-->		
	</update>
	
	<select id="adm2000DAO.selectAdm2000ExcelList" parameterClass="adm2000VO" resultClass="egovMap">
		/*selectAdm2000UsrList 사용자 엑셀목록을 조회한다.*/
		
		<include refid="selectAdm2000UsrList"/>		
	</select>
	    
    
	<select id="adm2000DAO.selectAdm1300ExistUsrInProject" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		/*selectAdm1300ExistUsrInProject 프로젝트내에 사용자가 존재(소속)하는지 조회한다. .*/
		<![CDATA[
		SELECT COUNT(0)
		FROM ADM1300
		WHERE	1=1
			AND	USR_ID IN ($usrId$)
		]]>
	</select>
	    

	<select id="adm2000DAO.selectAdm2000PwCheck" parameterClass="java.util.Map" resultClass="java.lang.String">
		/* adm2000DAO.selectAdm2000PwCheck 이전 pw 조회 */
		<![CDATA[ 
			SELECT	A.USR_PW
			FROM	ADM2000 A
			WHERE	1=1
			AND		LIC_GRP_ID 	= #licGrpId#
			AND		USR_ID = #usrId#
 		]]> 
	</select>
	
	
	<sql id = "selectAdm2000CommonUserList">
		/* adm2000DAO.selectAdm2000UserList - 	사용자 목록 가져오기   */
				SELECT
					b.USR_ID
				  , b.USR_NM
		
				FROM ADM1300 a
	 			   , ADM2000 b
				WHERE 1=1
				AND a.USR_ID = b.USR_ID
				AND a.PRJ_ID = #prjId#
				AND b.LIC_GRP_ID = #licGrpId#
				AND b.USE_CD  = '01'
				<isNotEmpty property="searchPopTxt">
				AND b.USR_NM LIKE '%'||#searchPopTxt#||'%'
				</isNotEmpty>
				
	</sql>
	
	
	 <select id="adm2000DAO.selectAdm2000CommonUserListCnt" resultClass="java.lang.Integer">
		/* adm2000DAO.selectAdmCommon2000UserListCnt 사용자 목록 총 건수 조회 */
		<![CDATA[
	    SELECT	COUNT(*)
		  FROM	(
		]]>
		  			<include refid="selectAdm2000CommonUserList" />
		<![CDATA[
		  			) A
		 ]]>
    </select>
    <!-- 사용자 목록 가져오기 -->
    <select id="adm2000DAO.selectAdm2000CommonUserList" parameterClass="adm2000VO"  resultMap="rMapSelectAdm2000CommonUser">
    	/* adm2000DAO.selectAdmCommon2000UserList 사용자 목록 조회 */
    	<![CDATA[
		SELECT	*
		   FROM (
    					SELECT ROWNUM RN,
    			     				A.*
    					  FROM 
    								(
    	]]>
    								<include refid="selectAdm2000CommonUserList" />
    	<![CDATA[
    								) A
    				 )
		WHERE  RN BETWEEN (#firstIndex#+1) AND #lastIndex#
		ORDER BY USR_NM asc
		]]>
    </select>
	
	<!-- 사용자가 속해있는 조직목록 조회 -->
	<select id="adm2000DAO.selectAdm2000ExistUsrInDept" parameterClass="java.util.Map" resultClass="egovMap">
		/* adm2000DAO.selectAdm2000ExistUsrInDept 사용자가 속해있는 조직목록 조회  */
		<![CDATA[
			 SELECT 
	            	DISTINCT (
						SELECT	DEPT_NAME
						FROM	ADM7000 B
						WHERE	1=1
						AND	B.LIC_GRP_ID = #licGrpId#
						AND B.DEPT_ID = A.DEPT_ID           
					) DEPT_NAME
            FROM ADM2000 A
            WHERE 1=1
			AND A.LIC_GRP_ID = #licGrpId#
            AND A.DEPT_ID IN ($deptId$)
		]]>
	</select>	
	
	
	<!-- 사용자의 최근 로그인 일시 조회 -->
	
	<!-- 사용자 비밀번호 초기화 -->
	<update id="adm2000DAO.updateAdm2000AccountInit" parameterClass="java.util.Map">
		/* adm2000DAO.updateAdm2000AccountInit 사용자 비밀번호 초기화*/
		<![CDATA[
		UPDATE ADM2000 A SET
			
			USR_PW				= #enUsrPw#,
			INI_YN				= #iniYn#,
			INI_DTM				= sysdate,
		  	MODIFY_DTM			= sysdate,
      		MODIFY_USR_ID		= #regUsrId#,
      		MODIFY_USR_IP		= #regUsrIp#
		WHERE	1=1
			AND	LIC_GRP_ID 	= #licGrpId#
			AND	USR_ID 		= #usrId#
			]]>
	</update>
	
	<insert id="adm2000DAO.insertAdm2100BlockLog" parameterClass="java.util.Map">
		/* adm2000DAO.insertAdm2100BlockLog 차단로그 입력 */
		<![CDATA[
			INSERT	     INTO     ADM2100
			(
			        	 LIC_GRP_ID     	    , /* 라이선스 그룹 ID */ 
			             USR_ID     	        , /* 사용자 ID */ 
			             SEQ             		, /* 순번 */ 
			             BLK_LOG             	, /* 차단이력 */ 
			             REG_DTM             	, /* 최초등록 일시 */ 
			             REG_USR_ID             , /* 최초등록자 ID */ 
			             REG_USR_IP             , /* 최초등록자 IP */ 
			             MODIFY_DTM             , /* 최종수정일시 */ 
			             MODIFY_USR_ID          , /* 최종수정자 ID */ 
			             MODIFY_USR_IP            /* 최종수정자 IP */ 
			)
			VALUES
			(
			             #licGrpId#, 
			             #usrId#, 
			             ( SELECT NVL(MAX(SEQ),0) +1  FROM ADM2100 WHERE USR_ID = #usrId# AND LIC_GRP_ID = #licGrpId#  ) , 
			             #blkLog#, 
			             SYSDATE, 
			             #regUsrId#, 
			             #regUsrIp#, 
			             SYSDATE, 
			             #regUsrId#, 
			             #regUsrIp# 
			)
			]]>
	</insert>
	
</sqlMap>            