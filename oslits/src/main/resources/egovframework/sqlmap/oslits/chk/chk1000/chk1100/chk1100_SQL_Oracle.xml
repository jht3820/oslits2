<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="chk1100DAO">

	<!--  in / out class define  -->
	<typeAlias 	alias="chk1100VO"	type="kr.opensoftlab.oslits.chk.chk1000.chk1100.vo.Chk1100VO"/>
	<typeAlias  alias="egovMap" 	type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

	<!-- Map Define -->
	<!-- 요구사항 검수승인 정보 -->
   	<resultMap id="resultMapSelectChk1100" class="chk1100VO">
		<result property="rn"              column="RN" /> 
		<result property="type"              column="TYPE" /> 
		<result property="prjId"              column="PRJ_ID" /> 
		<result property="reqId"              column="REQ_ID" /> 
		<result property="reqNm"              column="REQ_NM" /> 
		<result property="signId"              column="SIGN_ID" />
		<result property="flowId"              column="FLOW_ID" />
		<result property="processId"              column="PROCESS_ID" /> 
		<result property="signFlowId"              column="SIGN_FLOW_ID" /> 
		<result property="signFlowNm"              column="SIGN_FLOW_NM" /> 
		<result property="signFlowTitleBgColor"              column="SIGN_FLOW_TITLE_BG_COLOR" /> 
		<result property="signFlowTitleColor"              column="SIGN_FLOW_TITLE_COLOR" /> 
		<result property="signUsrId"              column="SIGN_USR_ID" /> 
		<result property="signUsrNm"              column="SIGN_USR_NM" /> 
		<result property="signUsrImg"              column="SIGN_USR_IMG" /> 
		<result property="signCd"              column="SIGN_CD" /> 
		<result property="signCdNm"              column="SIGN_CD_NM" /> 
		<result property="signRejectCmnt"              column="SIGN_REJECT_CMNT" /> 
		<result property="signDtm"              column="SIGN_DTM" /> 
		<result property="regDtm"              column="REG_DTM" /> 
		<result property="regUsrId"              column="REG_USR_ID" /> 
		<result property="regUsrNm"              column="REG_USR_NM" /> 
		<result property="regUsrImg"              column="REG_USR_IMG" /> 
		<result property="regUsrIp"              column="REG_USR_IP" />
		<result property="flowNextId"              column="FLOW_NEXT_ID" />
		
		
		
    </resultMap>

    
    <!-- sql Define  -->
    <!-- 요구사항 결재목록 조회-->
    <sql id="selectChk1100List">
    	<![CDATA[
    	/*selectChk1100List 요구사항 결재 목록을 조회한다. */
    	  SELECT	* 	 
    	   FROM
    	 (
    	 SELECT 'CHK' TYPE  
				,A.PRJ_ID
				,A.REQ_ID
				,C.REQ_NM
				,A.SIGN_ID
				,A.PROCESS_ID
				,A.SIGN_FLOW_ID
				,B.FLOW_ID
				,B.FLOW_NM AS SIGN_FLOW_NM
				,B.FLOW_TITLE_BG_COLOR AS SIGN_FLOW_TITLE_BG_COLOR
				,B.FLOW_TITLE_COLOR AS SIGN_FLOW_TITLE_COLOR
				,A.SIGN_USR_ID
				,SF_ADM2000_USR_INFO(A.SIGN_USR_ID,'1') AS SIGN_USR_NM
				,SF_ADM2000_USR_INFO(A.SIGN_USR_ID,'6') AS SIGN_USR_IMG
				,A.SIGN_CD
				,SF_ADM4100_COM_CD_INFO(#licGrpId#,'REQ00004',A.SIGN_CD,'1') AS SIGN_CD_NM
				,REPLACE (A.SIGN_REJECT_CMNT ,'<br>' , '&nbsp;&nbsp;&nbsp;&nbsp;' ) AS SIGN_REJECT_CMNT
				,A.SIGN_DTM
				,A.REG_DTM
				,A.REG_USR_ID
				,SF_ADM2000_USR_INFO(A.REG_USR_ID,'1') AS REG_USR_NM
				,SF_ADM2000_USR_INFO(A.REG_USR_ID,'6') AS REG_USR_IMG
				,A.REG_USR_IP
				,B.FLOW_NEXT_ID
			FROM REQ4900 A, FLW1100 B, REQ4100 C
			
			WHERE 1=1
				AND A.PRJ_ID = B.PRJ_ID
				AND A.PROCESS_ID = B.PROCESS_ID
				/* AND A.SIGN_FLOW_ID = B.FLOW_ID(+)*/
				AND A.SIGN_FLOW_ID = B.FLOW_NEXT_ID(+)
				AND A.PRJ_ID = C.PRJ_ID
				AND A.REQ_ID = C.REQ_ID(+)
			]]>	
			<isNotEmpty property="prjId">
				AND		A.PRJ_ID = #prjId#
			</isNotEmpty>
			<isNotEmpty property="reqId">
				AND A.REQ_ID = #reqId#
			</isNotEmpty>
						
            AND A.REG_DTM = (
                			SELECT 
						            	/*+ INDEX_DESC (Z IDX_PRJ_REQ_DTM ) */  REG_DTM 
						      FROM 
						      			REQ4900 Z 
							   WHERE 	1=1
								AND 	Z.PRJ_ID 	= A.PRJ_ID
								AND 	Z.REQ_ID 	= A.REQ_ID	                         
								AND 	ROWNUM 		= 1    
        					) 
            
            
			ORDER BY DECODE(A.SIGN_CD,'01',1,'03',2,'02',3),A.REG_DTM DESC
			) T1 
			WHERE 1 = 1
			AND T1.PRJ_ID = #prjId#
			<isNotEmpty property="searchSelect">
				<isNotEmpty property="searchTxt">
				<isEqual property="searchSelect" compareValue="reqNm">
					AND		T1.REQ_NM LIKE '%' || #searchTxt# || '%'
				</isEqual>
				<isEqual property="searchSelect" compareValue="reqNo">
					AND		T1.REQ_NO LIKE '%' || #searchTxt# || '%'
				</isEqual>
				<isEqual property="searchSelect" compareValue="regUsrNm">
					AND		T1.REG_USR_NM LIKE '%' || #searchTxt# || '%'
				</isEqual>
			
				</isNotEmpty>
			</isNotEmpty>
			
			<isNotEmpty property="searchSelect">
				<isNotEmpty property="searchCd">
				
				<isEqual property="searchSelect" compareValue="signCd">
					AND		T1.SIGN_CD = #searchCd#
				</isEqual>
				</isNotEmpty>
			</isNotEmpty>
    </sql>

    
    
   	 <!-- 요구사항 결재목록 조회 -->
    <select id="chk1100DAO.selectChk1100List" parameterClass="chk1100VO"  resultClass="egovMap">
	    /*chk1100DAO.selectChk1100List 요구사항 결재목록을 조회한다.*/
		SELECT *
		FROM
			(
    		SELECT ROWNUM RN,
    			     A.*
    		FROM
    		(
					<include refid="selectChk1100List"/>
	    			) A
	    	)
	    	WHERE RN BETWEEN (#firstIndex#+1) AND #lastIndex#
    </select>
    
    <!--  요구사항 결재 목록 총건수. :페이징 처리 부분 -->
    <select id="chk1100DAO.selectChk1100ListCnt" parameterClass="chk1100VO"  resultClass="java.lang.Integer">
	    /*chk1100DAO.selectChk1100ListCnt 요구사항 중 개발완료 목록 총건수를 조회한다.*/
	    SELECT
			COUNT(*)
		FROM	(
			<include refid="selectChk1100List"/>
				) A
    </select>
    
    
    <!-- 요구사항 승인/반려시 사용될 작업흐름 조회 -->
	<select id="chk1100DAO.selectFlw1100FlowList" parameterClass="java.util.Map" resultClass="egovMap">
		/* chk1100DAO.selectFlw1100FlowList - 요구사항 승인/반려시 사용될 작업흐름 조회 */
		<![CDATA[
			SELECT 
				A.PRJ_ID,					A.PROCESS_ID,			A.FLOW_ID,					A.FLOW_NEXT_ID
			    ,A.FLOW_NM,					A.FLOW_ESSENTIAL_CD,	A.FLOW_SIGN_CD,				A.FLOW_END_CD
			    ,A.FLOW_WORK_CD,			A.FLOW_FILE_CD,			A.FLOW_REVISION_CD
			    ,A.FLOW_TITLE_BG_COLOR,		A.FLOW_TITLE_COLOR,		A.FLOW_CONTENT_BG_COLOR,	A.FLOW_CONTENT_COLOR
			    ,A.OPT_CNT,					A.REQ_TOTAL_CNT,		A.REQ_CHARGE_CNT
			    ,TO_CHAR(A.REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM
				,A.REG_USR_ID,				A.REG_USR_IP
				,TO_CHAR(A.MODIFY_DTM, 'YYYY-MM-DD HH24:MI:SS') AS MODIFY_DTM
				,A.MODIFY_USR_ID,			A.MODIFY_USR_IP
			FROM (
				SELECT LEVEL AS LVL, B.*,
				(
			      SELECT COUNT(*)
			      FROM FLW1200 Z
			      WHERE 1=1
			      AND Z.PRJ_ID = B.PRJ_ID
			      AND Z.PROCESS_ID = B.PROCESS_ID
			      AND Z.FLOW_ID = B.FLOW_ID
			    ) AS OPT_CNT
			    ,
			    (
			    	SELECT COUNT(*)
			        FROM REQ4100 Z
			        WHERE 1=1
			        AND Z.PRJ_ID = B.PRJ_ID
					AND Z.PROCESS_ID = B.PROCESS_ID
			        AND Z.FLOW_ID = B.FLOW_ID
			    ) AS REQ_TOTAL_CNT
			    ,
			    (
			    	SELECT COUNT(*)
			        FROM REQ4100 Z
			        WHERE 1=1
			        AND Z.PRJ_ID = B.PRJ_ID
					AND Z.PROCESS_ID = B.PROCESS_ID
			        AND Z.FLOW_ID = B.FLOW_ID
			        AND Z.REQ_CHARGER_ID = #usrId#
			    ) AS REQ_CHARGE_CNT
			    FROM FLW1100 B, FLW1000 C
				WHERE 1=1
				AND B.PRJ_ID = C.PRJ_ID
		        AND B.PROCESS_ID = C.PROCESS_ID
		        AND C.USE_CD = '01'
		        AND C.PROCESS_CONFIRM_CD = '02'
				AND B.PROCESS_ID = #processId#  
			    AND B.PRJ_ID = #prjId#
			    AND B.FLOW_ID = #signFlowId#
			    AND B.USE_CD = '01'
			    START WITH B.FLOW_NEXT_ID IS NULL
			    CONNECT BY PRIOR B.FLOW_ID = B.FLOW_NEXT_ID
			) A
			ORDER BY A.PRJ_ID, A.PROCESS_ID, A.LVL DESC
		]]>
	</select>

    
    <!-- 요구사항 클리시 디테일 정보 -->
    <select id="chk1100DAO.selectChk1100ChkInfoAjax" parameterClass="java.util.Map" resultClass="egovMap">
    
    	SELECT	*
    	FROM	(
    			<include refid="selectChk1100List"/>	
    			)	A
		WHERE	A.REQ_ID	=	#reqId#
    </select>
    
       	 <!-- 요구사항 검수요청 엑셀 조회 -->
    <select id="chk1100DAO.selectChk1100ExcelList" parameterClass="chk1100VO"  resultClass="egovMap">
	    /*chk1100DAO.selectChk1100ExcelList 요구사항 중 개발완료인 건을 조회한다.*/
		<include refid="selectChk1100List"/>


    </select>
    
       	 <!-- 요구사항 검수거부 목록 조회 -->
    <select id="chk1100DAO.selectChk1100ReqChkRejectList" parameterClass="java.util.Map"  resultClass="egovMap">
	    /* chk1100DAO.selectChk1100ReqChkRejectList 요구사항 검수거부 목록 조회 */
		SELECT	A.REQ_ID
				,A.CHK_SEQ
		        ,A.CHK_CMNT
		        ,A.ACCPT_CD
		        ,A.ACCPT_DTM
		        ,A.REG_USR_ID
		        ,SF_ADM2000_USR_INFO(A.REG_USR_ID,'1') AS USR_NM
		FROM REQ4400 A
		WHERE 1=1
		AND A.PRJ_ID = #prjId#
		AND A.REQ_ID = #reqId#
		AND ACCPT_CD = '03' /* 검수 거부된 건만 조회*/
		ORDER BY CHK_SEQ

    </select>
    
</sqlMap>