<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="prj2000DAO">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

	<!-- 권한그룹관리시 프로젝트에 생성되어 있는 권한 목록 조회 -->
	<select id="prj2000DAO.selectPrj2000PrjAuthGrpList" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* prj2000DAO.selectPrj2000PrjAuthGrpList - 권한그룹관리시 프로젝트에 생성되어 있는 권한 목록 조회 */
			SELECT	A.PRJ_ID
				,	A.AUTH_GRP_ID
			    ,	A.AUTH_GRP_NM
			    ,	A.AUTH_GRP_DESC
			    ,	A.CREATE_DT
			    ,	A.USE_CD
			    ,	A.ORD
			    ,	A.USR_TYP
			    ,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'ADM00004', A.USR_TYP, '1') AS USR_TYP_NM
			FROM	ADM1100 A
			WHERE	1=1
			AND		A.PRJ_ID = #prjId#
			ORDER BY ORD ASC
 		]]> 
	</select>
	
	<!-- 권한그룹관리시 소분류 메뉴 정보 목록 조회 -->
	<select id="prj2000DAO.selectPrj2000AuthGrpSmallMenuList" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* prj2000DAO.selectPrj2000AuthGrpSmallMenuList - 권한그룹관리시 소분류 메뉴 정보 목록 조회 */
			SELECT	A.LIC_GRP_ID
            	,	A.MENU_ID
                ,	A.MENU_NM
                ,	A.UPPER_MENU_ID
                ,	SF_ADM1000_MENU_NM(A.LIC_GRP_ID, A.MENU_ID, '2') AS UP_MENU_NM
                ,	(SELECT	UPPER_MENU_ID FROM ADM1000 Z WHERE Z.LIC_GRP_ID = A.LIC_GRP_ID AND Z.MENU_ID = A.UPPER_MENU_ID) AS UPUP_MENU_ID
			    ,	SF_ADM1000_MENU_NM(A.LIC_GRP_ID, A.MENU_ID, '3') AS UPUP_MENU_NM
			    ,	COUNT(*) OVER(PARTITION BY SF_ADM1000_MENU_NM(A.LIC_GRP_ID, A.MENU_ID, '3')) AS GRP_CNT
                ,	RANK() OVER(PARTITION BY SF_ADM1000_MENU_NM(A.LIC_GRP_ID, A.MENU_ID, '3') ORDER BY ORD ASC) AS GRP_RANK
            	,	B.PRJ_ID
                ,	B.AUTH_GRP_ID
                ,	NVL(B.MAIN_YN, 'N') AS MAIN_YN
                ,	NVL(B.ACCESS_YN, 'N') AS ACCESS_YN
                ,	NVL(B.SELECT_YN, 'N') AS SELECT_YN
                ,	NVL(B.REG_YN, 'N') AS REG_YN
                ,	NVL(B.MODIFY_YN, 'N') AS MODIFY_YN
                ,	NVL(B.DEL_YN, 'N') AS DEL_YN
                ,	NVL(B.EXCEL_YN, 'N') AS EXCEL_YN
                ,	NVL(B.PRINT_YN, 'N') AS PRINT_YN
                ,	'R' AS STATUS /* R:조회, C:등록, U:수정, D:삭제 */
                ,   A.MENU_TYPE_CD
            FROM	ADM1000 A
            	,	(SELECT * FROM ADM1200 WHERE 1=1 AND AUTH_GRP_ID = #authGrpId# AND LIC_GRP_ID = #licGrpId# AND PRJ_ID = #prjId#) B
            WHERE	1=1
            AND		A.LIC_GRP_ID = B.LIC_GRP_ID(+)
            AND		A.MENU_ID = B.MENU_ID(+)
            AND		A.LIC_GRP_ID = #licGrpId#
        ]]>
            <isEqual property="adminYn" compareValue="N">
			<![CDATA[ 
			 			AND A.MENU_ID < '000900000000'
			]]> 				  			
			</isEqual>
		<![CDATA[ 
            AND		A.USE_CD = '01'
            AND		A.LVL = 3
      
            ORDER BY ORD ASC 
 		]]> 
	</select>
	
	<!-- 신규 AuthGrp 등록전 동일 ID 존재 여부 판단 -->
	<select id="prj2000DAO.selectPrj2000DupChkAuthGrpId" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* prj2000DAO.selectPrj2000DupChkAuthGrpId - 신규 AuthGrp 등록전 동일 ID 존재 여부 판단 */
			SELECT	CASE WHEN COUNT(*) = 0 THEN 'N' ELSE 'Y' END AS DUP_YN
            FROM	ADM1100 A
            WHERE	1=1
            AND		A.PRJ_ID = #selPrjId#
            AND		A.AUTH_GRP_ID = #newAuthGrpId#
 		]]> 
	</select>
	
	<!-- 신규 권한 등록(단건) -->
	<insert id="prj2000DAO.inserPrj2000AuthGrpInfoAjax" parameterClass="java.util.Map">
		<selectKey resultClass="java.lang.String" keyProperty="newAuthGrpId">
		<![CDATA[
			/* prj2000DAO.inserPrj2000AuthGrpInfoAjax - 신규 권한 등록(새로운 AUTH_GRP_ID 따기)*/ 
			SELECT	NVL( 
							SUBSTR(NEW_AUTH_GRP_ID, 1, 11) || LPAD( (TO_NUMBER(SUBSTR(NEW_AUTH_GRP_ID, 12, 5)) + 1) , 5, '0')
						,	'AUT' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '00001'
            		) AS NEW_REQ_ID 
			FROM	(
			            SELECT	MAX(AUTH_GRP_ID)  AS NEW_AUTH_GRP_ID
			            FROM	ADM1100 A
			            WHERE	1=1
                        AND		A.PRJ_ID = #selPrjId#
			            AND		A.AUTH_GRP_ID LIKE 'AUT' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '%'
					)
		]]>
		</selectKey>
		<![CDATA[ 
			/* prj2000DAO.inserPrj2000AuthGrpInfoAjax - 화면에서 생성한 newAuthGrpId를 이용하여 신규 권한을 등록(단건)  */
			INSERT INTO ADM1100
            (	
            	PRJ_ID,			AUTH_GRP_ID,	AUTH_GRP_NM,		AUTH_GRP_DESC,
                CREATE_DT,		
                USE_CD,			ORD,			REG_DTM,			REG_USR_ID,
                REG_USR_IP,		MODIFY_DTM,		MODIFY_USR_ID,		MODIFY_USR_IP,
                LIC_GRP_ID,     USR_TYP
            )
            VALUES
            (
            	#selPrjId#,		#newAuthGrpId#,	#authGrpNm#,		#authGrpDesc#,
            	TO_CHAR(SYSDATE, 'YYYYMMDD'),
            	#authGrpUseCd#,	#authGrpOrd#,	SYSDATE,			#regUsrId#,
            	#regUsrIp#,		SYSDATE,		#modifyUsrId#,		#modifyUsrIp#,
            	#licGrpId#,     #usrTyp#	
            )
		]]>
	</insert>
		
	<!-- 선택한 권한그룹 삭제 -->
	<delete id="prj2000DAO.deletePrj2000AuthGrpInfoAjax" parameterClass="java.util.Map">
	<![CDATA[
		/* prj2000DAO.deletePrj2000AuthGrpInfoAjax - 선택한 권한그룹 삭제 */
		DELETE	
		FROM	ADM1100 A
        WHERE	1=1
        AND		A.PRJ_ID = #selPrjId#
        AND		A.AUTH_GRP_ID = #authGrpId#
        AND		A.LIC_GRP_ID = #licGrpId#
	]]>
	</delete>
	
	<!-- 권한그룹 삭제시 연결된 권한프로젝트별 사용자정보 배정 정보를 삭제 -->
	<delete id="prj2000DAO.deletePrj2000AuthPrjUsrListAjax" parameterClass="java.util.Map">
	<![CDATA[
		/* prj2000DAO.deletePrj2000AuthPrjUsrListAjax - 권한그룹 삭제시 연결된 권한프로젝트별 사용자정보 배정 정보를 삭제처리 */
		DELETE	
		FROM	ADM1300 A
		WHERE	1=1
        AND		A.PRJ_ID = #prjId#
        AND		A.AUTH_GRP_ID = #authGrpId#
	]]>
	</delete>
	
	<!-- 권한그룹 삭제시 연결되어 있는 메뉴별접근권한 정보 삭제 -->
	<delete id="prj2000DAO.deletePrj2000MenuUsrAuthListAjax" parameterClass="java.util.Map">
	<![CDATA[
		/* prj2000DAO.deletePrj2000MenuUsrAuthListAjax - 권한그룹 삭제시 연결되어 있는 메뉴별접근권한 정보 삭제 */
		DELETE	
		FROM	ADM1200 A
        WHERE	1=1
        AND		A.LIC_GRP_ID = #licGrpId#
        AND		A.PRJ_ID = #selPrjId#
        AND		A.AUTH_GRP_ID = #authGrpId#
	]]>
	</delete>
	
	<!-- 권한롤에 배정할 메뉴권한정보 등록 or 수정 프로시저-->
	<parameterMap id="savePrj2000AuthGrpMenuAuthListParam" class="java.util.Map">
		<parameter property="licGrpId"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="prjId"				javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="authGrpId"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="menuId"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="mainMenuId"		javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="accessYn"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		
		<parameter property="selectYn"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="regYn"				javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="modifyYn"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="delYn"				javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="excelYn"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		
		<parameter property="printYn"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="regUsrId"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="regUsrIp"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="modifyUsrId"		javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="modifyUsrIp"		javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		
		<parameter property="ERR_CODE"			javaType="java.lang.String"		jdbcType="VARCHAR"  mode="OUT"	nullValue=""/>
		<parameter property="ERR_MSG"			javaType="java.lang.String"		jdbcType="VARCHAR"  mode="OUT"	nullValue=""/>
	</parameterMap>
	
	<procedure id="prj2000DAO.savePrj2000AuthGrpMenuAuthListAjax" parameterMap="savePrj2000AuthGrpMenuAuthListParam" >
		{ CALL SP_PRJ2000_MENUAUTH_SAVE(?,?,?,?,?	,?	,?,?,?,?,?		,?,?,?,?,?		,?,?) }
	</procedure>
	
	
	
	<!-- 프로젝트 권한 배정된 사용자 목록 조회 -->
	<select id="prj2000DAO.selectPrj2000UsrAddListAjax" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* prj2000DAO.selectPrj2000UsrAddListAjax - 프로젝트 권한 배정된 사용자 목록 조회 */
			SELECT	A.USR_ID
				,	SF_ADM2000_USR_INFO(A.USR_ID, 1) AS USR_NM
			FROM	ADM1300 A
			WHERE	1=1
			AND		A.PRJ_ID = #prjId#
			AND		A.AUTH_GRP_ID = #authGrpId#
 		]]> 
	</select>
	
	<!-- 프로젝트 권한 배정된 사용자 목록 갯수 -->
	<select id="prj2000DAO.selectPrj2000UsrCntAjax" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		<![CDATA[ 
			/* prj2000DAO.selectPrj2000UsrCntAjax - 프로젝트 권한 배정된 사용자 목록 갯수 */
			SELECT	COUNT(*) AS CNT
			FROM	ADM1300 A
			WHERE	1=1
			AND		A.PRJ_ID = #prjId#
 		]]> 
	</select>
	
	<!-- 프로젝트 권한 전체 사용자 목록 조회 -->
	<select id="prj2000DAO.selectPrj2000UsrAllListAjax" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* prj2000DAO.selectPrj2000UsrAllListAjax - 선택한 프로젝트별 권한에 배정되지 않은 전체 사용자 목록 조회 */
			SELECT	USR_ID
			    ,	LIC_GRP_ID
			    ,	USR_NM
			    ,	NVL(EMAIL, '') AS EMAIL
			    ,	NVL(TELNO, '') AS TELNO
			    ,	NVL(ETC, '') AS ETC
			FROM	ADM2000 A
			WHERE	1=1
			AND		A.LIC_GRP_ID = #licGrpId#
			AND		A.USE_CD = '01'
			AND		NOT EXISTS (
								SELECT	B.USR_ID
			                    FROM	ADM1300 B 
			                    WHERE	1=1
			                    AND		A.USR_ID = B.USR_ID
			                    AND		B.PRJ_ID = #prjId#
			                    AND		B.AUTH_GRP_ID = #authGrpId#
							)
 		]]> 
 		<isNotEmpty property="searchSelect">
			<isNotEmpty property="searchTxt">
			<isEqual property="searchSelect" compareValue="usrId" prepend="AND">
				A.USR_ID LIKE '%'||#searchTxt#||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="usrNm" prepend="AND">
				A.USR_NM LIKE '%'||#searchTxt#||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="deptNm" prepend="AND">
				EXISTS (
							SELECT	A.USR_ID
			                FROM 	ADM7000 C 
			                WHERE	1=1
			                AND 	A.DEPT_ID = C.DEPT_ID
			                AND 	A.LIC_GRP_ID = #licGrpId#
			                AND 	C.DEPT_NAME LIKE '%'||#searchTxt#||'%'
						)
			</isEqual>
			</isNotEmpty>
		</isNotEmpty>
	</select>
	
	<!-- 사용자 배정 정보 등록 -->
	<insert id="prj2000DAO.insertPrj2000PrjUsrAuthListAjax" parameterClass="java.util.Map">
	<![CDATA[
		/* prj2000DAO.insertPrj2000PrjUsrAuthListAjax - 사용자 배정 정보 등록 */
		INSERT INTO ADM1300 A
		(
			PRJ_ID,			AUTH_GRP_ID,	USR_ID,			REG_DTM,		REG_USR_ID,
		    REG_USR_IP,		MODIFY_DTM,		MODIFY_USR_ID,	MODIFY_USR_IP
		)
		SELECT	#prjId#
			,	#authGrpId#
		    ,	A.USR_ID
		    ,	SYSDATE
		    ,	#regUsrId#
		    ,	#regUsrIp#
		    ,	SYSDATE
		    ,	#modifyUsrId#
		    ,	#modifyUsrIp#
		FROM	ADM2000 A
		WHERE	1=1
		AND		A.LIC_GRP_ID = #licGrpId#
		AND		A.USR_ID IN ($strUsrIdInSql$)
	]]>
	
		<selectKey resultClass="java.lang.String" keyProperty="prjUsrAuth">
			<![CDATA[
			SELECT	DISTINCT PRJ_ID
			FROM	ADM1300 A
			WHERE	1=1
			AND		A.PRJ_ID = #prjId#
	        AND		A.AUTH_GRP_ID = #authGrpId#
			AND		A.USR_ID IN ($strUsrIdInSql$)
			]]>
		</selectKey>
	
	</insert>
	
	<!-- 사용자 배정정보 삭제 -->
	<delete id="prj2000DAO.deletePrj2000PrjUsrAuthListAjax" parameterClass="java.util.Map">
	<![CDATA[
		/* prj2000DAO.deletePrj2000PrjUsrAuthListAjax - 사용자 배정정보 삭제 */
		DELETE	
		FROM	ADM1300 A
		WHERE	1=1
        AND		A.PRJ_ID = #prjId#
        AND		A.AUTH_GRP_ID = #authGrpId#
		AND		A.USR_ID IN ($strUsrIdInSql$)
	]]>
	</delete>
	
	<!-- 배정 삭제된 사용자 정보 조회 -->
	<select id="prj2000DAO.selectPrj2000DelUsrInfoListAjax" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* prj2000DAO.selectPrj2000DelUsrInfoListAjax - 프로젝트 권한에 배정 삭제된 사용자의 정보를 조회  */
			SELECT	USR_ID
			    ,	LIC_GRP_ID
			    ,	USR_NM
			    ,	NVL(EMAIL, '') AS EMAIL
			    ,	NVL(TELNO, '') AS TELNO
			    ,	NVL(ETC, '') AS ETC
			FROM	ADM2000 A
			WHERE	1=1
			AND		A.LIC_GRP_ID = #licGrpId#
			AND		A.USR_ID IN ($strUsrIdInSql$)
 		]]> 
	</select>
	
		<!-- 선택한 권한그룹 조회 -->
	<select id="prj2000DAO.selectPrj2000AuthGrpInfoAjax" parameterClass="java.util.Map" resultClass="egovMap" >
	<![CDATA[
		/* prj2000DAO.selectPrj2000AuthGrpInfoAjax - 선택한 권한그룹 조회 */
		SELECT	A.PRJ_ID
				,	A.AUTH_GRP_ID
			    ,	A.AUTH_GRP_NM
			    ,	A.AUTH_GRP_DESC
			    ,	A.CREATE_DT
			    ,	A.USE_CD AS AUTH_GRP_USE_CD
			    ,	A.ORD AS AUTH_GRP_ORD
			    ,	A.USR_TYP
			    ,   SF_ADM4100_COM_CD_INFO(#licGrpId#, 'ADM00004', A.USR_TYP, '1') AS USR_TYP_NM
		FROM	ADM1100 A
        WHERE	1=1
        AND		A.PRJ_ID = #prjId#
        AND		A.AUTH_GRP_ID = #authGrpId#
        AND		A.LIC_GRP_ID = #licGrpId#
	]]>
	</select>
	
	
	<update id="prj2000DAO.updatePrj2000AuthGrpInfoAjax" parameterClass="java.util.Map"  >
	<![CDATA[
		/* prj2000DAO.updatePrj2000AuthGrpInfoAjax - 선택한 권한그룹 조회 */
		UPDATE     ADM1100     SET 

            AUTH_GRP_NM = #authGrpNm#             , /* 권한명 */ 
            AUTH_GRP_DESC = #authGrpDesc#             , /* 권한설명 */ 
    
            USE_CD = #authGrpUseCd#             , /* 사용여부(코드 : CMM00001) */ 
            ORD = #authGrpOrd#             , /* 권한순서 */ 
            USR_TYP = #usrTyp#             , /* 사용자 유형(코드 : ADM00004) */ 
     
            MODIFY_DTM = SYSDATE             , /* 최종수정일시 */ 
            MODIFY_USR_ID = #modifyUsrId#             , /* 최종수정자 ID */ 
            MODIFY_USR_IP = #modifyUsrIp#              /* 최종수정자 IP */ 
		WHERE
		1=1
        AND		PRJ_ID = #prjId#
        AND		AUTH_GRP_ID = #authGrpId#
        AND		LIC_GRP_ID = #licGrpId#
	]]>
	</update>
</sqlMap>