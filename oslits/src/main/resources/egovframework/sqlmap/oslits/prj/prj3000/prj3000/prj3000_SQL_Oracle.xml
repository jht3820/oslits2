<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="prj3000DAO">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

	<!-- 라이선스 그룹, 프로젝트에 할당된 기본 산출물 메뉴정보 목록 가져오기 -->
	<select id="prj3000DAO.selectPrj3000BaseMenuList" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* prj3000DAO.selectPrj3000BaseMenuList - 라이선스 그룹, 프로젝트에 할당된 기본 산출물 메뉴정보 목록 가져오기 */
	 		SELECT T.* FROM (
      					SELECT	
								LPAD('ㄴ', LVL*4, ' ') || A.DOC_NM AS DOC_LVL
							,	A.DOC_NM
					    	,	B.LIC_GRP_ID
					    	,	A.PRJ_ID
					    	,	A.DOC_ID
					    	,	A.UPPER_DOC_ID
					    	,	SF_PRJ3000_DOC_NM(B.LIC_GRP_ID, A.DOC_ID, '2') AS UP_DOC_NM
					    	,	(SELECT	UPPER_DOC_ID FROM PRJ3000 Z JOIN (SELECT PRJ_ID,LIC_GRP_ID FROM PRJ1000) C ON(Z.PRJ_ID = C.PRJ_ID) WHERE C.LIC_GRP_ID = B.LIC_GRP_ID AND Z.DOC_ID = A.UPPER_DOC_ID AND Z.PRJ_ID = A.PRJ_ID) AS TWO_UPPER_DOC_ID
					    	,	SF_PRJ3000_DOC_NM(B.LIC_GRP_ID, A.DOC_ID, '3') AS UPUP_DOC_NM
		          			,	A.LVL
					    	,	A.ORD
					    	,	A.DOC_DESC
		          			,	A.DOC_FORM_FILE_ID
		          			,	A.DOC_FORM_FILE_SN
		          			,	A.DOC_ATCH_FILE_ID
							,	A.DOC_FILE_SN
							,	A.DOC_CONF_DESC
							,	TO_CHAR(A.DOC_ED_DTM, 'YYYY-MM-DD') AS DOC_ED_DTM
		          			,	A.USE_CD
		          			, 	SF_ADM4100_COM_CD_INFO(#licGrpId#, 'CMM00001', A.USE_CD, '1') as USE_NM
					    	,	'' AS ROW_STATUS
		            	FROM	
		            			PRJ3000 A 
		            		,	PRJ1000 B
		            	WHERE	1=1
		            		AND 	A.PRJ_ID 		= 	B.PRJ_ID
		            		AND		A.PRJ_ID		=	#prjId#
		            		AND		B.LIC_GRP_ID 	= 	#licGrpId#
		       ) T        
      		START WITH T.DOC_ID = (SELECT DOC_ID FROM PRJ3000 WHERE UPPER_DOC_ID IS NULL AND PRJ_ID	= #prjId#)
		  	CONNECT BY PRIOR T.DOC_ID = T.UPPER_DOC_ID
      		ORDER SIBLINGS BY T.ORD ASC  
 		]]> 
	</select> 

	<!-- 라이선스 그룹에 할당된 기본 산출물 메뉴정보 가져오기(단건)-->
	<select id="prj3000DAO.selectPrj3000MenuInfo" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* prj3000DAO.selectPrj3000MenuInfo - 라이선스 그룹에 할당된 기본 산출물 메뉴정보 가져오기(단건) */
			SELECT	B.LIC_GRP_ID
				,	A.DOC_ID
				,	A.PRJ_ID
				,	A.UPPER_DOC_ID
				,	SF_PRJ3000_DOC_NM(B.LIC_GRP_ID, A.DOC_ID, '2') AS UP_DOC_NM
			    ,	(SELECT	UPPER_DOC_ID FROM PRJ3000 Z JOIN (SELECT PRJ_ID,LIC_GRP_ID FROM PRJ1000) C ON(Z.PRJ_ID = C.PRJ_ID) WHERE C.LIC_GRP_ID = B.LIC_GRP_ID AND Z.DOC_ID = A.UPPER_DOC_ID AND Z.PRJ_ID = A.PRJ_ID) AS TWO_UPPER_DOC_ID
			    ,	SF_PRJ3000_DOC_NM(B.LIC_GRP_ID, A.DOC_ID, '3') AS UPUP_DOC_NM
                ,	A.DOC_NM
				,	A.LVL
			    ,	A.ORD
			    ,	A.DOC_DESC
                ,	A.DOC_FORM_FILE_ID
                ,	A.DOC_FORM_FILE_SN
                ,	A.DOC_ATCH_FILE_ID
                ,	A.DOC_FILE_SN
                ,	A.DOC_CONF_DESC
                ,	TO_CHAR(A.DOC_ED_DTM, 'YYYY-MM-DD') AS DOC_ED_DTM
                ,	A.USE_CD
                , 	SF_ADM4100_COM_CD_INFO(#licGrpId#, 'CMM00001', A.USE_CD, '1') as USE_NM
				,	A.REG_DTM
				,	A.REG_USR_ID
				,	A.REG_USR_IP
				,	A.MODIFY_DTM
				,	A.MODIFY_USR_ID
				,	A.MODIFY_USR_IP
            FROM	PRJ3000 A
            JOIN (
            	SELECT PRJ_ID,LIC_GRP_ID
                FROM PRJ1000
            ) B
            ON(A.PRJ_ID = B.PRJ_ID)
            WHERE	1=1
            AND		B.LIC_GRP_ID 	= #licGrpId#
            AND		A.DOC_ID 		= #docId#
            AND		A.PRJ_ID		= #prjId#
            ORDER BY ORD
 		]]> 
	</select>
	 
	<!-- 개발문서 상위메뉴 정보를 이용하여 개발문서 하위메뉴 기본정보 등록 -->
	<insert id="prj3000DAO.insertPrj3000MenuInfo" parameterClass="java.util.Map">
		<selectKey resultClass="java.lang.String" keyProperty="newDocId">
		<![CDATA[
			/* prj3000DAO.insertPrj3000MenuInfo - 상위메뉴에 속한 하위메뉴 DOC_ID 발급 */ 
			SELECT	NVL( 
							SUBSTR(NEW_DOC_ID, 1, 11) || LPAD( (TO_NUMBER(SUBSTR(NEW_DOC_ID, 12, 5)) + 1) , 5, '0')
						,	'DOC' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '00001'
            		) AS NEW_DPT_ID 
			FROM	(
			            SELECT	MAX(DOC_ID)  AS NEW_DOC_ID
			            FROM	PRJ3000 A
			            WHERE	1=1
			            AND		A.DOC_ID LIKE 'DOC' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '%'
					)
		]]>
		</selectKey>
		<![CDATA[ 
			/* prj3000DAO.insertPrj3000MenuInfo - 개발문서  상위메뉴 정보를 이용하여 하위메뉴 기본정보 등록  */
			INSERT INTO PRJ3000 A
			(
					DOC_ID				,	UPPER_DOC_ID  		,	DOC_NM  			,	DOC_FORM_FILE_ID	
				,	DOC_FORM_FILE_SN	,	DOC_DESC	 		,	DOC_ATCH_FILE_ID  	,	DOC_FILE_SN
			  	,	DOC_CONF_DESC		,	LVL				  	,	ORD		  			,	DOC_ED_DTM			
			  	,	USE_CD  			,	REG_DTM  			,	REG_USR_ID			,	REG_USR_IP		  	
			  	,	MODIFY_DTM			,	MODIFY_USR_ID		,	MODIFY_USR_IP		,	PRJ_ID
			)
			VALUES
			(
					#newDocId#		,	#docId#			,	'개발문서'			,	#docFormFileId#	
				,	#docFormFileSn#	,	''				,	#docAtchFileId#	,	#docFileSn#
			    ,	''				,	#lvl# + 1	    ,	''				
				,	TO_DATE(REPLACE(#docEdDtm#, '-'), 'YYYYMMDD')		
			    ,	'01'			
			    ,	SYSDATE			,	#regUsrId#		,	#regUsrIp#	    ,	SYSDATE			
			    ,	#regUsrId#		,	#regUsrIp#		,	#prjId#
			)
		]]>
	</insert>
	
	<!-- 산출물 메뉴 루트디렉토리 생성-->
	<insert id="prj3000DAO.insertPrj3000RootMenuInfo" parameterClass="java.util.Map">
	<selectKey resultClass="java.lang.String" keyProperty="newDocId">
		<![CDATA[
			/* prj3000DAO.insertPrj3000MenuInfo - 상위메뉴에 속한 하위메뉴 DOC_ID 발급 */ 
			SELECT	NVL( 
							SUBSTR(NEW_DOC_ID, 1, 11) || LPAD( (TO_NUMBER(SUBSTR(NEW_DOC_ID, 12, 5)) + 1) , 5, '0')
						,	'DOC' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '00001'
            		) AS NEW_DPT_ID 
			FROM	(
			            SELECT	MAX(DOC_ID)  AS NEW_DOC_ID
			            FROM	PRJ3000 A
			            WHERE	1=1
			            AND		A.DOC_ID LIKE 'DOC' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '%'
					)
		]]>
		</selectKey>
		<![CDATA[ 
			/* prj3000DAO.insertPrj3000RootMenuInfo - 산출물 메뉴 루트디렉토리 생성  */
			INSERT INTO PRJ3000 A
			(
					DOC_ID				,	UPPER_DOC_ID  		,	DOC_NM  			,	DOC_FORM_FILE_ID	
				,	DOC_FORM_FILE_SN	,	DOC_DESC	 		,	DOC_ATCH_FILE_ID  	,	DOC_FILE_SN
			  	,	LVL				  	,	ORD		  			,	DOC_ED_DTM			,	USE_CD  			
			  	,	REG_DTM  			,	REG_USR_ID			,	REG_USR_IP		  	,	MODIFY_DTM			
			  	,	MODIFY_USR_ID		,	MODIFY_USR_IP		,	PRJ_ID
			)
			VALUES
			(
					#newDocId#		,	null			,	#docNm#		,	null			
				,	0				,	'시스템 ROOT'		,	null		,	0
			    ,	0	    		,	1				,	null		,	'01'			
			    ,	SYSDATE			,	#regUsrId#		,	#regUsrIp#	,	SYSDATE			
			    ,	#regUsrId#		,	#regUsrIp#		,	#prjId#
			)
		]]>
	</insert>
	
	<!-- 선택한 산출물 메뉴 삭제 -->
	<delete id="prj3000DAO.deletePrj3000MenuInfo" parameterClass="java.util.Map">
	<![CDATA[
		/* prj3000DAO.deletePrj3000MenuInfo - 선택한 산출물 메뉴 삭제 */
		DELETE
		FROM	PRJ3000 A
		WHERE	1=1
		AND		(SELECT LIC_GRP_ID FROM PRJ1000 WHERE PRJ_ID=#prjId#) =  #licGrpId#
		AND		A.PRJ_ID	=	#prjId#
		AND		A.DOC_ID	IN ($docId$)
	]]>
	</delete>
	
	
	<!-- 선택한 산출물 메뉴 수정 -->
	<update id="prj3000DAO.updatePrj3000MenuInfo" parameterClass="java.util.Map">
	<![CDATA[
		/* prj3000DAO.updatePrj3000MenuInfo - 선택한 산출물 메뉴 수정 */
		UPDATE	PRJ3000 A
        SET		DOC_FORM_FILE_SN	= #docFormFileSn#
            ,	DOC_FILE_SN			= #docFileSn#
            ,	MODIFY_DTM      	= SYSDATE
            ,	MODIFY_USR_ID   	= #modifyUsrId#
            ,	MODIFY_USR_IP   	= #modifyUsrIp#
            ,	DOC_ED_DTM			= TO_DATE(REPLACE(#docEdDtm#, '-'), 'YYYYMMDD')
            ,	USE_CD				= #useCd#
            , 	DOC_NM				= #docNm#
            ,	DOC_DESC			= #docDesc#
            ,	DOC_CONF_DESC		= #docConfDesc#
            , 	ORD					= #ord#
        WHERE	1=1
        AND		(SELECT LIC_GRP_ID FROM PRJ1000 WHERE PRJ_ID=#prjId#) =  #licGrpId#
        AND		A.DOC_ID		= 	#docId#
        AND		A.PRJ_ID		=	#prjId#
	]]>
	</update>
	
	<!-- 선택한 양식 산출물 확정 처리  -->
	<update id="prj3000DAO.updatePrj3000FileSnSelect" parameterClass="java.util.Map">
	<![CDATA[
		/* prj3000DAO.updatePrj3000FileSnSelect -  선택한 산출물 양식 확정 처리 */
		UPDATE	PRJ3000 A
        SET		DOC_FORM_FILE_SN	= #docFileSn#
        	,	MODIFY_DTM      	= SYSDATE
            ,	MODIFY_USR_ID   	= #modifyUsrId#
            ,	MODIFY_USR_IP   	= #modifyUsrIp#
        WHERE	1=1
        AND		(SELECT LIC_GRP_ID FROM PRJ1000 WHERE PRJ_ID=#prjId#) =  #licGrpId#
        AND		A.DOC_ID		= #docId#
        AND		A.PRJ_ID		= #prjId#
	]]>
	</update>
	
	<!--  프로젝트에 할당된 선택 하위 메뉴 불러오기(첨부파일 압축 다운로드 사용)-->
	<select id="prj3000DAO.selectPrj3000MenuTree" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* prj3000DAO.selectPrj3000MenuTree - 프로젝트에 할당된 선택 하위 메뉴 불러오기(첨부파일 압축 다운로드 사용) */
			SELECT	LPAD('ㄴ', LVL*4, ' ') || A.DOC_NM AS DOC_LVL
				,	A.DOC_NM
			    ,	A.PRJ_ID
			    ,	A.DOC_ID
			    ,	A.UPPER_DOC_ID
                ,	A.LVL
			    ,	A.ORD
			    ,	A.DOC_DESC
                ,	A.DOC_FORM_FILE_ID
                ,	A.DOC_FORM_FILE_SN
                ,	A.DOC_ATCH_FILE_ID
                ,	A.DOC_FILE_SN
                ,	TO_CHAR(A.DOC_ED_DTM, 'YYYY-MM-DD') AS DOC_ED_DTM
                ,	A.USE_CD
			FROM	(SELECT * FROM PRJ3000 WHERE PRJ_ID = #prjId# AND USE_CD = '01') A
			WHERE	1=1
			CONNECT BY PRIOR	A.DOC_ID = A.UPPER_DOC_ID
			START WITH A.DOC_ID = #docId#
			AND		A.USE_CD = '01'
            ORDER BY A.ORD ASC
 		]]> 
	</select>
	
</sqlMap>